{"version":3,"file":"moveable.cjs.js","sources":["../src/ables/AbleManager.ts","../src/consts.ts","../src/gesto/CustomGesto.ts","../src/utils/calculateElementPosition.ts","../src/gesto/GestoUtils.ts","../src/gesto/GestoData.ts","../src/utils/getMatrixStackInfo.ts","../src/store/Store.ts","../src/groupUtils.ts","../src/renderDirections.tsx","../src/ables/snappable/bounds.ts","../src/ables/snappable/utils.ts","../src/ables/snappable/snap.ts","../src/ables/snappable/innerBounds.ts","../src/ables/snappable/snapBounds.ts","../src/ables/Draggable.tsx","../src/utils/getFixedDirection.ts","../src/ables/Resizable.ts","../src/ables/Rotatable.tsx","../src/ables/snappable/render.tsx","../src/ables/snappable/getTotalGuidelines.ts","../src/ables/Snappable.tsx","../src/utils.tsx","../src/ables/Pinchable.ts","../src/ables/Scalable.ts","../src/ables/Warpable.tsx","../src/classNames.ts","../src/ables/DragArea.tsx","../src/ables/Origin.tsx","../src/ables/Scrollable.ts","../src/ables/Default.ts","../src/ables/Padding.tsx","../src/ables/roundable/borderRadius.tsx","../src/ables/clippable/utils.tsx","../src/ables/Clippable.tsx","../src/ables/OriginDraggable.tsx","../src/ables/Roundable.tsx","../src/ables/BeforeRenderable.ts","../src/ables/Renderable.ts","../src/gesto/getAbleGesto.ts","../src/EventManager.ts","../src/utils/calculateMatrixStack.ts","../src/utils/getElementInfo.ts","../src/utils/getMoveableTargetInfo.ts","../src/utils/persist.ts","../src/MoveableManager.tsx","../src/ables/Groupable.tsx","../src/ables/Clickable.ts","../src/ables/edgeDraggable.tsx","../src/ables/IndividualGroupable.tsx","../src/ables/consts.ts","../src/Snappable/utils.ts","../src/MoveableGroup.tsx","../src/MoveableIndividualGroup.tsx","../src/InitialMoveable.tsx","../src/Moveable.tsx","../src/makeMoveable.ts","../src/index.umd.ts"],"sourcesContent":["import { Able } from \"../types\";\r\n\r\nexport function makeAble<\r\n    Name extends string,\r\n    AbleObject extends Partial<Able<any, any>>,\r\n>(name: Name, able: AbleObject) {\r\n    return {\r\n        events: [] as AbleObject[\"events\"] extends readonly any[] ? AbleObject[\"events\"] : readonly [],\r\n        props: [] as AbleObject[\"props\"] extends readonly any[] ? AbleObject[\"props\"] : readonly [],\r\n        name,\r\n        ...able,\r\n    } as const;\r\n}\r\n","import getAgent from \"@egjs/agent\";\r\nimport { IObject } from \"@daybrush/utils\";\r\nimport { MoveableInterface } from \"./types\";\r\n\r\n\r\nexport const DIRECTIONS4 = [\"n\", \"w\", \"s\", \"e\"];\r\nexport const DIRECTIONS = [\"n\", \"w\", \"s\", \"e\", \"nw\", \"ne\", \"sw\", \"se\"];\r\n\r\n\r\nfunction getSVGCursor(scale: number, degree: number) {\r\n    return `data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${32 * scale}px\" height=\"${32 * scale}px\" viewBox=\"0 0 32 32\" ><path d=\"M 16,5 L 12,10 L 14.5,10 L 14.5,22 L 12,22 L 16,27 L 20,22 L 17.5,22 L 17.5,10 L 20, 10 L 16,5 Z\" stroke-linejoin=\"round\" stroke-width=\"1.2\" fill=\"black\" stroke=\"white\" style=\"transform:rotate(${degree}deg);transform-origin: 16px 16px\"></path></svg>`;\r\n}\r\nfunction getCursorCSS(degree: number) {\r\n    const x1 = getSVGCursor(1, degree);\r\n    // const x2 = getSVGCursor(2, degree);\r\n    const degree45 = (Math.round(degree / 45) * 45) % 180;\r\n    let defaultCursor = \"ns-resize\";\r\n\r\n    if (degree45 === 135) {\r\n        defaultCursor = \"nwse-resize\";\r\n    } else if (degree45 === 45) {\r\n        defaultCursor = \"nesw-resize\";\r\n    } else if (degree45 === 90) {\r\n        defaultCursor = \"ew-resize\";\r\n    }\r\n\r\n    // tslint:disable-next-line: max-line-length\r\n    return `cursor:${defaultCursor};cursor: url('${x1}') 16 16, ${defaultCursor};`;\r\n}\r\n\r\nexport const agent = getAgent();\r\nexport const IS_WEBKIT = agent.browser.webkit;\r\nexport const IS_WEBKIT605 = IS_WEBKIT && (() => {\r\n    const navi = typeof window === \"undefined\" ? { userAgent: \"\" } : window.navigator;\r\n    const res = /applewebkit\\/([^\\s]+)/g.exec(navi.userAgent.toLowerCase());\r\n\r\n    return res ? parseFloat(res[1]) < 605 : false;\r\n})();\r\n\r\nconst browserName = agent.browser.name;\r\nconst browserVersion = parseInt(agent.browser.version, 10);\r\nconst IS_CHROME = browserName === \"chrome\";\r\nconst IS_CHROMIUM = agent.browser.chromium;\r\nconst chromiumVersion = parseInt(agent.browser.chromiumVersion, 10) || 0;\r\n\r\nexport const IS_CHROMIUM109 = (IS_CHROME && browserVersion >= 109)\r\n    || (IS_CHROMIUM && chromiumVersion >= 109);\r\nexport const IS_FIREFOX = browserName === \"firefox\";\r\nexport const IS_SAFARI_ABOVE15\r\n    = parseInt(agent.browser.webkitVersion, 10) >= 612\r\n    || browserVersion >= 15;\r\n\r\nexport const PREFIX = \"moveable-\";\r\n\r\n\r\nconst directionCSS = DIRECTIONS.map(dir => {\r\n    let top = \"\";\r\n    let left = \"\";\r\n    let originX = \"center\";\r\n    let originY = \"center\";\r\n    const offset =  `calc(var(--moveable-control-padding, 20) * -1px)`;\r\n\r\n    if (dir.indexOf(\"n\") > -1) {\r\n        top = `top: ${offset};`;\r\n        originY = `bottom`;\r\n    }\r\n    if (dir.indexOf(`s`) > -1) {\r\n        top = `top: 0px;`;\r\n        originY = `top`;\r\n    }\r\n    if (dir.indexOf(`w`) > -1) {\r\n        left = `left: ${offset};`;\r\n        originX = `right`;\r\n    }\r\n    if (dir.indexOf(`e`) > -1) {\r\n        left = `left: 0px;`;\r\n        originX = `left`;\r\n    }\r\n    return `.around-control[data-direction*=\"${dir}\"] {\r\n        ${left}${top}\r\n        transform-origin: ${originX} ${originY};\r\n    }`;\r\n}).join(\"\\n\");\r\n\r\nexport const MOVEABLE_CSS = `\r\n{\r\nposition: absolute;\r\nwidth: 1px;\r\nheight: 1px;\r\nleft: 0;\r\ntop: 0;\r\nz-index: 3000;\r\n--moveable-color: #4af;\r\n--zoom: 1;\r\n--zoompx: 1px;\r\n--moveable-line-padding: 0;\r\n--moveable-control-padding: 0;\r\nwill-change: transform;\r\noutline: 1px solid transparent;\r\n}\r\n.control-box {\r\nz-index: 0;\r\n}\r\n.line, .control {\r\nposition: absolute;\r\nleft: 0;\r\ntop: 0;\r\nwill-change: transform;\r\n}\r\n.control {\r\nwidth: 14px;\r\nheight: 14px;\r\nborder-radius: 50%;\r\nborder: 2px solid #fff;\r\nbox-sizing: border-box;\r\nbackground: #4af;\r\nbackground: var(--moveable-color);\r\nmargin-top: -7px;\r\nmargin-left: -7px;\r\nborder: 2px solid #fff;\r\nz-index: 10;\r\n}\r\n.around-control {\r\nposition: absolute;\r\nwill-change: transform;\r\nwidth: calc(var(--moveable-control-padding, 20) * 1px);\r\nheight: calc(var(--moveable-control-padding, 20) * 1px);\r\nleft: calc(var(--moveable-control-padding, 20) * -0.5px);\r\ntop: calc(var(--moveable-control-padding, 20) * -0.5px);\r\nbox-sizing: border-box;\r\nbackground: transparent;\r\nz-index: 8;\r\ncursor: alias;\r\ntransform-origin: center center;\r\n}\r\n${directionCSS}\r\n.padding {\r\nposition: absolute;\r\ntop: 0px;\r\nleft: 0px;\r\nwidth: 100px;\r\nheight: 100px;\r\ntransform-origin: 0 0;\r\n}\r\n.line {\r\nwidth: 1px;\r\nheight: 1px;\r\nbackground: #4af;\r\nbackground: var(--moveable-color);\r\ntransform-origin: 0px 50%;\r\n}\r\n.line.edge {\r\nz-index: 1;\r\nbackground: transparent;\r\n}\r\n.line.dashed {\r\nbox-sizing: border-box;\r\nbackground: transparent;\r\n}\r\n.line.dashed.horizontal {\r\nborder-top: 1px dashed #4af;\r\nborder-top-color: #4af;\r\nborder-top-color: var(--moveable-color);\r\n}\r\n.line.dashed.vertical {\r\nborder-left: 1px dashed #4af;\r\nborder-left-color: #4af;\r\nborder-left-color: var(--moveable-color);\r\n}\r\n.line.vertical {\r\ntransform: translateX(-50%);\r\n}\r\n.line.horizontal {\r\ntransform: translateY(-50%);\r\n}\r\n.line.vertical.bold {\r\nwidth: 2px;\r\n}\r\n.line.horizontal.bold {\r\nheight: 2px;\r\n}\r\n\r\n.control.origin {\r\nborder-color: #f55;\r\nbackground: #fff;\r\nwidth: 12px;\r\nheight: 12px;\r\nmargin-top: -6px;\r\nmargin-left: -6px;\r\npointer-events: none;\r\n}\r\n${[0, 15, 30, 45, 60, 75, 90, 105, 120, 135, 150, 165].map(degree => `\r\n.direction[data-rotation=\"${degree}\"], :global .view-control-rotation${degree} {\r\n${getCursorCSS(degree)}\r\n}\r\n`).join(\"\\n\")}\r\n\r\n.line.direction:before {\r\ncontent: \"\";\r\nposition: absolute;\r\nwidth: 100%;\r\nheight: calc(var(--moveable-line-padding, 0) * 1px);\r\nbottom: 0;\r\nleft: 0;\r\n}\r\n.group {\r\nz-index: -1;\r\n}\r\n.area {\r\nposition: absolute;\r\n}\r\n.area-pieces {\r\nposition: absolute;\r\ntop: 0;\r\nleft: 0;\r\ndisplay: none;\r\n}\r\n.area.avoid, .area.pass {\r\npointer-events: none;\r\n}\r\n.area.avoid+.area-pieces {\r\ndisplay: block;\r\n}\r\n.area-piece {\r\nposition: absolute;\r\n}\r\n\r\n${IS_WEBKIT605 ? `:global svg *:before {\r\ncontent:\"\";\r\ntransform-origin: inherit;\r\n}` : \"\"}\r\n`;\r\n\r\nexport const NEARBY_POS = [\r\n    [0, 1, 2],\r\n    [1, 0, 3],\r\n    [2, 0, 3],\r\n    [3, 1, 2],\r\n];\r\n\r\nexport const FLOAT_POINT_NUM = 0.0001;\r\nexport const TINY_NUM = 0.0000001;\r\nexport const MIN_SCALE = 0.000000001;\r\nexport const MAX_NUM = Math.pow(10, 10);\r\nexport const MIN_NUM = -MAX_NUM;\r\n\r\nexport const DIRECTION_REGION_TO_DIRECTION: Record<string, number[]> = {\r\n    n: [0, -1],\r\n    e: [1, 0],\r\n    s: [0, 1],\r\n    w: [-1, 0],\r\n    nw: [-1, -1],\r\n    ne: [1, -1],\r\n    sw: [-1, 1],\r\n    se: [1, 1],\r\n};\r\n\r\nexport const DIRECTION_INDEXES: IObject<number[]> = {\r\n    n: [0, 1],\r\n    e: [1, 3],\r\n    s: [3, 2],\r\n    w: [2, 0],\r\n    nw: [0],\r\n    ne: [1],\r\n    sw: [2],\r\n    se: [3],\r\n};\r\nexport const DIRECTION_ROTATIONS: IObject<number> = {\r\n    n: 0,\r\n    s: 180,\r\n    w: 270,\r\n    e: 90,\r\n    nw: 315,\r\n    ne: 45,\r\n    sw: 225,\r\n    se: 135,\r\n};\r\n\r\nexport const MOVEABLE_METHODS: Array<keyof MoveableInterface> = [\r\n    \"isMoveableElement\",\r\n    \"updateRect\",\r\n    \"updateTarget\",\r\n    \"destroy\",\r\n    \"dragStart\",\r\n    \"isInside\",\r\n    \"hitTest\",\r\n    \"setState\",\r\n    \"getRect\",\r\n    \"request\",\r\n    \"isDragging\",\r\n    \"getManager\",\r\n    \"forceUpdate\",\r\n    \"waitToChangeTarget\",\r\n    \"updateSelectors\",\r\n    \"getTargets\",\r\n    \"stopDrag\",\r\n    \"getControlBoxElement\",\r\n    \"getMoveables\",\r\n    \"getDragElement\",\r\n];\r\n","import { MoveableManagerState, OnCustomDrag } from \"../types\";\r\nimport { convertDragDist } from \"../utils\";\r\n\r\nexport function setCustomDrag(\r\n    e: any,\r\n    state: MoveableManagerState<any>,\r\n    delta: number[],\r\n    isPinch: boolean,\r\n    isConvert: boolean,\r\n    ableName = \"draggable\",\r\n) {\r\n    const result = state.gestos[ableName]?.move(delta, e.inputEvent) ?? {};\r\n    const datas = result.originalDatas || result.datas;\r\n    const ableDatas = datas[ableName] || (datas[ableName] = {});\r\n\r\n    return {\r\n        ...(isConvert ? convertDragDist(state, result) : result),\r\n        isPinch: !!isPinch,\r\n        parentEvent: true,\r\n        datas: ableDatas,\r\n        originalDatas: e.originalDatas,\r\n    };\r\n}\r\n\r\nexport default class CustomGesto {\r\n    private prevX = 0;\r\n    private prevY = 0;\r\n    private startX = 0;\r\n    private startY = 0;\r\n    private isDrag = false;\r\n    private isFlag = false;\r\n    private datas: any = {\r\n        draggable: {},\r\n    };\r\n    constructor(private ableName = \"draggable\") {\r\n        this.datas = {\r\n            [ableName]: {},\r\n        };\r\n    }\r\n\r\n    public dragStart(client: number[], e: any) {\r\n        this.isDrag = false;\r\n        this.isFlag = false;\r\n        const originalDatas = e.originalDatas;\r\n\r\n        this.datas = originalDatas;\r\n        if (!originalDatas[this.ableName]) {\r\n            originalDatas[this.ableName] = {};\r\n        }\r\n        return {\r\n            ...this.move(client, e.inputEvent),\r\n            type: \"dragstart\",\r\n        };\r\n    }\r\n    public drag(client: number[], inputEvent: any) {\r\n        return this.move([\r\n            client[0] - this.prevX,\r\n            client[1] - this.prevY,\r\n        ], inputEvent);\r\n    }\r\n    public move(delta: number[], inputEvent: any): OnCustomDrag {\r\n        let clientX!: number;\r\n        let clientY!: number;\r\n        let isFirstDrag = false;\r\n\r\n        if (!this.isFlag) {\r\n            this.prevX = delta[0];\r\n            this.prevY = delta[1];\r\n            this.startX = delta[0];\r\n            this.startY = delta[1];\r\n\r\n            clientX = delta[0];\r\n            clientY = delta[1];\r\n\r\n            this.isFlag = true;\r\n        } else {\r\n            const isPrevDrag = this.isDrag;\r\n\r\n            clientX = this.prevX + delta[0];\r\n            clientY = this.prevY + delta[1];\r\n\r\n            if (delta[0] || delta[1]) {\r\n                this.isDrag = true;\r\n            }\r\n\r\n            if (!isPrevDrag && this.isDrag) {\r\n                isFirstDrag = true;\r\n            }\r\n        }\r\n\r\n        this.prevX = clientX;\r\n        this.prevY = clientY;\r\n\r\n        return {\r\n            type: \"drag\",\r\n            clientX,\r\n            clientY,\r\n            inputEvent,\r\n            isFirstDrag,\r\n            isDrag: this.isDrag,\r\n            distX: clientX - this.startX,\r\n            distY: clientY - this.startY,\r\n            deltaX: delta[0],\r\n            deltaY: delta[1],\r\n            datas: this.datas[this.ableName],\r\n            originalDatas: this.datas,\r\n            parentEvent: true,\r\n            parentGesto: this,\r\n        };\r\n    }\r\n}\r\n","import { MoveablePosition } from \"../types\";\r\nimport { calculatePoses, calculatePosition, sign } from \"../utils\";\r\n\r\nexport function calculateElementPosition(\r\n    matrix: number[],\r\n    origin: number[],\r\n    width: number,\r\n    height: number,\r\n): MoveablePosition {\r\n    const is3d = matrix.length === 16;\r\n    const n = is3d ? 4 : 3;\r\n    const poses = calculatePoses(matrix, width, height, n);\r\n    let [\r\n        [x1, y1],\r\n        [x2, y2],\r\n        [x3, y3],\r\n        [x4, y4],\r\n    ] = poses;\r\n    let [originX, originY] = calculatePosition(matrix, origin, n);\r\n\r\n    const left = Math.min(x1, x2, x3, x4);\r\n    const top = Math.min(y1, y2, y3, y4);\r\n    const right = Math.max(x1, x2, x3, x4);\r\n    const bottom = Math.max(y1, y2, y3, y4);\r\n\r\n    x1 = (x1 - left) || 0;\r\n    x2 = (x2 - left) || 0;\r\n    x3 = (x3 - left) || 0;\r\n    x4 = (x4 - left) || 0;\r\n\r\n    y1 = (y1 - top) || 0;\r\n    y2 = (y2 - top) || 0;\r\n    y3 = (y3 - top) || 0;\r\n    y4 = (y4 - top) || 0;\r\n\r\n    originX = (originX - left) || 0;\r\n    originY = (originY - top) || 0;\r\n\r\n\r\n    const sx = matrix[0];\r\n    const sy = matrix[n + 1];\r\n    const direction = sign(sx * sy);\r\n\r\n    return {\r\n        left,\r\n        top,\r\n        right,\r\n        bottom,\r\n        origin: [originX, originY],\r\n        pos1: [x1, y1],\r\n        pos2: [x2, y2],\r\n        pos3: [x3, y3],\r\n        pos4: [x4, y4],\r\n        direction,\r\n    };\r\n}\r\n","\r\nimport {\r\n    invert, calculate, minus, plus,\r\n    convertPositionMatrix,\r\n    createScaleMatrix, multiply, fromTranslation, convertDimension,\r\n} from \"@scena/matrix\";\r\nimport {\r\n    calculatePoses, getAbsoluteMatrix, getAbsolutePosesByState,\r\n    calculatePosition, calculateInversePosition, convertTransformInfo, fillCSSObject,\r\n} from \"../utils\";\r\nimport { splitUnit, isArray, splitSpace, findIndex, dot, find, isString } from \"@daybrush/utils\";\r\nimport {\r\n    MoveableManagerState, ResizableProps, MoveableManagerInterface,\r\n    OnTransformEvent, OnTransformStartEvent, DraggableProps, OnDrag,\r\n} from \"../types\";\r\nimport { setCustomDrag } from \"./CustomGesto\";\r\nimport { parse, parseMat } from \"css-to-mat\";\r\nimport { Draggable } from \"../index.esm\";\r\nimport { calculateElementPosition } from \"../utils/calculateElementPosition\";\r\n\r\nexport function calculatePointerDist(moveable: MoveableManagerInterface, e: any) {\r\n    const { clientX, clientY, datas } = e;\r\n    const {\r\n        moveableClientRect,\r\n        rootMatrix,\r\n        is3d,\r\n        pos1,\r\n    } = moveable.state;\r\n    const { left, top } = moveableClientRect;\r\n    const n = is3d ? 4 : 3;\r\n    const [posX, posY] = minus(calculateInversePosition(rootMatrix, [clientX - left, clientY - top], n), pos1);\r\n    const [distX, distY] = getDragDist({ datas, distX: posX, distY: posY });\r\n\r\n    return [distX, distY];\r\n}\r\n\r\nexport function setDragStart(moveable: MoveableManagerInterface<any>, { datas }: any) {\r\n    const {\r\n        allMatrix,\r\n        beforeMatrix,\r\n        is3d,\r\n        left,\r\n        top,\r\n        origin,\r\n        offsetMatrix,\r\n        targetMatrix,\r\n        transformOrigin,\r\n    } = moveable.state;\r\n    const n = is3d ? 4 : 3;\r\n\r\n    datas.is3d = is3d;\r\n    datas.matrix = allMatrix;\r\n    datas.targetMatrix = targetMatrix;\r\n    datas.beforeMatrix = beforeMatrix;\r\n    datas.offsetMatrix = offsetMatrix;\r\n    datas.transformOrigin = transformOrigin;\r\n    datas.inverseMatrix = invert(allMatrix, n);\r\n    datas.inverseBeforeMatrix = invert(beforeMatrix, n);\r\n    datas.absoluteOrigin = convertPositionMatrix(plus([left, top], origin), n);\r\n    datas.startDragBeforeDist = calculate(datas.inverseBeforeMatrix, datas.absoluteOrigin, n);\r\n    datas.startDragDist = calculate(datas.inverseMatrix, datas.absoluteOrigin, n);\r\n}\r\n\r\nexport function getTransformDirection(e: any) {\r\n    return calculateElementPosition(e.datas.beforeTransform, [50, 50], 100, 100).direction;\r\n}\r\n\r\n\r\nexport interface OriginalDataTransformInfos {\r\n    startTransforms: string[];\r\n    nextTransforms: string[];\r\n    nextTransformAppendedIndexes: number[];\r\n}\r\n\r\nexport function resolveTransformEvent(moveable: MoveableManagerInterface, event: any, functionName: string) {\r\n    const {\r\n        datas,\r\n        originalDatas: {\r\n            beforeRenderable: originalDatas,\r\n        },\r\n    } = event;\r\n\r\n    const index = datas.transformIndex;\r\n\r\n    const nextTransforms = originalDatas.nextTransforms as string[];\r\n    const length = nextTransforms.length;\r\n    const nextTransformAppendedIndexes: any[] = originalDatas.nextTransformAppendedIndexes;\r\n    let nextIndex = -1;\r\n\r\n    if (index === -1) {\r\n        // translate => rotate => scale\r\n        if (functionName === \"translate\") {\r\n            nextIndex = 0;\r\n        } else if (functionName === \"rotate\") {\r\n            nextIndex = findIndex(nextTransforms, text => text.match(/scale\\(/g,));\r\n        }\r\n        if (nextIndex === -1) {\r\n            nextIndex = nextTransforms.length;\r\n        }\r\n        datas.transformIndex = nextIndex;\r\n    } else if (find(nextTransformAppendedIndexes, info => info.index === index && info.functionName === functionName)) {\r\n        nextIndex = index;\r\n    } else {\r\n        nextIndex = index + nextTransformAppendedIndexes.filter(info => info.index < index).length;\r\n    }\r\n\r\n    const result = convertTransformInfo(nextTransforms, moveable.state, nextIndex);\r\n    const targetFunction = result.targetFunction;\r\n    const matFunctionName = functionName === \"rotate\" ? \"rotateZ\" : functionName;\r\n\r\n    datas.beforeFunctionTexts = result.beforeFunctionTexts;\r\n    datas.afterFunctionTexts = result.afterFunctionTexts;\r\n    datas.beforeTransform = result.beforeFunctionMatrix;\r\n    datas.beforeTransform2 = result.beforeFunctionMatrix2;\r\n    datas.targetTansform = result.targetFunctionMatrix;\r\n    datas.afterTransform = result.afterFunctionMatrix;\r\n    datas.afterTransform2 = result.afterFunctionMatrix2;\r\n    datas.targetAllTransform = result.allFunctionMatrix;\r\n\r\n    if (targetFunction.functionName === matFunctionName) {\r\n        datas.afterFunctionTexts.splice(0, 1);\r\n        datas.isAppendTransform = false;\r\n    } else if (length > nextIndex) {\r\n        datas.isAppendTransform = true;\r\n\r\n        originalDatas.nextTransformAppendedIndexes = [...nextTransformAppendedIndexes, {\r\n            functionName,\r\n            index: nextIndex,\r\n            isAppend: true,\r\n        }];\r\n    }\r\n}\r\n\r\nexport function convertTransformFormat(datas: any, value: any, dist: any) {\r\n    return `${datas.beforeFunctionTexts.join(\" \")} ${datas.isAppendTransform ? dist : value} ${datas.afterFunctionTexts.join(\" \")}`;\r\n}\r\nexport function getTransformDist({ datas, distX, distY }: any) {\r\n    const [bx, by] = getBeforeDragDist({ datas, distX, distY });\r\n    // B * [tx, ty] * A = [bx, by] * targetMatrix;\r\n    // [tx, ty] = B-1 * [bx, by] * targetMatrix * A-1 * [0, 0];\r\n\r\n    const res = getTransfromMatrix(datas, fromTranslation([bx, by], 4));\r\n\r\n    return calculate(res, convertPositionMatrix([0, 0, 0], 4), 4);\r\n}\r\nexport function getTransfromMatrix(datas: any, targetMatrix: number[], isAfter?: boolean) {\r\n    const {\r\n        beforeTransform,\r\n        afterTransform,\r\n        beforeTransform2,\r\n        afterTransform2,\r\n        targetAllTransform,\r\n    } = datas;\r\n\r\n    // B * afterTargetMatrix * A = (targetMatrix * targetAllTransform)\r\n    // afterTargetMatrix = B-1 * targetMatrix * targetAllTransform * A-1\r\n    // nextTargetMatrix = (targetMatrix * targetAllTransform)\r\n    const nextTargetMatrix\r\n        = isAfter\r\n            ? multiply(targetAllTransform, targetMatrix, 4)\r\n            : multiply(targetMatrix, targetAllTransform, 4);\r\n\r\n    // res1 = B-1 * nextTargetMatrix\r\n    const res1 = multiply(invert(isAfter ? beforeTransform2 : beforeTransform, 4), nextTargetMatrix, 4);\r\n\r\n    // res3 = res2 * A-1\r\n    const afterTargetMatrix = multiply(res1, invert(isAfter ? afterTransform2 : afterTransform, 4), 4);\r\n\r\n    return afterTargetMatrix;\r\n}\r\nexport function getBeforeDragDist({ datas, distX, distY }: any) {\r\n    // TT = BT\r\n    const {\r\n        inverseBeforeMatrix,\r\n        is3d,\r\n        startDragBeforeDist,\r\n        absoluteOrigin,\r\n    } = datas;\r\n    const n = is3d ? 4 : 3;\r\n\r\n    // ABS_ORIGIN * [distX, distY] = BM * (ORIGIN + [tx, ty])\r\n    // BM -1 * ABS_ORIGIN * [distX, distY] - ORIGIN = [tx, ty]\r\n    return minus(\r\n        calculate(\r\n            inverseBeforeMatrix,\r\n            plus(absoluteOrigin, [distX, distY]),\r\n            n,\r\n        ),\r\n        startDragBeforeDist,\r\n    );\r\n}\r\nexport function getDragDist({ datas, distX, distY }: any, isBefore?: boolean) {\r\n    const {\r\n        inverseBeforeMatrix,\r\n        inverseMatrix,\r\n        is3d,\r\n        startDragBeforeDist,\r\n        startDragDist,\r\n        absoluteOrigin,\r\n    } = datas;\r\n    const n = is3d ? 4 : 3;\r\n\r\n    return minus(\r\n        calculate(\r\n            isBefore ? inverseBeforeMatrix : inverseMatrix,\r\n            plus(absoluteOrigin, [distX, distY]),\r\n            n,\r\n        ),\r\n        isBefore ? startDragBeforeDist : startDragDist,\r\n    );\r\n}\r\nexport function getInverseDragDist({ datas, distX, distY }: any, isBefore?: boolean) {\r\n    const {\r\n        beforeMatrix,\r\n        matrix,\r\n        is3d,\r\n        startDragBeforeDist,\r\n        startDragDist,\r\n        absoluteOrigin,\r\n    } = datas;\r\n    const n = is3d ? 4 : 3;\r\n\r\n    return minus(\r\n        calculate(\r\n            isBefore ? beforeMatrix : matrix,\r\n            plus(isBefore ? startDragBeforeDist : startDragDist, [distX, distY]),\r\n            n,\r\n        ),\r\n        absoluteOrigin,\r\n    );\r\n}\r\n\r\nexport function calculateTransformOrigin(\r\n    transformOrigin: string[],\r\n    width: number,\r\n    height: number,\r\n    prevWidth: number = width,\r\n    prevHeight: number = height,\r\n    prevOrigin: number[] = [0, 0],\r\n) {\r\n\r\n    if (!transformOrigin) {\r\n        return prevOrigin;\r\n    }\r\n    return transformOrigin.map((pos, i) => {\r\n        const { value, unit } = splitUnit(pos);\r\n\r\n        const prevSize = (i ? prevHeight : prevWidth);\r\n        const size = (i ? height : width);\r\n        if (pos === \"%\" || isNaN(value)) {\r\n            // no value but %\r\n\r\n            const measureRatio = prevSize ? prevOrigin[i] / prevSize : 0;\r\n\r\n            return size * measureRatio;\r\n        } else if (unit !== \"%\") {\r\n            return value;\r\n        }\r\n        return size * value / 100;\r\n    });\r\n}\r\n\r\nexport function getPosIndexesByDirection(direction: number[]) {\r\n    const indexes: number[] = [];\r\n\r\n    if (direction[1] >= 0) {\r\n        if (direction[0] >= 0) {\r\n            indexes.push(3);\r\n        }\r\n        if (direction[0] <= 0) {\r\n            indexes.push(2);\r\n        }\r\n    }\r\n    if (direction[1] <= 0) {\r\n        if (direction[0] >= 0) {\r\n            indexes.push(1);\r\n        }\r\n        if (direction[0] <= 0) {\r\n            indexes.push(0);\r\n        }\r\n    }\r\n    return indexes;\r\n}\r\nexport function getPosesByDirection(\r\n    poses: number[][],\r\n    direction: number[],\r\n) {\r\n    /*\r\n    [-1, -1](pos1)       [0, -1](pos1,pos2)       [1, -1](pos2)\r\n    [-1, 0](pos1, pos3)                           [1, 0](pos2, pos4)\r\n    [-1, 1](pos3)        [0, 1](pos3, pos4)       [1, 1](pos4)\r\n    */\r\n    return getPosIndexesByDirection(direction).map(index => poses[index]);\r\n}\r\n\r\nexport function getPosBySingleDirection(\r\n    poses: number[][],\r\n    direction: number,\r\n) {\r\n    const ratio = (direction + 1) / 2;\r\n    return [\r\n        dot(poses[0][0], poses[1][0], ratio, 1 - ratio),\r\n        dot(poses[0][1], poses[1][1], ratio, 1 - ratio),\r\n    ];\r\n}\r\n\r\nexport function getPosByDirection(\r\n    poses: number[][],\r\n    direction: number[],\r\n) {\r\n    const top = getPosBySingleDirection([poses[0], poses[1]], direction[0]);\r\n    const bottom = getPosBySingleDirection([poses[2], poses[3]], direction[0]);\r\n\r\n    return getPosBySingleDirection([top, bottom], direction[1]);\r\n}\r\n\r\nfunction getDist(\r\n    startPos: number[],\r\n    matrix: number[],\r\n    width: number,\r\n    height: number,\r\n    n: number,\r\n    fixedDirection: number[],\r\n) {\r\n    const poses = calculatePoses(matrix, width, height, n);\r\n    const fixedPos = getPosByDirection(poses, fixedDirection);\r\n    const distX = startPos[0] - fixedPos[0];\r\n    const distY = startPos[1] - fixedPos[1];\r\n\r\n    return [distX, distY];\r\n}\r\nexport function getNextMatrix(\r\n    offsetMatrix: number[],\r\n    targetMatrix: number[],\r\n    origin: number[],\r\n    n: number,\r\n) {\r\n    return multiply(\r\n        offsetMatrix,\r\n        getAbsoluteMatrix(targetMatrix, n, origin),\r\n        n,\r\n    );\r\n}\r\nexport function getNextTransformMatrix(\r\n    state: MoveableManagerState<any>,\r\n    datas: any,\r\n    transform: string | number[],\r\n    isAllTransform?: boolean,\r\n) {\r\n    const {\r\n        transformOrigin,\r\n        offsetMatrix,\r\n        is3d,\r\n    } = state;\r\n    const n = is3d ? 4 : 3;\r\n    let targetTransform!: number[];\r\n\r\n    if (isString(transform)) {\r\n        const {\r\n            beforeTransform,\r\n            afterTransform,\r\n        } = datas;\r\n\r\n        if (isAllTransform) {\r\n            targetTransform = convertDimension(parseMat(transform), 4, n);\r\n        } else {\r\n            targetTransform = convertDimension(\r\n                multiply(multiply(beforeTransform, parseMat([transform]), 4), afterTransform, 4),\r\n                4, n,\r\n            );\r\n        }\r\n    } else {\r\n        targetTransform = transform;\r\n    }\r\n\r\n    return getNextMatrix(\r\n        offsetMatrix,\r\n        targetTransform,\r\n        transformOrigin,\r\n        n,\r\n    );\r\n}\r\nexport function scaleMatrix(\r\n    state: any,\r\n    scale: number[],\r\n) {\r\n    const {\r\n        transformOrigin,\r\n        offsetMatrix,\r\n        is3d,\r\n        targetMatrix,\r\n        targetAllTransform,\r\n    } = state;\r\n    const n = is3d ? 4 : 3;\r\n\r\n    return getNextMatrix(\r\n        offsetMatrix,\r\n        multiply(targetAllTransform || targetMatrix, createScaleMatrix(scale, n), n),\r\n        transformOrigin,\r\n        n,\r\n    );\r\n}\r\n\r\nexport function fillTransformStartEvent(moveable: MoveableManagerInterface, e: any): OnTransformStartEvent {\r\n    const originalDatas = getBeforeRenderableDatas(e);\r\n    return {\r\n        setTransform: (transform: string | string[], index = -1) => {\r\n            originalDatas.startTransforms = isArray(transform) ? transform : splitSpace(transform);\r\n            setTransformIndex(moveable, e, index);\r\n        },\r\n        setTransformIndex: (index: number) => {\r\n            setTransformIndex(moveable, e, index);\r\n        },\r\n    };\r\n}\r\nexport function setDefaultTransformIndex(moveable: MoveableManagerInterface, e: any, property: string) {\r\n    const originalDatas = getBeforeRenderableDatas(e);\r\n    const startTransforms = originalDatas.startTransforms;\r\n\r\n    setTransformIndex(moveable, e, findIndex<string>(startTransforms, func => func.indexOf(`${property}(`) === 0));\r\n}\r\nexport function setTransformIndex(moveable: MoveableManagerInterface, e: any, index: number) {\r\n    const originalDatas = getBeforeRenderableDatas(e);\r\n    const datas = e.datas;\r\n\r\n    datas.transformIndex = index;\r\n    if (index === -1) {\r\n        return;\r\n    }\r\n    const transform = originalDatas.startTransforms[index];\r\n\r\n    if (!transform) {\r\n        return;\r\n    }\r\n    const state = moveable.state;\r\n    const info = parse([transform], {\r\n        \"x%\": v => v / 100 * state.offsetWidth,\r\n        \"y%\": v => v / 100 * state.offsetHeight,\r\n    });\r\n\r\n    datas.startValue = info[0].functionValue;\r\n}\r\nexport function fillOriginalTransform(\r\n    e: any,\r\n    transform: string,\r\n) {\r\n    const originalDatas = getBeforeRenderableDatas(e);\r\n\r\n    originalDatas.nextTransforms = splitSpace(transform);\r\n    // originalDatas.nextTargetMatrix = parseMat(transform);\r\n}\r\nexport function getBeforeRenderableDatas(e: any) {\r\n    return e.originalDatas.beforeRenderable;\r\n}\r\nexport function getNextTransforms(e: any) {\r\n    const {\r\n        originalDatas: {\r\n            beforeRenderable: originalDatas,\r\n        },\r\n    } = e;\r\n\r\n    return originalDatas.nextTransforms as string[];\r\n}\r\nexport function getNextTransformText(e: any) {\r\n    return (getNextTransforms(e) || []).join(\" \");\r\n}\r\n\r\nexport function getNextStyle(e: any) {\r\n    return getBeforeRenderableDatas(e).nextStyle;\r\n}\r\n\r\nexport function fillTransformEvent(\r\n    moveable: MoveableManagerInterface<DraggableProps>,\r\n    nextTransform: string,\r\n    delta: number[],\r\n    isPinch: boolean,\r\n    e: any,\r\n): OnTransformEvent {\r\n    fillOriginalTransform(e, nextTransform);\r\n\r\n    const drag = Draggable.drag!(\r\n        moveable,\r\n        setCustomDrag(e, moveable.state, delta, isPinch, false),\r\n    ) as OnDrag;\r\n    const afterTransform = drag ? drag.transform : nextTransform;\r\n    return {\r\n        transform: nextTransform,\r\n        drag: drag as OnDrag,\r\n        ...fillCSSObject({\r\n            transform: afterTransform,\r\n        }, e),\r\n        afterTransform,\r\n    };\r\n}\r\n\r\nexport function getTranslateFixedPosition(\r\n    moveable: MoveableManagerInterface<any>,\r\n    transform: string | number[],\r\n    fixedDirection: number[],\r\n    fixedOffset: number[],\r\n    datas: any,\r\n    isAllTransform?: boolean,\r\n) {\r\n    const nextMatrix = getNextTransformMatrix(moveable.state, datas, transform, isAllTransform);\r\n    const nextFixedPosition = getDirectionOffset(\r\n        moveable,\r\n        fixedDirection,\r\n        fixedOffset,\r\n        nextMatrix,\r\n    );\r\n\r\n    return nextFixedPosition;\r\n}\r\n\r\nexport function getTranslateDist(\r\n    moveable: MoveableManagerInterface<any>,\r\n    transform: string,\r\n    fixedDirection: number[],\r\n    fixedPosition: number[],\r\n    fixedOffset: number[],\r\n    datas: any,\r\n    isAllTransform?: boolean,\r\n) {\r\n    const nextFixedPosition = getTranslateFixedPosition(\r\n        moveable,\r\n        transform,\r\n        fixedDirection,\r\n        fixedOffset,\r\n        datas,\r\n        isAllTransform,\r\n    );\r\n    const state = moveable.state;\r\n    const {\r\n        left,\r\n        top,\r\n    } = state;\r\n\r\n    const groupable = moveable.props.groupable;\r\n    const groupLeft = groupable ? left : 0;\r\n    const groupTop = groupable ? top : 0;\r\n    const dist = minus(fixedPosition, nextFixedPosition);\r\n\r\n    return minus(dist, [groupLeft, groupTop]);\r\n}\r\nexport function getScaleDist(\r\n    moveable: MoveableManagerInterface<any>,\r\n    transform: string,\r\n    fixedDirection: number[],\r\n    fixedPosition: number[],\r\n    fixedOffset: number[],\r\n    datas: any,\r\n    isAllTransform?: boolean,\r\n) {\r\n    const dist = getTranslateDist(\r\n        moveable,\r\n        transform,\r\n        fixedDirection,\r\n        fixedPosition,\r\n        fixedOffset,\r\n        datas,\r\n        isAllTransform,\r\n    );\r\n\r\n    return dist;\r\n}\r\nexport function getOriginDirection(moveable: MoveableManagerInterface<any>) {\r\n    const {\r\n        width,\r\n        height,\r\n        transformOrigin,\r\n    } = moveable.state;\r\n    return [\r\n        -1 + transformOrigin[0] / (width / 2),\r\n        -1 + transformOrigin[1] / (height / 2),\r\n    ];\r\n}\r\nexport function getDirectionByPos(\r\n    pos: number[],\r\n    width: number,\r\n    height: number,\r\n) {\r\n    return [\r\n        width ? -1 + pos[0] / (width / 2) : 0,\r\n        height ? -1 + pos[1] / (height / 2) : 0,\r\n    ];\r\n}\r\nexport function getDirectionOffset(\r\n    moveable: MoveableManagerInterface,\r\n    fixedDirection: number[],\r\n    fixedOffset: number[],\r\n    nextMatrix: number[] = moveable.state.allMatrix,\r\n) {\r\n    const {\r\n        width,\r\n        height,\r\n        is3d,\r\n    } = moveable.state;\r\n    const n = is3d ? 4 : 3;\r\n    const fixedOffsetPosition = [\r\n        width / 2 * (1 + fixedDirection[0]) + fixedOffset[0],\r\n        height / 2 * (1 + fixedDirection[1]) + fixedOffset[1],\r\n    ];\r\n    return calculatePosition(nextMatrix, fixedOffsetPosition, n);\r\n}\r\nexport function getRotateDist(\r\n    moveable: MoveableManagerInterface<any>,\r\n    rotateDist: number,\r\n    datas: any,\r\n) {\r\n    const fixedDirection = datas.fixedDirection;\r\n    const fixedPosition = datas.fixedPosition;\r\n    const fixedOffset = datas.fixedOffset;\r\n\r\n    return getTranslateDist(\r\n        moveable,\r\n        `rotate(${rotateDist}deg)`,\r\n        fixedDirection,\r\n        fixedPosition,\r\n        fixedOffset,\r\n        datas,\r\n    );\r\n}\r\nexport function getResizeDist(\r\n    moveable: MoveableManagerInterface<any>,\r\n    width: number,\r\n    height: number,\r\n    fixedPosition: number[],\r\n    transformOrigin: string[],\r\n    datas: any,\r\n) {\r\n    const {\r\n        groupable,\r\n    } = moveable.props;\r\n    const state = moveable.state;\r\n    const {\r\n        transformOrigin: prevOrigin,\r\n        offsetMatrix,\r\n        is3d,\r\n        width: prevWidth,\r\n        height: prevHeight,\r\n        left,\r\n        top,\r\n    } = state;\r\n    const fixedDirection = datas.fixedDirection;\r\n    const targetMatrix = datas.nextTargetMatrix || state.targetMatrix;\r\n    const n = is3d ? 4 : 3;\r\n    const nextOrigin = calculateTransformOrigin(\r\n        transformOrigin!,\r\n        width,\r\n        height,\r\n        prevWidth,\r\n        prevHeight,\r\n        prevOrigin,\r\n    );\r\n    const groupLeft = groupable ? left : 0;\r\n    const groupTop = groupable ? top : 0;\r\n    const nextMatrix = getNextMatrix(offsetMatrix, targetMatrix, nextOrigin, n);\r\n    const dist = getDist(fixedPosition, nextMatrix, width, height, n, fixedDirection);\r\n\r\n    return minus(dist, [groupLeft, groupTop]);\r\n}\r\nexport function getAbsolutePosition(\r\n    moveable: MoveableManagerInterface<ResizableProps>,\r\n    direction: number[],\r\n) {\r\n    return getPosByDirection(getAbsolutePosesByState(moveable.state), direction);\r\n}\r\n","import { MoveableManagerInterface } from \"../types\";\r\n\r\nexport function getGestoData(moveable: MoveableManagerInterface, ableName: string) {\r\n    const targetGesto = moveable.targetGesto;\r\n    const controlGesto = moveable.controlGesto;\r\n    let data!: Record<string, any>;\r\n\r\n    if (targetGesto?.isFlag()) {\r\n        data = targetGesto.getEventData()[ableName];\r\n    }\r\n\r\n    if (!data && controlGesto?.isFlag()) {\r\n        data = controlGesto.getEventData()[ableName];\r\n    }\r\n\r\n    return data || {};\r\n}\r\n","import {\r\n    convertCSStoMatrix, convertDimension,\r\n    createIdentityMatrix, createOriginMatrix, createScaleMatrix,\r\n} from \"@scena/matrix\";\r\nimport { getCachedStyle } from \"../store/Store\";\r\nimport { IS_WEBKIT, IS_SAFARI_ABOVE15, IS_FIREFOX, IS_CHROMIUM109 } from \"../consts\";\r\nimport { MatrixInfo } from \"../types\";\r\nimport {\r\n    getOffsetInfo, getElementTransform,\r\n    getTransformMatrix, getPositionFixedInfo,\r\n    convert3DMatrixes, getOffsetPosInfo,\r\n    getSVGMatrix, getBodyOffset, getAbsoluteMatrix,\r\n} from \"../utils\";\r\nimport { getDocumentBody, getDocumentElement } from \"@daybrush/utils\";\r\nimport { parseMat } from \"css-to-mat\";\r\n\r\n\r\nexport function getShadowRoot(parentElement: HTMLElement | SVGElement) {\r\n    if (parentElement && parentElement.getRootNode) {\r\n        const rootNode = parentElement.getRootNode();\r\n\r\n        if (rootNode.nodeType === 11) {\r\n            return rootNode;\r\n        }\r\n    }\r\n    return;\r\n}\r\n\r\n\r\nfunction getIndividualTransforms(getStyle: (property: string) => any) {\r\n    const scale = getStyle(\"scale\") as string;\r\n    const rotate = getStyle(\"rotate\") as string;\r\n    const translate = getStyle(\"translate\") as string;\r\n    const individualTransforms: string[] = [];\r\n\r\n    if (translate && translate !== \"0px\" && translate !== \"none\") {\r\n        individualTransforms.push(`translate(${translate.split(/\\s+/).join(\",\")})`);\r\n    }\r\n    if (rotate && rotate !== \"1\" && rotate !== \"none\") {\r\n        individualTransforms.push(`rotate(${rotate})`);\r\n    }\r\n    if (scale && scale !== \"1\" && scale !== \"none\") {\r\n        individualTransforms.push(`scale(${scale.split(/\\s+/).join(\",\")})`);\r\n    }\r\n    return individualTransforms;\r\n}\r\n\r\nexport interface MatrixStackInfo {\r\n    zoom: number;\r\n    offsetContainer: HTMLElement;\r\n    matrixes: MatrixInfo[];\r\n    targetMatrix: number[];\r\n    transformOrigin: number[];\r\n    targetOrigin: number[];\r\n    is3d: boolean;\r\n    hasFixed: boolean;\r\n}\r\nexport function getMatrixStackInfo(\r\n    target: SVGElement | HTMLElement,\r\n    container?: SVGElement | HTMLElement | null,\r\n    checkContainer?: boolean,\r\n): MatrixStackInfo {\r\n    let el: SVGElement | HTMLElement | null = target;\r\n    const matrixes: MatrixInfo[] = [];\r\n    const documentElement = getDocumentElement(target) || getDocumentBody(target);\r\n    let requestEnd = !checkContainer && target === container || target === documentElement;\r\n    let isEnd = requestEnd;\r\n    let is3d = false;\r\n    let n = 3;\r\n    let transformOrigin!: number[];\r\n    let targetTransformOrigin!: number[];\r\n    let targetMatrix!: number[];\r\n\r\n    let hasFixed = false;\r\n    let offsetContainer = getOffsetInfo(container, container, true).offsetParent;\r\n    let zoom = 1;\r\n\r\n    while (el && !isEnd) {\r\n        isEnd = requestEnd;\r\n        const getStyle = getCachedStyle(el);\r\n        const position = getStyle(\"position\");\r\n        const transform = getElementTransform(el);\r\n        const isFixed = position === \"fixed\";\r\n        const individualTransforms = getIndividualTransforms(getStyle);\r\n        let matrix: number[] = convertCSStoMatrix(getTransformMatrix(transform));\r\n        let offsetParent: HTMLElement;\r\n        let isOffsetEnd = false;\r\n        let isStatic = false;\r\n        let parentClientLeft = 0;\r\n        let parentClientTop = 0;\r\n        let fixedClientLeft = 0;\r\n        let fixedClientTop = 0;\r\n        let fixedInfo: {\r\n            hasTransform: boolean;\r\n            fixedContainer: HTMLElement | null;\r\n        } = {\r\n            hasTransform: false,\r\n            fixedContainer: null,\r\n        };\r\n\r\n        if (isFixed) {\r\n            hasFixed = true;\r\n            fixedInfo = getPositionFixedInfo(el);\r\n            offsetContainer = fixedInfo.fixedContainer!;\r\n        }\r\n\r\n        // convert 3 to 4\r\n        const length = matrix.length;\r\n\r\n        if (!is3d && (length === 16 || individualTransforms.length)) {\r\n            is3d = true;\r\n            n = 4;\r\n\r\n            convert3DMatrixes(matrixes);\r\n            if (targetMatrix) {\r\n                targetMatrix = convertDimension(targetMatrix, 3, 4);\r\n            }\r\n        }\r\n        if (is3d && length === 9) {\r\n            matrix = convertDimension(matrix, 3, 4);\r\n        }\r\n        const {\r\n            tagName,\r\n            hasOffset,\r\n            isSVG,\r\n            origin,\r\n            targetOrigin,\r\n            offset: offsetPos,\r\n        } = getOffsetPosInfo(el, target);\r\n        let [\r\n            offsetLeft,\r\n            offsetTop,\r\n        ] = offsetPos;\r\n\r\n        if (tagName === \"svg\" && !(target as SVGSVGElement).ownerSVGElement && targetMatrix) {\r\n            // scale matrix for svg's SVGElements.\r\n            matrixes.push({\r\n                type: \"target\",\r\n                target: el,\r\n                matrix: getSVGMatrix(el as SVGSVGElement, n),\r\n            });\r\n            matrixes.push({\r\n                type: \"offset\",\r\n                target: el,\r\n                matrix: createIdentityMatrix(n),\r\n            });\r\n        }\r\n\r\n\r\n        const targetZoom = parseFloat(getStyle(\"zoom\")) || 1;\r\n\r\n        if (isFixed) {\r\n            offsetParent = fixedInfo.fixedContainer!;\r\n            isOffsetEnd = true;\r\n        } else {\r\n            const offsetInfo = getOffsetInfo(el, container, false, true, getStyle);\r\n            const offsetZoom = offsetInfo.offsetZoom;\r\n\r\n            offsetParent = offsetInfo.offsetParent;\r\n            isOffsetEnd = offsetInfo.isEnd;\r\n            isStatic = offsetInfo.isStatic;\r\n            zoom *= offsetZoom;\r\n\r\n            if ((offsetInfo.isCustomElement || offsetZoom !== 1) && isStatic) {\r\n                offsetLeft -= offsetParent.offsetLeft;\r\n                offsetTop -= offsetParent.offsetTop;\r\n            } else if (IS_FIREFOX || IS_CHROMIUM109) {\r\n                const parentSlotElement = offsetInfo.parentSlotElement;\r\n\r\n                if (parentSlotElement) {\r\n                    let customOffsetParent: HTMLElement | null = offsetParent;\r\n                    let customOffsetLeft = 0;\r\n                    let customOffsetTop = 0;\r\n\r\n                    while (customOffsetParent) {\r\n                        if (!getShadowRoot(customOffsetParent)) {\r\n                            break;\r\n                        }\r\n                        customOffsetLeft += customOffsetParent.offsetLeft;\r\n                        customOffsetTop += customOffsetParent.offsetTop;\r\n                        customOffsetParent = customOffsetParent.offsetParent as HTMLElement;\r\n                    }\r\n                    offsetLeft -= customOffsetLeft;\r\n                    offsetTop -= customOffsetTop;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (\r\n            IS_WEBKIT && !IS_SAFARI_ABOVE15\r\n            && hasOffset && !isSVG && isStatic\r\n            && (position === \"relative\" || position === \"static\")\r\n        ) {\r\n            offsetLeft -= offsetParent.offsetLeft;\r\n            offsetTop -= offsetParent.offsetTop;\r\n            requestEnd = requestEnd || isOffsetEnd;\r\n        }\r\n\r\n\r\n        if (isFixed) {\r\n            if (hasOffset && fixedInfo.hasTransform) {\r\n                // border\r\n                fixedClientLeft = offsetParent.clientLeft;\r\n                fixedClientTop = offsetParent.clientTop;\r\n            }\r\n        } else {\r\n            if (hasOffset && offsetContainer !== offsetParent) {\r\n                // border\r\n                parentClientLeft = offsetParent.clientLeft;\r\n                parentClientTop = offsetParent.clientTop;\r\n            }\r\n            if (hasOffset && offsetParent === documentElement) {\r\n                const margin = getBodyOffset(el, false);\r\n\r\n                offsetLeft += margin[0];\r\n                offsetTop += margin[1];\r\n            }\r\n        }\r\n\r\n        matrixes.push({\r\n            type: \"target\",\r\n            target: el,\r\n            matrix: getAbsoluteMatrix(matrix, n, origin),\r\n        });\r\n\r\n        if (individualTransforms.length) {\r\n            matrixes.push({\r\n                type: \"offset\",\r\n                target: el,\r\n                matrix: createIdentityMatrix(n),\r\n            });\r\n\r\n            matrixes.push({\r\n                type: \"target\",\r\n                target: el,\r\n                matrix: getAbsoluteMatrix(parseMat(individualTransforms), n, origin),\r\n            });\r\n        }\r\n        if (hasOffset) {\r\n            const isElementTarget = el === target;\r\n            const scrollLeft = isElementTarget ? 0 : el.scrollLeft;\r\n            const scrollTop = isElementTarget ? 0 : el.scrollTop;\r\n\r\n            matrixes.push({\r\n                type: \"offset\",\r\n                target: el,\r\n                matrix: createOriginMatrix([\r\n                    offsetLeft - scrollLeft + parentClientLeft - fixedClientLeft,\r\n                    offsetTop - scrollTop + parentClientTop - fixedClientTop,\r\n                ], n),\r\n            });\r\n        } else {\r\n            // svg\r\n            matrixes.push({\r\n                type: \"offset\",\r\n                target: el,\r\n                origin,\r\n            });\r\n        }\r\n        // transform으로 계산되지 않는 zoom을 위한 (0, 0) 을 기준 matrix 추가.\r\n        if (targetZoom !== 1) {\r\n            matrixes.push({\r\n                type: \"zoom\",\r\n                target: el,\r\n                matrix: getAbsoluteMatrix(createScaleMatrix([targetZoom, targetZoom], n), n, [0, 0]),\r\n            });\r\n        }\r\n        if (!targetMatrix) {\r\n            targetMatrix = matrix;\r\n        }\r\n        if (!transformOrigin) {\r\n            transformOrigin = origin;\r\n        }\r\n        if (!targetTransformOrigin) {\r\n            targetTransformOrigin = targetOrigin;\r\n        }\r\n\r\n        if (isEnd || isFixed) {\r\n            break;\r\n        } else {\r\n            el = offsetParent;\r\n            requestEnd = isOffsetEnd;\r\n        }\r\n        if (!checkContainer || el === documentElement) {\r\n            isEnd = requestEnd;\r\n        }\r\n    }\r\n    if (!targetMatrix) {\r\n        targetMatrix = createIdentityMatrix(n);\r\n    }\r\n    if (!transformOrigin) {\r\n        transformOrigin = [0, 0];\r\n    }\r\n    if (!targetTransformOrigin) {\r\n        targetTransformOrigin = [0, 0];\r\n    }\r\n\r\n    return {\r\n        zoom,\r\n        offsetContainer,\r\n        matrixes,\r\n        targetMatrix,\r\n        transformOrigin,\r\n        targetOrigin: targetTransformOrigin,\r\n        is3d,\r\n        hasFixed,\r\n    };\r\n}\r\n","import { find, getWindow } from \"@daybrush/utils\";\r\nimport { getClientRect } from \"../utils\";\r\nimport { MoveableClientRect } from \"../types\";\r\nimport { getMatrixStackInfo, MatrixStackInfo } from \"../utils/getMatrixStackInfo\";\r\n\r\nlet cacheStyleMap: Map<Element, {\r\n    style: CSSStyleDeclaration;\r\n    cached: Record<string, any>;\r\n}> | null = null;\r\nlet clientRectStyleMap: Map<Element, MoveableClientRect> | null = null;\r\n\r\nlet matrixContainerInfos: Array<[\r\n    [SVGElement | HTMLElement, SVGElement | HTMLElement | null | undefined],\r\n    MatrixStackInfo\r\n]> | null = null;\r\n\r\nexport type GetStyle = (propertyName: string) => any;\r\nexport function setStoreCache(useCache?: boolean) {\r\n    if (useCache) {\r\n        if (window.Map) {\r\n            cacheStyleMap = new Map();\r\n            clientRectStyleMap = new Map();\r\n        }\r\n        matrixContainerInfos = [];\r\n    } else {\r\n        cacheStyleMap = null;\r\n        matrixContainerInfos = null;\r\n        clientRectStyleMap = null;\r\n    }\r\n}\r\n\r\nexport function getCachedClientRect(el: HTMLElement | SVGElement): MoveableClientRect {\r\n    const clientRect = clientRectStyleMap?.get(el);\r\n\r\n    if (clientRect) {\r\n        return clientRect;\r\n    }\r\n    const nextClientRect = getClientRect(el, true);\r\n\r\n    if (clientRectStyleMap) {\r\n        clientRectStyleMap.set(el, nextClientRect);\r\n    }\r\n    return nextClientRect;\r\n}\r\n\r\nexport function getCachedMatrixContainerInfo(\r\n    target: SVGElement | HTMLElement,\r\n    container?: SVGElement | HTMLElement | null,\r\n) {\r\n    if (matrixContainerInfos) {\r\n        const result = find(matrixContainerInfos, info => info[0][0] == target && info[0][1] == container);\r\n\r\n        if (result) {\r\n            return result[1];\r\n        }\r\n    }\r\n    const result = getMatrixStackInfo(target, container, true);\r\n\r\n    if (matrixContainerInfos) {\r\n        matrixContainerInfos.push([[target, container], result]);\r\n    }\r\n    return result;\r\n}\r\nexport function getCachedStyle(element: Element): GetStyle {\r\n    let cache = cacheStyleMap?.get(element);\r\n\r\n    if (!cache) {\r\n        const nextStyle = getWindow(element).getComputedStyle(element);\r\n\r\n        if (!cacheStyleMap) {\r\n            return (property: string) => {\r\n                return (nextStyle as any)[property];\r\n            };\r\n        }\r\n        cache = {\r\n            style: nextStyle,\r\n            cached: {},\r\n        };\r\n        cacheStyleMap.set(element, cache);\r\n    }\r\n    const cached = cache.cached;\r\n    const style = cache.style;\r\n\r\n    return (property: string) => {\r\n        if (!(property in cached)) {\r\n            cached[property] = (style as any)[property];\r\n        }\r\n        return cached[property];\r\n    };\r\n}\r\n","import { Able, MoveableGroupInterface, MoveableManagerInterface, MoveableManagerState } from \"./types\";\r\nimport CustomGesto, { setCustomDrag } from \"./gesto/CustomGesto\";\r\nimport { getAbsolutePosesByState } from \"./utils\";\r\nimport { calculate, createRotateMatrix } from \"@scena/matrix\";\r\nimport { getPosByDirection } from \"./gesto/GestoUtils\";\r\n\r\nexport function fillChildEvents(\r\n    moveable: MoveableGroupInterface<any, any>,\r\n    name: string,\r\n    e: any,\r\n): any[] {\r\n    const datas = e.originalDatas;\r\n\r\n    datas.groupable = datas.groupable || {};\r\n\r\n    const groupableDatas = datas.groupable;\r\n\r\n    groupableDatas.childDatas = groupableDatas.childDatas || [];\r\n\r\n    const childDatas = groupableDatas.childDatas;\r\n\r\n    return moveable.moveables.map((_, i) => {\r\n        childDatas[i] = childDatas[i] || {};\r\n        childDatas[i][name] = childDatas[i][name] || {};\r\n\r\n        return {\r\n            ...e,\r\n            isRequestChild: true,\r\n            datas: childDatas[i][name],\r\n            originalDatas: childDatas[i],\r\n        };\r\n    });\r\n}\r\nexport function triggerChildGesto(\r\n    moveable: MoveableGroupInterface<any, any>,\r\n    able: Able,\r\n    type: string,\r\n    delta: number[],\r\n    e: any,\r\n    isConvert: boolean,\r\n    ableName: string,\r\n) {\r\n    const isStart = !!type.match(/Start$/g);\r\n    const isEnd = !!type.match(/End$/g);\r\n    const isPinch = e.isPinch;\r\n    const datas = e.datas;\r\n    const events = fillChildEvents(moveable, able.name, e);\r\n    const moveables = moveable.moveables;\r\n\r\n    const childEvents: any[] = [];\r\n    const eventParams = events.map((ev, i) => {\r\n        const childMoveable = moveables[i];\r\n        const state = childMoveable.state as MoveableManagerState<any>;\r\n        const gestos = state.gestos;\r\n        let childEvent: any = ev;\r\n\r\n        if (isStart) {\r\n            childEvent = new CustomGesto(ableName).dragStart(delta, ev);\r\n            childEvents.push(childEvent);\r\n        } else {\r\n            if (!gestos[ableName]) {\r\n                gestos[ableName] = datas.childGestos[i];\r\n            }\r\n            if (!gestos[ableName]) {\r\n                return;\r\n            }\r\n            childEvent = setCustomDrag(ev, state, delta, isPinch, isConvert, ableName);\r\n            childEvents.push(childEvent);\r\n        }\r\n        const result = (able as any)[type]!(childMoveable,  { ...childEvent, parentFlag: true });\r\n\r\n        if (isEnd) {\r\n            gestos[ableName] = null;\r\n        }\r\n        return result;\r\n    });\r\n    if (isStart) {\r\n        datas.childGestos = moveables.map(child => child.state.gestos[ableName]);\r\n    }\r\n    return {\r\n        eventParams,\r\n        childEvents,\r\n    };\r\n}\r\nexport function triggerChildAbles<T extends Able>(\r\n    moveable: MoveableGroupInterface<any, any>,\r\n    able: T,\r\n    type: keyof T & string,\r\n    e: any,\r\n    eachEvent: (movebale: MoveableManagerInterface<any, any>, ev: any) => any = (_, ev) => ev,\r\n    callback?: (moveable: MoveableManagerInterface<any, any>, ev: any, result: any, index: number) => any,\r\n) {\r\n    const isEnd = !!type.match(/End$/g);\r\n    const events = fillChildEvents(moveable, able.name, e);\r\n    const moveables = moveable.moveables;\r\n    const childs = events.map((ev, i) => {\r\n        const childMoveable = moveables[i];\r\n        let childEvent = ev;\r\n\r\n        childEvent = eachEvent(childMoveable, ev);\r\n\r\n        const result = (able as any)[type]!(childMoveable,  { ...childEvent, parentFlag: true });\r\n\r\n        result && callback && callback(childMoveable, ev, result, i);\r\n\r\n        if (isEnd) {\r\n            childMoveable.state.gestos = {};\r\n        }\r\n        return result;\r\n    });\r\n\r\n    return childs;\r\n}\r\n\r\n\r\nexport function startChildDist(\r\n    moveable: MoveableGroupInterface,\r\n    child: MoveableManagerInterface,\r\n    parentDatas: any,\r\n    childEvent: any,\r\n) {\r\n    const fixedDirection = parentDatas.fixedDirection;\r\n    const fixedPosition = parentDatas.fixedPosition;\r\n\r\n    const startPositions = childEvent.datas.startPositions || getAbsolutePosesByState(child.state);\r\n    const pos = getPosByDirection(startPositions, fixedDirection);\r\n    const [originalX, originalY] = calculate(\r\n        createRotateMatrix(-moveable.rotation / 180 * Math.PI, 3),\r\n        [pos[0] - fixedPosition[0], pos[1] - fixedPosition[1], 1],\r\n        3,\r\n    );\r\n    childEvent.datas.originalX = originalX;\r\n    childEvent.datas.originalY = originalY;\r\n\r\n    return childEvent;\r\n}\r\n","import { prefix, getControlTransform, getLineStyle, getProps, sign } from \"./utils\";\r\nimport {\r\n    Renderer, MoveableManagerInterface,\r\n    RenderDirections,\r\n} from \"./types\";\r\nimport { DIRECTION_INDEXES, DIRECTION_ROTATIONS, DIRECTIONS, DIRECTIONS4 } from \"./consts\";\r\nimport { IObject, throttle, getRad, getKeys } from \"@daybrush/utils\";\r\nimport { absDegree } from \"./ables/Snappable\";\r\n\r\nexport interface DirectionControlInfo {\r\n    data: Record<string, any>;\r\n    classNames: string[];\r\n    dir: string;\r\n}\r\n\r\n\r\nexport function renderDirectionControlsByInfos(\r\n    moveable: MoveableManagerInterface<Partial<RenderDirections>>,\r\n    ableName: string,\r\n    renderDirections: DirectionControlInfo[],\r\n    React: Renderer,\r\n): any[] {\r\n\r\n    const {\r\n        renderPoses,\r\n        rotation: rotationRad,\r\n        direction,\r\n    } = moveable.getState();\r\n\r\n    const {\r\n        zoom,\r\n    } = getProps(moveable.props, ableName as any);\r\n\r\n    const degRotation = absDegree(rotationRad / Math.PI * 180);\r\n    const directionMap: IObject<boolean> = {};\r\n    const renderState = moveable.renderState;\r\n    if (!renderState.renderDirectionMap) {\r\n        renderState.renderDirectionMap = {};\r\n    }\r\n    const renderDirectionMap = renderState.renderDirectionMap;\r\n\r\n    renderDirections.forEach(({ dir }) => {\r\n        directionMap[dir] = true;\r\n    });\r\n\r\n    const directionSign = sign(direction);\r\n    return renderDirections.map(({ data, classNames, dir }) => {\r\n        const indexes = DIRECTION_INDEXES[dir];\r\n\r\n        if (!indexes || !directionMap[dir]) {\r\n            return null;\r\n        }\r\n        renderDirectionMap[dir] = true;\r\n        const directionRotation = (throttle(degRotation, 15) + directionSign * DIRECTION_ROTATIONS[dir] + 720) % 180;\r\n\r\n        const dataAttrs: Record<string, string> = {};\r\n\r\n        getKeys(data).forEach(name => {\r\n            dataAttrs[`data-${name}`] = data[name];\r\n        });\r\n        return (\r\n            <div className={prefix(\"control\", \"direction\", dir, ableName, ...classNames)}\r\n                data-rotation={directionRotation}\r\n                data-direction={dir}\r\n                {...dataAttrs}\r\n                key={`direction-${dir}`}\r\n                style={getControlTransform(rotationRad, zoom!, ...indexes.map(index => renderPoses[index]))}></div>\r\n        );\r\n    });\r\n}\r\nexport function renderDirectionControls(\r\n    moveable: MoveableManagerInterface<Partial<RenderDirections>>,\r\n    defaultDirections: string[],\r\n    ableName: string,\r\n    React: Renderer,\r\n): any[] {\r\n    const {\r\n        renderDirections: directions = defaultDirections,\r\n        displayAroundControls,\r\n    } = getProps(moveable.props, ableName as any);\r\n\r\n    if (!directions) {\r\n        return [];\r\n    }\r\n    const renderDirections = directions === true ? DIRECTIONS : directions;\r\n\r\n    return [\r\n        ...(displayAroundControls ? renderAroundControls(moveable, React, ableName, renderDirections) : []),\r\n        ...renderDirectionControlsByInfos(\r\n            moveable,\r\n            ableName,\r\n            renderDirections.map(dir => {\r\n                return {\r\n                    data: {},\r\n                    classNames: [],\r\n                    dir,\r\n                };\r\n            }),\r\n            React,\r\n        ),\r\n    ];\r\n}\r\n\r\nexport function renderLine(\r\n    React: Renderer,\r\n    direction: string,\r\n    pos1: number[],\r\n    pos2: number[],\r\n    zoom: number,\r\n    key: number | string,\r\n    ...classNames: string[]\r\n): any {\r\n    const rad = getRad(pos1, pos2);\r\n    const rotation = direction ? (throttle(rad / Math.PI * 180, 15)) % 180 : -1;\r\n\r\n    return <div key={`line-${key}`}\r\n        className={prefix(\"line\", \"direction\", direction ? \"edge\" : \"\", direction, ...classNames)}\r\n        data-rotation={rotation}\r\n        data-line-key={key}\r\n        data-direction={direction} style={getLineStyle(pos1, pos2, zoom, rad)}></div>;\r\n}\r\n\r\nexport function renderEdgeLines(\r\n    React: Renderer,\r\n    ableName: string,\r\n    edge: true | string[],\r\n    poses: number[][],\r\n    zoom: number,\r\n): any[] {\r\n    const directions = edge === true ? DIRECTIONS4 : edge;\r\n\r\n    return directions.map((direction, i) => {\r\n        const [index1, index2] = DIRECTION_INDEXES[direction];\r\n\r\n        if (index2 == null) {\r\n            return;\r\n        }\r\n        return renderLine(React, direction, poses[index1], poses[index2], zoom, `${ableName}Edge${i}`, ableName);\r\n    }).filter(Boolean);\r\n}\r\n\r\nexport function getRenderDirections(ableName: string) {\r\n    return (\r\n        moveable: MoveableManagerInterface<Partial<RenderDirections>>,\r\n        React: Renderer,\r\n    ) => {\r\n        const edge = getProps(moveable.props, ableName as any).edge;\r\n\r\n        if (edge && (edge === true || edge.length)) {\r\n            return [\r\n                ...renderEdgeLines(\r\n                    React,\r\n                    ableName,\r\n                    edge,\r\n                    moveable.getState().renderPoses,\r\n                    moveable.props.zoom!,\r\n                ),\r\n                ...renderDiagonalDirections(moveable, ableName, React),\r\n            ];\r\n        }\r\n        return renderAllDirections(moveable, ableName, React);\r\n    };\r\n}\r\n\r\nexport function renderAllDirections(\r\n    moveable: MoveableManagerInterface<Partial<RenderDirections>>,\r\n    ableName: string,\r\n    React: Renderer,\r\n) {\r\n    return renderDirectionControls(moveable, DIRECTIONS, ableName, React);\r\n}\r\n\r\nexport function renderDiagonalDirections(\r\n    moveable: MoveableManagerInterface<Partial<RenderDirections>>,\r\n    ableName: string,\r\n    React: Renderer,\r\n): any[] {\r\n    return renderDirectionControls(moveable, [\"nw\", \"ne\", \"sw\", \"se\"], ableName, React);\r\n}\r\n\r\nexport function renderAroundControls(\r\n    moveable: MoveableManagerInterface<Partial<RenderDirections>>,\r\n    React: Renderer,\r\n    ableName?: string,\r\n    renderDirections?: string[],\r\n): any[] {\r\n    const renderState = moveable.renderState;\r\n    if (!renderState.renderDirectionMap) {\r\n        renderState.renderDirectionMap = {};\r\n    }\r\n    const {\r\n        renderPoses,\r\n        rotation: rotationRad,\r\n        direction,\r\n    } = moveable.getState();\r\n\r\n    const renderDirectionMap = renderState.renderDirectionMap;\r\n\r\n    const {\r\n        zoom,\r\n    } = moveable.props;\r\n    const directionSign = sign(direction);\r\n    const degRotation = rotationRad / Math.PI * 180;\r\n\r\n    return (renderDirections || getKeys(renderDirectionMap)).map(dir => {\r\n        const indexes = DIRECTION_INDEXES[dir];\r\n\r\n        if (!indexes) {\r\n            return null;\r\n        }\r\n        const directionRotation = (throttle(degRotation, 15) + directionSign * DIRECTION_ROTATIONS[dir] + 720) % 180;\r\n\r\n        const classNames: string[] = [\"around-control\"];\r\n\r\n        if (ableName) {\r\n            classNames.push(\"direction\", ableName);\r\n        }\r\n        return (\r\n            <div\r\n                className={prefix(...classNames)}\r\n                data-rotation={directionRotation} data-direction={dir} key={`direction-around-${dir}`}\r\n                style={getControlTransform(rotationRad, zoom!, ...indexes.map(index => renderPoses[index]))}></div>\r\n        );\r\n    });\r\n}\r\n","import { getRad, throttle } from \"@daybrush/utils\";\r\nimport {\r\n    BoundInfo, SnappableProps, BoundType,\r\n    RotatableProps, MoveableManagerInterface, SnappableState,\r\n} from \"../../types\";\r\nimport { rotate, minus } from \"@scena/matrix\";\r\nimport { abs, getDistSize } from \"../../utils\";\r\nimport { TINY_NUM } from \"../../consts\";\r\n\r\nexport function checkBoundPoses(\r\n    bounds: BoundType | false | undefined,\r\n    verticalPoses: number[],\r\n    horizontalPoses: number[],\r\n) {\r\n    const {\r\n        position = \"client\",\r\n        left = -Infinity,\r\n        top = -Infinity,\r\n        right = Infinity,\r\n        bottom = Infinity,\r\n    } = bounds || {};\r\n    const nextBounds = {\r\n        position,\r\n        left,\r\n        top,\r\n        right,\r\n        bottom,\r\n    };\r\n\r\n    return {\r\n        vertical: checkBounds(nextBounds, verticalPoses, true),\r\n        horizontal: checkBounds(nextBounds, horizontalPoses, false),\r\n    };\r\n}\r\nexport function getBounds(\r\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\r\n    externalBounds?: BoundType | false | null,\r\n) {\r\n    const {\r\n        containerClientRect: {\r\n            clientHeight: containerHeight,\r\n            clientWidth: containerWidth,\r\n            clientLeft,\r\n            clientTop,\r\n        },\r\n        snapOffset: {\r\n            left: snapOffsetLeft,\r\n            top: snapOffsetTop,\r\n            right: snapOffsetRight,\r\n            bottom: snapOffsetBottom,\r\n        },\r\n    } = moveable.state;\r\n    const bounds = externalBounds || moveable.props.bounds || {} as BoundType;\r\n    const position = bounds.position || \"client\";\r\n    const isCSS = position === \"css\";\r\n    const {\r\n        left = -Infinity,\r\n        top = -Infinity,\r\n    } = bounds;\r\n    let {\r\n        right = isCSS ? -Infinity : Infinity,\r\n        bottom = isCSS ? -Infinity : Infinity,\r\n    } = bounds;\r\n\r\n    if (isCSS) {\r\n        right = containerWidth! + snapOffsetRight - snapOffsetLeft - right;\r\n        bottom = containerHeight! + snapOffsetBottom - snapOffsetTop - bottom;\r\n    }\r\n\r\n    return {\r\n        left: left + snapOffsetLeft - clientLeft!,\r\n        right: right + snapOffsetLeft - clientLeft!,\r\n        top: top + snapOffsetTop - clientTop!,\r\n        bottom: bottom + snapOffsetTop - clientTop!,\r\n    };\r\n}\r\nexport function checkBoundKeepRatio(\r\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\r\n    startPos: number[],\r\n    endPos: number[],\r\n) {\r\n    const {\r\n        left,\r\n        top,\r\n        right,\r\n        bottom,\r\n    } = getBounds(moveable);\r\n\r\n    const [endX, endY] = endPos;\r\n    let [dx, dy] = minus(endPos, startPos);\r\n\r\n    if (abs(dx) < TINY_NUM) {\r\n        dx = 0;\r\n    }\r\n    if (abs(dy) < TINY_NUM) {\r\n        dy = 0;\r\n    }\r\n    const isBottom = dy > 0;\r\n    const isRight = dx > 0;\r\n\r\n    const verticalInfo = {\r\n        isBound: false,\r\n        offset: 0,\r\n        pos: 0,\r\n    };\r\n    const horizontalInfo = {\r\n        isBound: false,\r\n        offset: 0,\r\n        pos: 0,\r\n    };\r\n    if (dx === 0 && dy === 0) {\r\n        return {\r\n            vertical: verticalInfo,\r\n            horizontal: horizontalInfo,\r\n        };\r\n    } else if (dx === 0) {\r\n        if (isBottom) {\r\n            if (bottom < endY) {\r\n                horizontalInfo.pos = bottom;\r\n                horizontalInfo.offset = endY - bottom;\r\n            }\r\n        } else {\r\n            if (top > endY) {\r\n                horizontalInfo.pos = top;\r\n                horizontalInfo.offset = endY - top;\r\n            }\r\n        }\r\n    } else if (dy === 0) {\r\n        if (isRight) {\r\n            if (right < endX) {\r\n                verticalInfo.pos = right;\r\n                verticalInfo.offset = endX - right;\r\n            }\r\n        } else {\r\n            if (left > endX) {\r\n                verticalInfo.pos = left;\r\n                verticalInfo.offset = endX - left;\r\n            }\r\n        }\r\n    } else {\r\n        // y - y1 = a * (x - x1)\r\n        const a = dy / dx;\r\n        const b = endPos[1] - a * endX;\r\n        let y = 0;\r\n        let x = 0;\r\n        let isBound = false;\r\n\r\n        if (isRight && right <= endX) {\r\n            y = a * right + b;\r\n            x = right;\r\n            isBound = true;\r\n        } else if (!isRight && endX <= left) {\r\n            y = a * left + b;\r\n            x = left;\r\n            isBound = true;\r\n        }\r\n        if (isBound) {\r\n            if (y < top || y > bottom) {\r\n                isBound = false;\r\n            }\r\n        }\r\n        if (!isBound) {\r\n            if (isBottom && bottom <= endY) {\r\n                y = bottom;\r\n                x = (y - b) / a;\r\n                isBound = true;\r\n            } else if (!isBottom &&  endY <= top) {\r\n                y = top;\r\n                x = (y - b) / a;\r\n                isBound = true;\r\n            }\r\n        }\r\n        if (isBound) {\r\n            verticalInfo.isBound = true;\r\n            verticalInfo.pos = x;\r\n            verticalInfo.offset = endX - x;\r\n\r\n            horizontalInfo.isBound = true;\r\n            horizontalInfo.pos = y;\r\n            horizontalInfo.offset = endY - y;\r\n        }\r\n    }\r\n\r\n    return {\r\n        vertical: verticalInfo,\r\n        horizontal: horizontalInfo,\r\n    };\r\n}\r\nfunction checkBounds(\r\n    bounds: Required<BoundType>,\r\n    poses: number[],\r\n    isVertical: boolean,\r\n): BoundInfo[] {\r\n    // 0   [100 - 200]  300\r\n    const startBoundPos = bounds[isVertical ? \"left\" : \"top\"];\r\n    const endBoundPos = bounds[isVertical ? \"right\" : \"bottom\"];\r\n\r\n    // 450\r\n    const minPos = Math.min(...poses);\r\n    const maxPos = Math.max(...poses);\r\n    const boundInfos: BoundInfo[] = [];\r\n\r\n    if (startBoundPos + 1 > minPos) {\r\n        boundInfos.push({\r\n            direction: \"start\",\r\n            isBound: true,\r\n            offset: minPos - startBoundPos,\r\n            pos: startBoundPos,\r\n        });\r\n    }\r\n    if (endBoundPos - 1 < maxPos) {\r\n        boundInfos.push({\r\n            direction: \"end\",\r\n            isBound: true,\r\n            offset: maxPos - endBoundPos,\r\n            pos: endBoundPos,\r\n        });\r\n    }\r\n\r\n    if (!boundInfos.length) {\r\n        boundInfos.push({\r\n            isBound: false,\r\n            offset: 0,\r\n            pos: 0,\r\n        });\r\n    }\r\n\r\n    return boundInfos.sort((a, b) => abs(b.offset) - abs(a.offset));\r\n}\r\nexport function isBoundRotate(\r\n    relativePoses: number[][],\r\n    boundRect: { left: number, top: number, right: number, bottom: number },\r\n    rad: number,\r\n) {\r\n    const nextPoses = rad ? relativePoses.map(pos => rotate(pos, rad)) : relativePoses;\r\n\r\n    return nextPoses.some(pos => {\r\n        return (pos[0] < boundRect.left && abs(pos[0] - boundRect.left) > 0.1)\r\n            || (pos[0] > boundRect.right && abs(pos[0] - boundRect.right) > 0.1)\r\n            || (pos[1] < boundRect.top && abs(pos[1] - boundRect.top) > 0.1)\r\n            || (pos[1] > boundRect.bottom && abs(pos[1] - boundRect.bottom) > 0.1);\r\n    });\r\n}\r\nexport function boundRotate(\r\n    vec: number[],\r\n    boundPos: number,\r\n    index: number,\r\n) {\r\n    const r = getDistSize(vec);\r\n    const nextPos = Math.sqrt(r * r - boundPos * boundPos) || 0;\r\n\r\n    return [nextPos, -nextPos].sort((a, b) => {\r\n        return abs(a - vec[index ? 0 : 1]) - abs(b - vec[index ? 0 : 1]);\r\n    }).map(pos => {\r\n        return getRad([0, 0], index ? [pos, boundPos] : [boundPos, pos]);\r\n    });\r\n}\r\n\r\nexport function checkRotateBounds(\r\n    moveable: MoveableManagerInterface<SnappableProps & RotatableProps, SnappableState>,\r\n    prevPoses: number[][],\r\n    nextPoses: number[][],\r\n    origin: number[],\r\n    rotation: number,\r\n) {\r\n    if (!moveable.props.bounds) {\r\n        return [];\r\n    }\r\n    const rad = rotation * Math.PI / 180;\r\n\r\n    const {\r\n        left,\r\n        top,\r\n        right,\r\n        bottom,\r\n    } = getBounds(moveable);\r\n\r\n    const relativeLeft = left - origin[0];\r\n    const relativeRight = right - origin[0];\r\n    const relativeTop = top - origin[1];\r\n    const relativeBottom = bottom - origin[1];\r\n    const boundRect = {\r\n        left: relativeLeft,\r\n        top: relativeTop,\r\n        right: relativeRight,\r\n        bottom: relativeBottom,\r\n    };\r\n\r\n    if (!isBoundRotate(nextPoses, boundRect, 0)) {\r\n        return [];\r\n    }\r\n    const result: number[] = [];\r\n    [\r\n        [relativeLeft, 0],\r\n        [relativeRight, 0],\r\n        [relativeTop, 1],\r\n        [relativeBottom, 1],\r\n    ].forEach(([boundPos, index]) => {\r\n        nextPoses.forEach(nextPos => {\r\n            const relativeRad1 = getRad([0, 0], nextPos);\r\n\r\n            result.push(...boundRotate(nextPos, boundPos, index)\r\n                .map(relativeRad2 => rad + relativeRad2 - relativeRad1)\r\n                .filter(nextRad => !isBoundRotate(prevPoses, boundRect, nextRad))\r\n                .map(nextRad => throttle(nextRad * 180 / Math.PI, TINY_NUM)));\r\n        });\r\n    });\r\n\r\n    return result;\r\n}\r\n","import { TINY_NUM } from \"@daybrush/utils\";\r\nimport { throttle } from \"@daybrush/utils\";\r\nimport {\r\n    MoveableClientRect, MoveableManagerInterface,\r\n    SnapDirectionPoses,\r\n    SnapDirections, SnappableProps,\r\n    SnappableState,\r\n} from \"../../types\";\r\nimport {\r\n    calculatePosition,\r\n} from \"../../utils\";\r\nexport const VERTICAL_NAMES = [\"left\", \"right\", \"center\"] as const;\r\nexport const HORIZONTAL_NAMES = [\"top\", \"bottom\", \"middle\"] as const;\r\nexport const SNAP_SKIP_NAMES_MAP = {\r\n    \"left\": \"start\",\r\n    \"right\": \"end\",\r\n    \"center\": \"center\",\r\n    \"top\": \"start\",\r\n    \"bottom\": \"end\",\r\n    \"middle\": \"center\",\r\n};\r\n\r\nexport const VERTICAL_NAMES_MAP = {\r\n    start: \"left\",\r\n    end: \"right\",\r\n    center: \"center\",\r\n} as const;\r\nexport const HORIZONTAL_NAMES_MAP = {\r\n    start: \"top\",\r\n    end: \"bottom\",\r\n    center: \"middle\",\r\n} as const;\r\n\r\n\r\n\r\nexport function getInitialBounds() {\r\n    return {\r\n        left: false,\r\n        top: false,\r\n        right: false,\r\n        bottom: false,\r\n    };\r\n}\r\n\r\n\r\nexport function hasGuidelines(\r\n    moveable: MoveableManagerInterface<any, any>,\r\n    ableName: string\r\n): moveable is MoveableManagerInterface<SnappableProps, SnappableState> {\r\n    const {\r\n        props: {\r\n            snappable,\r\n            bounds,\r\n            innerBounds,\r\n            verticalGuidelines,\r\n            horizontalGuidelines,\r\n            snapGridWidth,\r\n            snapGridHeight,\r\n        },\r\n        state: { guidelines, enableSnap },\r\n    } = moveable;\r\n\r\n    if (\r\n        !snappable ||\r\n        !enableSnap ||\r\n        (ableName && snappable !== true && snappable.indexOf(ableName) < 0)\r\n    ) {\r\n        return false;\r\n    }\r\n    if (\r\n        snapGridWidth ||\r\n        snapGridHeight ||\r\n        bounds ||\r\n        innerBounds ||\r\n        (guidelines && guidelines.length) ||\r\n        (verticalGuidelines && verticalGuidelines.length) ||\r\n        (horizontalGuidelines && horizontalGuidelines.length)\r\n    ) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nexport function getSnapDirections(snapDirections: SnapDirections | boolean | undefined): SnapDirections {\r\n    if (snapDirections === false) {\r\n        return {};\r\n    } else if (snapDirections === true || !snapDirections) {\r\n        return { left: true, right: true, top: true, bottom: true };\r\n    }\r\n    return snapDirections;\r\n}\r\n\r\nexport function mapSnapDirectionPoses(\r\n    snapDirections: SnapDirections | boolean | undefined,\r\n    snapPoses: SnapDirectionPoses,\r\n) {\r\n    const nextSnapDirections = getSnapDirections(snapDirections);\r\n    const nextSnapPoses: SnapDirectionPoses = {};\r\n\r\n    for (const name in nextSnapDirections) {\r\n        if (name in snapPoses && (nextSnapDirections as any)[name]) {\r\n            (nextSnapPoses as any)[name] = (snapPoses as any)[name];\r\n        }\r\n    }\r\n    return nextSnapPoses;\r\n}\r\n\r\nexport function splitSnapDirectionPoses(\r\n    snapDirections: SnapDirections | boolean | undefined,\r\n    snapPoses: SnapDirectionPoses,\r\n) {\r\n    const nextSnapPoses = mapSnapDirectionPoses(snapDirections, snapPoses);\r\n    const horizontalNames = HORIZONTAL_NAMES.filter(name => name in nextSnapPoses);\r\n    const verticalNames = VERTICAL_NAMES.filter(name => name in nextSnapPoses);\r\n\r\n    return {\r\n        horizontalNames,\r\n        verticalNames,\r\n        horizontal: horizontalNames.map(name => nextSnapPoses[name]!),\r\n        vertical: verticalNames.map(name => nextSnapPoses[name]!),\r\n    };\r\n}\r\n\r\nexport function calculateContainerPos(\r\n    rootMatrix: number[],\r\n    containerRect: MoveableClientRect,\r\n    n: number,\r\n) {\r\n    const clientPos = calculatePosition(\r\n        rootMatrix, [containerRect.clientLeft!, containerRect.clientTop!], n);\r\n\r\n    return [\r\n        containerRect.left + clientPos[0],\r\n        containerRect.top + clientPos[1],\r\n    ];\r\n}\r\n\r\nexport function solveLineConstants([point1, point2]: number[][]): [number, number, number] {\r\n    let dx = point2[0] - point1[0];\r\n    let dy = point2[1] - point1[1];\r\n\r\n    if (Math.abs(dx) < TINY_NUM) {\r\n        dx = 0;\r\n    }\r\n    if (Math.abs(dy) < TINY_NUM) {\r\n        dy = 0;\r\n    }\r\n\r\n    // b > 0\r\n    // ax + by + c = 0\r\n    let a = 0;\r\n    let b = 0;\r\n    let c = 0;\r\n\r\n    if (!dx) {\r\n        // -x + 1 = 0\r\n        a = -1;\r\n        c = point1[0];\r\n    } else if (!dy) {\r\n        // y - 1 = 0\r\n        b = 1;\r\n        c = -point1[1];\r\n    } else {\r\n        // y = -a(x - x1) + y1\r\n        // ax + y + a * x1 - y1 = 0\r\n        a = -dy / dx;\r\n        b = 1;\r\n        c = a * point1[0] - point1[1];\r\n    }\r\n\r\n    return [a, b, c].map(v => throttle(v, TINY_NUM)) as [number, number, number];\r\n}\r\n","import {\r\n    SnapInfo, SnappableProps, SnappableState,\r\n    SnapGuideline, ResizableProps, ScalableProps,\r\n    SnapOffsetInfo, MoveableManagerInterface, SnapDirectionPoses, SnapDirectionInfo,\r\n} from \"../../types\";\r\nimport {\r\n    selectValue, getTinyDist, abs,\r\n} from \"../../utils\";\r\nimport { getPosByDirection, getPosesByDirection } from \"../../gesto/GestoUtils\";\r\nimport { TINY_NUM } from \"../../consts\";\r\nimport { minus } from \"@scena/matrix\";\r\nimport { splitSnapDirectionPoses } from \"./utils\";\r\n\r\n\r\nexport function checkMoveableSnapPoses(\r\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\r\n    posesX: number[],\r\n    posesY: number[],\r\n    dirXs: string[] = [],\r\n    dirYs: string[] = [],\r\n    customSnapThreshold?: number,\r\n) {\r\n    const props = moveable.props;\r\n    const snapThresholdMultiples = moveable.state.snapThresholdInfo?.multiples || [1, 1];\r\n    const snapThreshold = selectValue<number>(\r\n        customSnapThreshold,\r\n        props.snapThreshold,\r\n        5,\r\n    );\r\n\r\n    return checkSnapPoses(\r\n        moveable.state.guidelines,\r\n        posesX,\r\n        posesY,\r\n        dirXs,\r\n        dirYs,\r\n        snapThreshold,\r\n        snapThresholdMultiples,\r\n    );\r\n}\r\n\r\nexport function checkSnapPoses(\r\n    guidelines: SnapGuideline[],\r\n    posesX: number[],\r\n    posesY: number[],\r\n    dirXs: string[],\r\n    dirYs: string[],\r\n    snapThreshold: number,\r\n    multiples: number[],\r\n) {\r\n    return {\r\n        vertical: checkSnap(guidelines, \"vertical\", posesX, snapThreshold * multiples[0], dirXs),\r\n        horizontal: checkSnap(guidelines, \"horizontal\", posesY, snapThreshold * multiples[1], dirYs),\r\n    };\r\n}\r\nexport function checkSnapKeepRatio(\r\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\r\n    startPos: number[],\r\n    endPos: number[],\r\n): { vertical: SnapOffsetInfo, horizontal: SnapOffsetInfo } {\r\n    const [endX, endY] = endPos;\r\n    const [startX, startY] = startPos;\r\n    let [dx, dy] = minus(endPos, startPos);\r\n    const isBottom = dy > 0;\r\n    const isRight = dx > 0;\r\n\r\n    dx = getTinyDist(dx);\r\n    dy = getTinyDist(dy);\r\n\r\n    const verticalInfo: SnapOffsetInfo = {\r\n        isSnap: false,\r\n        offset: 0,\r\n        pos: 0,\r\n    };\r\n    const horizontalInfo: SnapOffsetInfo = {\r\n        isSnap: false,\r\n        offset: 0,\r\n        pos: 0,\r\n    };\r\n\r\n    if (dx === 0 && dy === 0) {\r\n        return {\r\n            vertical: verticalInfo,\r\n            horizontal: horizontalInfo,\r\n        };\r\n    }\r\n    const {\r\n        vertical: verticalSnapInfo,\r\n        horizontal: horizontalSnapInfo,\r\n    } = checkMoveableSnapPoses(moveable, dx ? [endX] : [], dy ? [endY] : []);\r\n\r\n    verticalSnapInfo.posInfos.filter(({ pos }) => {\r\n        return isRight ? pos >= startX : pos <= startX;\r\n    });\r\n    horizontalSnapInfo.posInfos.filter(({ pos }) => {\r\n        return isBottom ? pos >= startY : pos <= startY;\r\n    });\r\n    verticalSnapInfo.isSnap = verticalSnapInfo.posInfos.length > 0;\r\n    horizontalSnapInfo.isSnap = horizontalSnapInfo.posInfos.length > 0;\r\n\r\n    const {\r\n        isSnap: isVerticalSnap,\r\n        guideline: verticalGuideline,\r\n    } = getNearestSnapGuidelineInfo(verticalSnapInfo);\r\n    const {\r\n        isSnap: isHorizontalSnap,\r\n        guideline: horizontalGuideline,\r\n    } = getNearestSnapGuidelineInfo(horizontalSnapInfo);\r\n    const horizontalPos = isHorizontalSnap ? horizontalGuideline!.pos[1] : 0;\r\n    const verticalPos = isVerticalSnap ? verticalGuideline!.pos[0] : 0;\r\n\r\n    if (dx === 0) {\r\n        if (isHorizontalSnap) {\r\n            horizontalInfo.isSnap = true;\r\n            horizontalInfo.pos = horizontalGuideline!.pos[1];\r\n            horizontalInfo.offset = endY - horizontalInfo.pos;\r\n        }\r\n    } else if (dy === 0) {\r\n        if (isVerticalSnap) {\r\n            verticalInfo.isSnap = true;\r\n            verticalInfo.pos = verticalPos;\r\n            verticalInfo.offset = endX - verticalPos;\r\n        }\r\n    } else {\r\n        // y - y1 = a * (x - x1)\r\n        const a = dy / dx;\r\n        const b = endPos[1] - a * endX;\r\n        let y = 0;\r\n        let x = 0;\r\n        let isSnap = false;\r\n\r\n        if (isVerticalSnap) {\r\n            x = verticalPos;\r\n            y = a * x + b;\r\n            isSnap = true;\r\n        } else if (isHorizontalSnap) {\r\n            y = horizontalPos;\r\n            x = (y - b) / a;\r\n            isSnap = true;\r\n        }\r\n        if (isSnap) {\r\n            verticalInfo.isSnap = true;\r\n            verticalInfo.pos = x;\r\n            verticalInfo.offset = endX - x;\r\n\r\n            horizontalInfo.isSnap = true;\r\n            horizontalInfo.pos = y;\r\n            horizontalInfo.offset = endY - y;\r\n        }\r\n    }\r\n    return {\r\n        vertical: verticalInfo,\r\n        horizontal: horizontalInfo,\r\n    };\r\n}\r\n\r\n\r\nfunction getStringDirection(dir: number | string) {\r\n    let stringDirection = \"\";\r\n\r\n    if (dir === -1 || dir === \"top\" || dir === \"left\") {\r\n        stringDirection = \"start\";\r\n    } else if (dir === 0 || dir === \"center\" || dir === \"middle\") {\r\n        stringDirection = \"center\";\r\n    } else if (dir === 1 || dir === \"right\" || dir === \"bottom\") {\r\n        stringDirection = \"end\";\r\n    }\r\n    return stringDirection;\r\n}\r\n\r\n\r\nexport function checkSnaps(\r\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\r\n    rect: SnapDirectionPoses,\r\n    customSnapThreshold?: number,\r\n): { vertical: SnapDirectionInfo; horizontal: SnapDirectionInfo } {\r\n    const poses = splitSnapDirectionPoses(moveable.props.snapDirections, rect);\r\n\r\n    const result = checkMoveableSnapPoses(\r\n        moveable,\r\n        poses.vertical,\r\n        poses.horizontal,\r\n        poses.verticalNames.map(name => getStringDirection(name)),\r\n        poses.horizontalNames.map(name => getStringDirection(name)),\r\n        customSnapThreshold,\r\n    );\r\n    const horizontalDirection = getStringDirection(poses.horizontalNames[result.horizontal.index]);\r\n    const verticalDirection = getStringDirection(poses.verticalNames[result.vertical.index]);\r\n    return {\r\n        vertical: {\r\n            ...result.vertical,\r\n            direction: verticalDirection,\r\n        },\r\n        horizontal: {\r\n            ...result.horizontal,\r\n            direction: horizontalDirection,\r\n        },\r\n    };\r\n}\r\n\r\nexport function getNearestSnapGuidelineInfo(\r\n    snapInfo: SnapInfo,\r\n) {\r\n    const isSnap = snapInfo.isSnap;\r\n\r\n    if (!isSnap) {\r\n        return {\r\n            isSnap: false,\r\n            offset: 0,\r\n            dist: -1,\r\n            pos: 0,\r\n            guideline: null,\r\n        };\r\n    }\r\n    const posInfo = snapInfo.posInfos[0];\r\n    const guidelineInfo = posInfo!.guidelineInfos[0];\r\n    const offset = guidelineInfo!.offset;\r\n    const dist = guidelineInfo!.dist;\r\n    const guideline = guidelineInfo!.guideline;\r\n\r\n    return {\r\n        isSnap,\r\n        offset,\r\n        dist,\r\n        pos: posInfo!.pos,\r\n        guideline,\r\n    };\r\n}\r\n\r\nfunction checkSnap(\r\n    guidelines: SnapGuideline[],\r\n    targetType: \"horizontal\" | \"vertical\",\r\n    targetPoses: number[],\r\n    snapThreshold: number,\r\n    dirs: string[] = [],\r\n): SnapInfo {\r\n    if (!guidelines || !guidelines.length) {\r\n        return {\r\n            isSnap: false,\r\n            index: -1,\r\n            direction: \"\",\r\n            posInfos: [],\r\n        };\r\n    }\r\n    const isVertical = targetType === \"vertical\";\r\n    const posType = isVertical ? 0 : 1;\r\n\r\n    const snapPosInfos = targetPoses.map((targetPos, index) => {\r\n        const direction = dirs[index] || \"\";\r\n\r\n        const guidelineInfos = guidelines.map(guideline => {\r\n            const { pos } = guideline;\r\n            const offset = targetPos - pos[posType];\r\n\r\n            return {\r\n                offset,\r\n                dist: abs(offset),\r\n                guideline,\r\n                direction,\r\n            };\r\n        }).filter(({ guideline, dist }) => {\r\n            const { type } = guideline;\r\n            if (\r\n                type !== targetType\r\n                || dist > snapThreshold\r\n            ) {\r\n                return false;\r\n            }\r\n            return true;\r\n        }).sort(\r\n            (a, b) => a.dist - b.dist,\r\n        );\r\n\r\n\r\n        return {\r\n            pos: targetPos,\r\n            index,\r\n            guidelineInfos,\r\n            direction,\r\n        };\r\n    }).filter(snapPosInfo => {\r\n        return snapPosInfo.guidelineInfos.length > 0;\r\n    }).sort((a, b) => {\r\n        return a.guidelineInfos[0].dist - b.guidelineInfos[0].dist;\r\n    });\r\n\r\n    const isSnap = snapPosInfos.length > 0;\r\n    return {\r\n        isSnap,\r\n        index: isSnap ? snapPosInfos[0].index : -1,\r\n        direction: snapPosInfos[0]?.direction ?? \"\",\r\n        posInfos: snapPosInfos,\r\n    };\r\n}\r\n\r\nexport function getSnapInfosByDirection(\r\n    moveable: MoveableManagerInterface<SnappableProps & (ResizableProps | ScalableProps), SnappableState>,\r\n    // pos1 pos2 pos3 pos4\r\n    poses: number[][],\r\n    snapDirection: number[],\r\n    snapThreshold = 1,\r\n): { vertical: SnapDirectionInfo; horizontal: SnapDirectionInfo } {\r\n    let dirs: number[][] = [];\r\n\r\n    if (snapDirection[0] && snapDirection[1]) {\r\n        dirs = [\r\n            snapDirection,\r\n            [-snapDirection[0], snapDirection[1]],\r\n            [snapDirection[0], -snapDirection[1]],\r\n        ];\r\n    } else if (!snapDirection[0] && !snapDirection[1]) {\r\n        [\r\n            [-1, -1],\r\n            [1, -1],\r\n            [1, 1],\r\n            [-1, 1],\r\n        ].forEach((dir, i, arr) => {\r\n            const nextDir = (arr[i + 1] || arr[0]);\r\n            dirs.push(dir);\r\n            dirs.push([\r\n                (dir[0] + nextDir[0]) / 2,\r\n                (dir[1] + nextDir[1]) / 2,\r\n            ]);\r\n        });\r\n    } else {\r\n        if (moveable.props.keepRatio) {\r\n            dirs.push(\r\n                [-1, -1],\r\n                [-1, 1],\r\n                [1, -1],\r\n                [1, 1],\r\n                snapDirection,\r\n            );\r\n        } else {\r\n            dirs.push(...getPosesByDirection([\r\n                [-1, -1],\r\n                [1, -1],\r\n                [-1, -1],\r\n                [1, 1],\r\n            ], snapDirection));\r\n\r\n            if (dirs.length > 1) {\r\n                dirs.push([\r\n                    (dirs[0][0] + dirs[1][0]) / 2,\r\n                    (dirs[0][1] + dirs[1][1]) / 2,\r\n                ]);\r\n            }\r\n        }\r\n    }\r\n    const nextPoses = dirs.map(dir => getPosByDirection(poses, dir));\r\n    const xs = nextPoses.map(pos => pos[0]);\r\n    const ys = nextPoses.map(pos => pos[1]);\r\n    const result = checkMoveableSnapPoses(\r\n        moveable,\r\n        xs, ys,\r\n        dirs.map(dir => getStringDirection(dir[0])),\r\n        dirs.map(dir => getStringDirection(dir[1])),\r\n        snapThreshold\r\n    );\r\n    const verticalDirection = getStringDirection(dirs.map(dir => dir[0])[result.vertical.index]);\r\n    const horizontalDirection = getStringDirection(dirs.map(dir => dir[1])[result.horizontal.index]);\r\n\r\n    return {\r\n        vertical: {\r\n            ...result.vertical,\r\n            direction: verticalDirection,\r\n        },\r\n        horizontal: {\r\n            ...result.horizontal,\r\n            direction: horizontalDirection,\r\n        },\r\n    };\r\n}\r\n\r\nexport function checkSnapBoundPriority(\r\n    a: { isBound: boolean, isSnap: boolean, offset: number },\r\n    b: { isBound: boolean, isSnap: boolean, offset: number },\r\n) {\r\n    const aDist = abs(a.offset);\r\n    const bDist = abs(b.offset);\r\n\r\n    if (a.isBound && b.isBound) {\r\n        return bDist - aDist;\r\n    } else if (a.isBound) {\r\n        return -1;\r\n    } else if (b.isBound) {\r\n        return 1;\r\n    } else if (a.isSnap && b.isSnap) {\r\n        return bDist - aDist;\r\n    } else if (a.isSnap) {\r\n        return -1;\r\n    } else if (b.isSnap) {\r\n        return 1;\r\n    } else if (aDist < TINY_NUM) {\r\n        return 1;\r\n    } else if (bDist < TINY_NUM) {\r\n        return -1;\r\n    }\r\n    return aDist - bDist;\r\n}\r\nexport function getNearOffsetInfo<T extends { offset: number[], isBound: boolean, isSnap: boolean, sign: number[] }>(\r\n    offsets: T[],\r\n    index: number,\r\n) {\r\n    return offsets.slice().sort((a, b) => {\r\n        const aSign = a.sign[index];\r\n        const bSign = b.sign[index];\r\n        const aOffset = a.offset[index];\r\n        const bOffset = b.offset[index];\r\n        // -1 The positions of a and b do not change.\r\n        // 1 The positions of a and b are reversed.\r\n        if (!aSign) {\r\n            return 1;\r\n        } else if (!bSign) {\r\n            return -1;\r\n        }\r\n        return checkSnapBoundPriority(\r\n            { isBound: a.isBound, isSnap: a.isSnap, offset: aOffset },\r\n            { isBound: b.isBound, isSnap: b.isSnap, offset: bOffset },\r\n        );\r\n    })[0];\r\n}\r\n\r\n\r\nexport function getCheckSnapDirections(\r\n    direction: number[],\r\n    fixedDirection: number[],\r\n    keepRatio: boolean\r\n) {\r\n    const directions: number[][][] = [];\r\n    // const fixedDirection = [-direction[0], -direction[1]];\r\n\r\n    if (keepRatio) {\r\n        if (abs(fixedDirection[0]) !== 1 || abs(fixedDirection[1]) !== 1) {\r\n            directions.push(\r\n                [fixedDirection, [-1, -1]],\r\n                [fixedDirection, [-1, 1]],\r\n                [fixedDirection, [1, -1]],\r\n                [fixedDirection, [1, 1]],\r\n            );\r\n        } else {\r\n            directions.push(\r\n                [fixedDirection, [direction[0], -direction[1]]],\r\n                [fixedDirection, [-direction[0], direction[1]]],\r\n            );\r\n        }\r\n        directions.push([fixedDirection, direction]);\r\n    } else {\r\n        if ((direction[0] && direction[1]) || (!direction[0] && !direction[1])) {\r\n            const endDirection = direction[0] ? direction : [1, 1];\r\n\r\n            [1, -1].forEach(signX => {\r\n                [1, -1].forEach(signY => {\r\n                    const nextDirection = [signX * endDirection[0], signY * endDirection[1]];\r\n\r\n                    if (\r\n                        fixedDirection[0] === nextDirection[0]\r\n                        && fixedDirection[1] === nextDirection[1]\r\n                    ) {\r\n                        return;\r\n                    }\r\n                    directions.push([fixedDirection, nextDirection]);\r\n                });\r\n            });\r\n        } else if (direction[0]) {\r\n            const signs = abs(fixedDirection[0]) === 1 ? [1] : [1, -1];\r\n\r\n            signs.forEach(sign => {\r\n                directions.push(\r\n                    [\r\n                        [fixedDirection[0], -1],\r\n                        [sign * direction[0], -1],\r\n                    ],\r\n                    [\r\n                        [fixedDirection[0], 0],\r\n                        [sign * direction[0], 0],\r\n                    ],\r\n                    [\r\n                        [fixedDirection[0], 1],\r\n                        [sign * direction[0], 1],\r\n                    ]\r\n                );\r\n            });\r\n        } else if (direction[1]) {\r\n            const signs = abs(fixedDirection[1]) === 1 ? [1] : [1, -1];\r\n\r\n            signs.forEach(sign => {\r\n                directions.push(\r\n                    [\r\n                        [-1, fixedDirection[1]],\r\n                        [-1, sign * direction[1]],\r\n                    ],\r\n                    [\r\n                        [0, fixedDirection[1]],\r\n                        [0, sign * direction[1]],\r\n                    ],\r\n                    [\r\n                        [1, fixedDirection[1]],\r\n                        [1, sign * direction[1]],\r\n                    ]\r\n                );\r\n            });\r\n        }\r\n    }\r\n    return directions;\r\n}\r\n","import { average, getRad, throttle } from \"@daybrush/utils\";\r\nimport { rotate } from \"@scena/matrix\";\r\nimport { maxOffset, getDistSize, getTinyDist, calculatePoses, abs } from \"../../utils\";\r\n\r\nimport { SnappableProps, DraggableProps, RotatableProps, MoveableManagerInterface } from \"../../types\";\r\nimport { getDragDist, getPosByDirection, getInverseDragDist } from \"../../gesto/GestoUtils\";\r\nimport { getNearOffsetInfo } from \"./snap\";\r\nimport { TINY_NUM } from \"../../consts\";\r\nimport { getInitialBounds, solveLineConstants } from \"./utils\";\r\n\r\nfunction isStartLine(dot: number[], line: number[][]) {\r\n    // l    o     => true\r\n    // o    l    => false\r\n    const cx = average([line[0][0], line[1][0]]);\r\n    const cy = average([line[0][1], line[1][1]]);\r\n\r\n    return {\r\n        vertical: cx <= dot[0],\r\n        horizontal: cy <= dot[1],\r\n    };\r\n}\r\nfunction hitTestLine(\r\n    dot: number[],\r\n    [pos1, pos2]: number[][],\r\n) {\r\n    let dx = pos2[0] - pos1[0];\r\n    let dy = pos2[1] - pos1[1];\r\n\r\n    if (abs(dx) < TINY_NUM) {\r\n        dx = 0;\r\n    }\r\n    if (abs(dy) < TINY_NUM) {\r\n        dy = 0;\r\n    }\r\n    let test1: number;\r\n    let test2: number;\r\n    if (!dx) {\r\n        test1 = pos1[0];\r\n        test2 = dot[0];\r\n    } else if (!dy) {\r\n        test1 = pos1[1];\r\n        test2 = dot[1];\r\n    } else {\r\n        const a = dy / dx;\r\n\r\n        // y = a * (x - pos1) + pos1\r\n        test1 = a * (dot[0] - pos1[0]) + pos1[1];\r\n        test2 = dot[1];\r\n    }\r\n    return test1 - test2;\r\n}\r\nfunction isSameStartLine(dots: number[][], line: number[][], centerSign: boolean, error: number = TINY_NUM) {\r\n    return dots.every(dot => {\r\n        const value = hitTestLine(dot, line);\r\n        const sign = value <= 0;\r\n        return sign === centerSign || abs(value) <= error;\r\n    });\r\n}\r\nfunction checkInnerBoundDot(\r\n    pos: number,\r\n    start: number,\r\n    end: number,\r\n    isStart: boolean,\r\n    threshold = 0,\r\n) {\r\n    if (\r\n        (isStart && start - threshold <= pos)\r\n        || (!isStart && pos <= end + threshold)\r\n    ) {\r\n        // false 402 565 602 => 37 ([0, 37])\r\n        // true 400 524.9712603540036 600 => 124 ([124, 0])\r\n        // true 400 410 600 => 10 ([10, 0])\r\n        return {\r\n            isBound: true,\r\n            offset: isStart ? start - pos : end - pos,\r\n        };\r\n    }\r\n    return {\r\n        isBound: false,\r\n        offset: 0,\r\n    };\r\n}\r\n\r\nfunction checkInnerBound(\r\n    moveable: MoveableManagerInterface<SnappableProps>,\r\n    { line, centerSign, verticalSign, horizontalSign, lineConstants }: InnerBoundLineInfo,\r\n) {\r\n    const bounds = moveable.props.innerBounds;\r\n\r\n    if (!bounds) {\r\n        return {\r\n            isAllBound: false,\r\n            isBound: false,\r\n            isVerticalBound: false,\r\n            isHorizontalBound: false,\r\n            offset: [0, 0],\r\n        };\r\n    }\r\n    const { left, top, width, height } = bounds;\r\n    const leftLine = [[left, top], [left, top + height]];\r\n    const topLine = [[left, top], [left + width, top]];\r\n    const rightLine = [[left + width, top], [left + width, top + height]];\r\n    const bottomLine = [[left, top + height], [left + width, top + height]];\r\n\r\n    if (isSameStartLine([\r\n        [left, top],\r\n        [left + width, top],\r\n        [left, top + height],\r\n        [left + width, top + height],\r\n    ], line, centerSign)) {\r\n        return {\r\n            isAllBound: false,\r\n            isBound: false,\r\n            isVerticalBound: false,\r\n            isHorizontalBound: false,\r\n            offset: [0, 0],\r\n        };\r\n    }\r\n    // test vertical\r\n\r\n    const topBoundInfo = checkLineBoundCollision(line, lineConstants, topLine, verticalSign);\r\n    const bottomBoundInfo = checkLineBoundCollision(line, lineConstants, bottomLine, verticalSign);\r\n\r\n    // test horizontal\r\n    const leftBoundInfo = checkLineBoundCollision(line, lineConstants, leftLine, horizontalSign);\r\n    const rightBoundInfo = checkLineBoundCollision(line, lineConstants, rightLine, horizontalSign);\r\n\r\n    const isAllVerticalBound = topBoundInfo.isBound && bottomBoundInfo.isBound;\r\n    const isVerticalBound = topBoundInfo.isBound || bottomBoundInfo.isBound;\r\n    const isAllHorizontalBound = leftBoundInfo.isBound && rightBoundInfo.isBound;\r\n    const isHorizontalBound = leftBoundInfo.isBound || rightBoundInfo.isBound;\r\n    const verticalOffset = maxOffset(topBoundInfo.offset, bottomBoundInfo.offset);\r\n    const horizontalOffset = maxOffset(leftBoundInfo.offset, rightBoundInfo.offset);\r\n    let offset = [0, 0];\r\n    let isBound = false;\r\n    let isAllBound = false;\r\n\r\n    if (abs(horizontalOffset) < abs(verticalOffset)) {\r\n        offset = [verticalOffset, 0];\r\n        isBound = isVerticalBound;\r\n        isAllBound = isAllVerticalBound;\r\n    } else {\r\n        offset = [0, horizontalOffset];\r\n        isBound = isHorizontalBound;\r\n        isAllBound = isAllHorizontalBound;\r\n    }\r\n    return {\r\n        isAllBound,\r\n        isVerticalBound,\r\n        isHorizontalBound,\r\n        isBound,\r\n        offset,\r\n    };\r\n}\r\n\r\nfunction checkLineBoundCollision(\r\n    line: number[][],\r\n    [a, b]: [number, number, number],\r\n    boundLine: number[][],\r\n    isStart: boolean,\r\n    threshold?: number,\r\n    isRender?: boolean,\r\n) {\r\n    const dot1 = line[0];\r\n    // const dot2 = line[1];\r\n    const boundDot1 = boundLine[0];\r\n    const boundDot2 = boundLine[1];\r\n\r\n    // const dy1 = getTinyDist(dot2[1] - dot1[1]);\r\n    // const dx1 = getTinyDist(dot2[0] - dot1[0]);\r\n    const dy2 = getTinyDist(boundDot2[1] - boundDot1[1]);\r\n    const dx2 = getTinyDist(boundDot2[0] - boundDot1[0]);\r\n\r\n    const hasDx = b;\r\n    const hasDy = a;\r\n    const slope = - a / b;\r\n    // lineConstants\r\n    // ax + by + c = 0\r\n    // dx2 or dy2 is zero\r\n    if (!dx2) {\r\n        // vertical\r\n        // by + c = 0\r\n        if (isRender && !hasDy) {\r\n            // 90deg\r\n            return {\r\n                isBound: false,\r\n                offset: 0,\r\n            };\r\n        } else if (hasDx) {\r\n            // ax + by + c = 0\r\n            // const y = dy1 ? dy1 / dx1 * (boundDot1[0] - dot1[0]) + dot1[1] : dot1[1];\r\n            const y = slope * (boundDot1[0] - dot1[0]) + dot1[1];\r\n\r\n            // boundDot1[1] <= y  <= boundDot2[1]\r\n            return checkInnerBoundDot(y, boundDot1[1], boundDot2[1], isStart, threshold);\r\n        } else {\r\n            // ax + c = 0\r\n            const offset = boundDot1[0] - dot1[0];\r\n\r\n            const isBound = abs(offset) <= (threshold || 0);\r\n\r\n            return {\r\n                isBound,\r\n                offset: isBound ? offset : 0,\r\n            };\r\n        }\r\n    } else if (!dy2) {\r\n        // horizontal\r\n        if (isRender && !hasDx) {\r\n            // 90deg\r\n            return {\r\n                isBound: false,\r\n                offset: 0,\r\n            };\r\n        } else if (hasDy) {\r\n            // y = a * (x - x1) + y1\r\n            // x = (y - y1) / a + x1\r\n            // const a = dy1 / dx1;\r\n            // const x = dx1 ? (boundDot1[1] - dot1[1]) / a + dot1[0] : dot1[0];\r\n            const x = (boundDot1[1] - dot1[1]) / slope + dot1[0];\r\n\r\n            // boundDot1[0] <= x && x <= boundDot2[0]\r\n            return checkInnerBoundDot(x, boundDot1[0], boundDot2[0], isStart, threshold);\r\n        } else {\r\n            const offset = boundDot1[1] - dot1[1];\r\n\r\n            const isBound = abs(offset) <= (threshold || 0);\r\n\r\n            return {\r\n                isBound,\r\n                offset: isBound ? offset : 0,\r\n            };\r\n        }\r\n    }\r\n    return {\r\n        isBound: false,\r\n        offset: 0,\r\n    };\r\n}\r\nexport function getInnerBoundInfo(\r\n    moveable: MoveableManagerInterface<SnappableProps>,\r\n    lineInfos: InnerBoundLineInfo[],\r\n    datas: any,\r\n) {\r\n    return lineInfos.map(info => {\r\n        const {\r\n            isBound,\r\n            offset,\r\n            isVerticalBound,\r\n            isHorizontalBound,\r\n        } = checkInnerBound(moveable, info);\r\n\r\n        const multiple = info.multiple;\r\n\r\n        const sizeOffset = getDragDist({\r\n            datas,\r\n            distX: offset[0],\r\n            distY: offset[1],\r\n        }).map((size, i) => size * (multiple[i] ? 2 / multiple[i] : 0));\r\n\r\n        return {\r\n            sign: multiple,\r\n            isBound,\r\n            isVerticalBound,\r\n            isHorizontalBound,\r\n            isSnap: false,\r\n            offset: sizeOffset,\r\n        };\r\n    });\r\n}\r\n\r\nexport function getInnerBoundDragInfo(\r\n    moveable: MoveableManagerInterface<SnappableProps & DraggableProps, any>,\r\n    poses: number[][],\r\n    datas: any,\r\n) {\r\n    const lines = getCheckInnerBoundLineInfos(moveable, poses, [0, 0], false).map(info => {\r\n        return {\r\n            ...info,\r\n            multiple: info.multiple.map(dir => abs(dir) * 2),\r\n        };\r\n    });\r\n    const innerBoundInfo = getInnerBoundInfo(moveable, lines, datas);\r\n    const widthOffsetInfo = getNearOffsetInfo(innerBoundInfo, 0);\r\n    const heightOffsetInfo = getNearOffsetInfo(innerBoundInfo, 1);\r\n    let verticalOffset = 0;\r\n    let horizontalOffset = 0;\r\n    const isVerticalBound = widthOffsetInfo.isVerticalBound || heightOffsetInfo.isVerticalBound;\r\n    const isHorizontalBound = widthOffsetInfo.isHorizontalBound || heightOffsetInfo.isHorizontalBound;\r\n\r\n    if (isVerticalBound || isHorizontalBound) {\r\n        [verticalOffset, horizontalOffset] = getInverseDragDist({\r\n            datas,\r\n            distX: -widthOffsetInfo.offset[0],\r\n            distY: -heightOffsetInfo.offset[1],\r\n        });\r\n    }\r\n\r\n    return {\r\n        vertical: {\r\n            isBound: isVerticalBound,\r\n            offset: verticalOffset,\r\n        },\r\n        horizontal: {\r\n            isBound: isHorizontalBound,\r\n            offset: horizontalOffset,\r\n        },\r\n    };\r\n}\r\nexport function getCheckSnapLineDirections(\r\n    direction: number[],\r\n    keepRatio: boolean,\r\n) {\r\n    const lineDirections: number[][][] = [];\r\n    const x = direction[0];\r\n    const y = direction[1];\r\n    if (x && y) {\r\n        lineDirections.push(\r\n            [[0, y * 2], direction, [-x, y]],\r\n            [[x * 2, 0], direction, [x, -y]],\r\n        );\r\n    } else if (x) {\r\n        // vertcal\r\n        lineDirections.push(\r\n            [[x * 2, 0], [x, 1], [x, -1]],\r\n        );\r\n        if (keepRatio) {\r\n            lineDirections.push(\r\n                [[0, -1], [x, -1], [-x, -1]],\r\n                [[0, 1], [x, 1], [-x, 1]],\r\n            );\r\n        }\r\n    } else if (y) {\r\n        // horizontal\r\n        lineDirections.push(\r\n            [[0, y * 2], [1, y], [-1, y]],\r\n        );\r\n        if (keepRatio) {\r\n            lineDirections.push(\r\n                [[-1, 0], [-1, y], [-1, -y]],\r\n                [[1, 0], [1, y], [1, -y]],\r\n            );\r\n        }\r\n    } else {\r\n        // [0, 0] to all direction\r\n        lineDirections.push(\r\n            [[-1, 0], [-1, -1], [-1, 1]],\r\n            [[1, 0], [1, -1], [1, 1]],\r\n            [[0, -1], [-1, -1], [1, -1]],\r\n            [[0, 1], [-1, 1], [1, 1]],\r\n        );\r\n    }\r\n\r\n    return lineDirections;\r\n}\r\nexport interface InnerBoundLineInfo {\r\n    line: number[][];\r\n    multiple: number[];\r\n    horizontalSign: boolean;\r\n    verticalSign: boolean;\r\n    centerSign: boolean;\r\n    lineConstants: [number, number, number];\r\n}\r\nexport function getCheckInnerBoundLineInfos(\r\n    moveable: MoveableManagerInterface<SnappableProps>,\r\n    poses: number[][],\r\n    direction: number[],\r\n    keepRatio: boolean,\r\n): InnerBoundLineInfo[] {\r\n    const {\r\n        allMatrix,\r\n        is3d,\r\n    } = moveable.state;\r\n    const virtualPoses = calculatePoses(allMatrix, 100, 100, is3d ? 4 : 3);\r\n    const center = getPosByDirection(virtualPoses, [0, 0]);\r\n\r\n    return getCheckSnapLineDirections(direction, keepRatio).map(([multiple, dir1, dir2]) => {\r\n        const virtualLine = [\r\n            getPosByDirection(virtualPoses, dir1),\r\n            getPosByDirection(virtualPoses, dir2),\r\n        ];\r\n        const lineConstants = solveLineConstants(virtualLine);\r\n        const {\r\n            vertical: verticalSign,\r\n            horizontal: horizontalSign,\r\n        } = isStartLine(center, virtualLine);\r\n        const centerSign = hitTestLine(center, virtualLine) <= 0;\r\n\r\n        return {\r\n            multiple,\r\n            centerSign,\r\n            verticalSign,\r\n            horizontalSign,\r\n            lineConstants,\r\n            line: [\r\n                getPosByDirection(poses, dir1),\r\n                getPosByDirection(poses, dir2),\r\n            ],\r\n        };\r\n    });\r\n}\r\n\r\nfunction isBoundRotate(\r\n    relativePoses: number[][],\r\n    boundDots: number[][],\r\n    center: number[],\r\n    rad: number,\r\n) {\r\n    const nextPoses = rad ? relativePoses.map(pos => rotate(pos, rad)) : relativePoses;\r\n    return [\r\n        [nextPoses[0], nextPoses[1]],\r\n        [nextPoses[1], nextPoses[3]],\r\n        [nextPoses[3], nextPoses[2]],\r\n        [nextPoses[2], nextPoses[0]],\r\n    ].some(line => {\r\n        const centerSign = hitTestLine(center, line) <= 0;\r\n\r\n        return !isSameStartLine(boundDots, line, centerSign);\r\n    });\r\n}\r\nfunction getDistPointLine([pos1, pos2]: number[][]) {\r\n    // x = 0, y = 0\r\n    // d = (ax + by + c) / root(a2 + b2)\r\n\r\n    const dx = pos2[0] - pos1[0];\r\n    const dy = pos2[1] - pos1[1];\r\n\r\n    if (!dx) {\r\n        return abs(pos1[0]);\r\n    }\r\n    if (!dy) {\r\n        return abs(pos1[1]);\r\n    }\r\n    // y - y1 = a(x - x1)\r\n    // 0 = ax -y + -a * x1 + y1\r\n\r\n    const a = dy / dx;\r\n\r\n    return abs((-a * pos1[0] + pos1[1]) / Math.sqrt(Math.pow(a, 2) + 1));\r\n}\r\nfunction solveReverseLine([pos1, pos2]: number[][]) {\r\n    const dx = pos2[0] - pos1[0];\r\n    const dy = pos2[1] - pos1[1];\r\n\r\n    if (!dx) {\r\n        return [pos1[0], 0];\r\n    }\r\n    if (!dy) {\r\n        return [0, pos1[1]];\r\n    }\r\n    const a = dy / dx;\r\n    // y - y1 = a (x  - x1)\r\n    // y = ax - a * x1 + y1\r\n    const b = -a * pos1[0] + pos1[1];\r\n    // y = ax + b = -1/a x\r\n    // x = -b / (a + 1 / a)\r\n    // y = b / (1 + 1 / a^2)\r\n\r\n    return [\r\n        -b / (a + 1 / a),\r\n        b / ((a * a) + 1),\r\n    ];\r\n}\r\nexport function checkRotateInnerBounds(\r\n    moveable: MoveableManagerInterface<SnappableProps & RotatableProps, any>,\r\n    prevPoses: number[][],\r\n    nextPoses: number[][],\r\n    origin: number[],\r\n    rotation: number,\r\n) {\r\n    const bounds = moveable.props.innerBounds;\r\n    const rad = rotation * Math.PI / 180;\r\n\r\n    if (!bounds) {\r\n        return [];\r\n    }\r\n    const {\r\n        left,\r\n        top,\r\n        width,\r\n        height,\r\n    } = bounds;\r\n\r\n    const relativeLeft = left - origin[0];\r\n    const relativeRight = left + width - origin[0];\r\n    const relativeTop = top - origin[1];\r\n    const relativeBottom = top + height - origin[1];\r\n    const dots = [\r\n        [relativeLeft, relativeTop],\r\n        [relativeRight, relativeTop],\r\n        [relativeLeft, relativeBottom],\r\n        [relativeRight, relativeBottom],\r\n    ];\r\n    const center = getPosByDirection(nextPoses, [0, 0]);\r\n\r\n    if (!isBoundRotate(nextPoses, dots, center, 0)) {\r\n        return [];\r\n    }\r\n    const result: number[] = [];\r\n    const dotInfos = dots.map(dot => [\r\n        getDistSize(dot),\r\n        getRad([0, 0], dot),\r\n    ]);\r\n    [\r\n        [nextPoses[0], nextPoses[1]],\r\n        [nextPoses[1], nextPoses[3]],\r\n        [nextPoses[3], nextPoses[2]],\r\n        [nextPoses[2], nextPoses[0]],\r\n    ].forEach(line => {\r\n        const lineRad = getRad([0, 0], solveReverseLine(line));\r\n        const lineDist = getDistPointLine(line);\r\n\r\n        result.push(...dotInfos\r\n            .filter(([dotDist]) => {\r\n                return dotDist && lineDist <= dotDist;\r\n            })\r\n            .map(([dotDist, dotRad]) => {\r\n                const distRad = Math.acos(dotDist ? lineDist / dotDist : 0);\r\n                const nextRad1 = dotRad + distRad;\r\n                const nextRad2 = dotRad - distRad;\r\n\r\n                return [\r\n                    rad + nextRad1 - lineRad,\r\n                    rad + nextRad2 - lineRad,\r\n                ];\r\n            })\r\n            .reduce((prev, cur) => {\r\n                prev.push(...cur);\r\n                return prev;\r\n            }, [])\r\n            .filter(nextRad => !isBoundRotate(prevPoses, dots, center, nextRad))\r\n            .map(nextRad => throttle(nextRad * 180 / Math.PI, TINY_NUM)));\r\n    });\r\n    return result;\r\n}\r\n\r\nexport function checkInnerBoundPoses(\r\n    moveable: MoveableManagerInterface<SnappableProps>,\r\n) {\r\n    const innerBounds = moveable.props.innerBounds;\r\n    const boundMap = getInitialBounds();\r\n\r\n    if (!innerBounds) {\r\n        return {\r\n            boundMap,\r\n            vertical: [],\r\n            horizontal: [],\r\n        };\r\n    }\r\n    const {\r\n        pos1,\r\n        pos2,\r\n        pos3,\r\n        pos4,\r\n    } = moveable.getRect();\r\n    const poses = [pos1, pos2, pos3, pos4];\r\n    const center = getPosByDirection(poses, [0, 0]);\r\n    const { left, top, width, height } = innerBounds;\r\n    const leftLine = [[left, top], [left, top + height]];\r\n    const topLine = [[left, top], [left + width, top]];\r\n    const rightLine = [[left + width, top], [left + width, top + height]];\r\n    const bottomLine = [[left, top + height], [left + width, top + height]];\r\n    const lineInfos = getCheckInnerBoundLineInfos(moveable, poses, [0, 0], false);\r\n\r\n    const horizontalPoses: number[] = [];\r\n    const verticalPoses: number[] = [];\r\n\r\n\r\n    lineInfos.forEach(lineInfo => {\r\n        const { line, lineConstants } = lineInfo;\r\n        const {\r\n            horizontal: isHorizontalStart,\r\n            vertical: isVerticalStart,\r\n        } = isStartLine(center, line);\r\n\r\n        // test vertical\r\n        const topBoundInfo = checkLineBoundCollision(line, lineConstants, topLine, isVerticalStart, 1, true);\r\n        const bottomBoundInfo = checkLineBoundCollision(line, lineConstants, bottomLine, isVerticalStart, 1, true);\r\n\r\n        // test horizontal\r\n        const leftBoundInfo = checkLineBoundCollision(line, lineConstants, leftLine, isHorizontalStart, 1, true);\r\n        const rightBoundInfo = checkLineBoundCollision(line, lineConstants, rightLine, isHorizontalStart, 1, true);\r\n\r\n        if (topBoundInfo.isBound && !boundMap.top) {\r\n            horizontalPoses.push(top);\r\n            boundMap.top = true;\r\n        }\r\n        if (bottomBoundInfo.isBound && !boundMap.bottom) {\r\n            horizontalPoses.push(top + height);\r\n            boundMap.bottom = true;\r\n        }\r\n        if (leftBoundInfo.isBound && !boundMap.left) {\r\n            verticalPoses.push(left);\r\n            boundMap.left = true;\r\n        }\r\n        if (rightBoundInfo.isBound && !boundMap.right) {\r\n            verticalPoses.push(left + width);\r\n            boundMap.right = true;\r\n        }\r\n    });\r\n\r\n    return {\r\n        boundMap,\r\n        horizontal: horizontalPoses,\r\n        vertical: verticalPoses,\r\n    };\r\n}\r\n","import { getDist, getRad, IObject, TINY_NUM } from \"@daybrush/utils\";\r\nimport { minus } from \"@scena/matrix\";\r\nimport { abs, getAbsolutePoses, getDistSize, getRect, maxOffset } from \"../../utils\";\r\nimport { getDragDist, getPosByDirection } from \"../../gesto/GestoUtils\";\r\nimport {\r\n    BoundInfo, SnapInfo, MoveableManagerInterface, SnappableProps,\r\n    SnappableState, SnapBoundInfo, SnapGuideline, BoundType, SnapOffsetInfo, DraggableProps,\r\n} from \"../../types\";\r\nimport { checkBoundKeepRatio, checkBoundPoses, getBounds } from \"./bounds\";\r\nimport { getInnerBoundDragInfo } from \"./innerBounds\";\r\nimport {\r\n    getNearestSnapGuidelineInfo, checkMoveableSnapPoses,\r\n    checkSnapPoses, checkSnapKeepRatio,\r\n} from \"./snap\";\r\nimport { hasGuidelines, getSnapDirections, splitSnapDirectionPoses } from \"./utils\";\r\n\r\ninterface DirectionSnapType<T> {\r\n    vertical: T;\r\n    horizontal: T;\r\n}\r\n\r\nexport function solveEquation(\r\n    pos1: number[],\r\n    pos2: number[],\r\n    snapOffset: number,\r\n    isVertical: boolean\r\n) {\r\n    let dx = pos2[0] - pos1[0];\r\n    let dy = pos2[1] - pos1[1];\r\n\r\n    if (abs(dx) < TINY_NUM) {\r\n        dx = 0;\r\n    }\r\n    if (abs(dy) < TINY_NUM) {\r\n        dy = 0;\r\n    }\r\n    if (!dx) {\r\n        // y = 0 * x + b\r\n        // only horizontal\r\n        if (!isVertical) {\r\n            return [0, snapOffset];\r\n        }\r\n        return [0, 0];\r\n    }\r\n    if (!dy) {\r\n        // only vertical\r\n        if (isVertical) {\r\n            return [snapOffset, 0];\r\n        }\r\n        return [0, 0];\r\n    }\r\n    // y = ax + b\r\n    const a = dy / dx;\r\n    const b = pos1[1] - a * pos1[0];\r\n\r\n    if (isVertical) {\r\n        // y = a * x + b\r\n        const y = a * (pos2[0] + snapOffset) + b;\r\n\r\n        return [snapOffset, y - pos2[1]];\r\n    } else {\r\n        // x = (y - b) / a\r\n        const x = (pos2[1] + snapOffset - b) / a;\r\n\r\n        return [x - pos2[0], snapOffset];\r\n    }\r\n}\r\n\r\n\r\nfunction solveNextOffset(\r\n    pos1: number[],\r\n    pos2: number[],\r\n    offset: number,\r\n    isVertical: boolean,\r\n    datas: IObject<any>\r\n) {\r\n    const sizeOffset = solveEquation(pos1, pos2, offset, isVertical);\r\n\r\n    if (!sizeOffset) {\r\n        return {\r\n            isOutside: false,\r\n            offset: [0, 0],\r\n        };\r\n    }\r\n    const size = getDist(pos1, pos2);\r\n    const dist1 = getDist(sizeOffset, pos1);\r\n    const dist2 = getDist(sizeOffset, pos2);\r\n\r\n    const isOutside = dist1 > size || dist2 > size;\r\n    const [widthOffset, heightOffset] = getDragDist({\r\n        datas,\r\n        distX: sizeOffset[0],\r\n        distY: sizeOffset[1],\r\n    });\r\n\r\n    return {\r\n        offset: [widthOffset, heightOffset],\r\n        isOutside,\r\n    };\r\n}\r\n\r\nfunction getSnapBound(boundInfo: BoundInfo, snapInfo: SnapInfo) {\r\n    if (boundInfo.isBound) {\r\n        return boundInfo.offset;\r\n    } else if (snapInfo.isSnap) {\r\n        return getNearestSnapGuidelineInfo(snapInfo).offset;\r\n    }\r\n    return 0;\r\n}\r\n\r\n\r\nexport function checkThrottleDragRotate(\r\n    throttleDragRotate: number,\r\n    [distX, distY]: number[],\r\n    [isVerticalBound, isHorizontalBound]: boolean[],\r\n    [isVerticalSnap, isHorizontalSnap]: boolean[],\r\n    [verticalOffset, horizontalOffset]: number[]\r\n) {\r\n    let offsetX = -verticalOffset;\r\n    let offsetY = -horizontalOffset;\r\n\r\n    if (throttleDragRotate && distX && distY) {\r\n        offsetX = 0;\r\n        offsetY = 0;\r\n        const adjustPoses: number[][] = [];\r\n        if (isVerticalBound && isHorizontalBound) {\r\n            adjustPoses.push([0, horizontalOffset], [verticalOffset, 0]);\r\n        } else if (isVerticalBound) {\r\n            adjustPoses.push([verticalOffset, 0]);\r\n        } else if (isHorizontalBound) {\r\n            adjustPoses.push([0, horizontalOffset]);\r\n        } else if (isVerticalSnap && isHorizontalSnap) {\r\n            adjustPoses.push([0, horizontalOffset], [verticalOffset, 0]);\r\n        } else if (isVerticalSnap) {\r\n            adjustPoses.push([verticalOffset, 0]);\r\n        } else if (isHorizontalSnap) {\r\n            adjustPoses.push([0, horizontalOffset]);\r\n        }\r\n        if (adjustPoses.length) {\r\n            adjustPoses.sort((a, b) => {\r\n                return (\r\n                    getDistSize(minus([distX, distY], a)) -\r\n                    getDistSize(minus([distX, distY], b))\r\n                );\r\n            });\r\n            const adjustPos = adjustPoses[0];\r\n\r\n            if (adjustPos[0] && abs(distX) > TINY_NUM) {\r\n                offsetX = -adjustPos[0];\r\n                offsetY =\r\n                    (distY * abs(distX + offsetX)) / abs(distX) -\r\n                    distY;\r\n            } else if (adjustPos[1] && abs(distY) > TINY_NUM) {\r\n                const prevDistY = distY;\r\n                offsetY = -adjustPos[1];\r\n                offsetX =\r\n                    (distX * abs(distY + offsetY)) / abs(prevDistY) -\r\n                    distX;\r\n            }\r\n            if (throttleDragRotate && isHorizontalBound && isVerticalBound) {\r\n                if (\r\n                    abs(offsetX) > TINY_NUM &&\r\n                    abs(offsetX) < abs(verticalOffset)\r\n                ) {\r\n                    const scale = abs(verticalOffset) / abs(offsetX);\r\n\r\n                    offsetX *= scale;\r\n                    offsetY *= scale;\r\n                } else if (\r\n                    abs(offsetY) > TINY_NUM &&\r\n                    abs(offsetY) < abs(horizontalOffset)\r\n                ) {\r\n                    const scale =\r\n                        abs(horizontalOffset) / abs(offsetY);\r\n\r\n                    offsetX *= scale;\r\n                    offsetY *= scale;\r\n                } else {\r\n                    offsetX = maxOffset(-verticalOffset, offsetX);\r\n                    offsetY = maxOffset(-horizontalOffset, offsetY);\r\n                }\r\n            }\r\n        }\r\n    } else {\r\n        offsetX = distX || isVerticalBound ? -verticalOffset : 0;\r\n        offsetY = distY || isHorizontalBound ? -horizontalOffset : 0;\r\n    }\r\n    return [offsetX, offsetY];\r\n}\r\n\r\nexport function checkSnapBoundsDrag(\r\n    moveable: MoveableManagerInterface<SnappableProps & DraggableProps, any>,\r\n    distX: number,\r\n    distY: number,\r\n    throttleDragRotate: number,\r\n    ignoreSnap: boolean,\r\n    datas: any\r\n) {\r\n    if (!hasGuidelines(moveable, \"draggable\")) {\r\n        return [\r\n            {\r\n                isSnap: false,\r\n                isBound: false,\r\n                offset: 0,\r\n            },\r\n            {\r\n                isSnap: false,\r\n                isBound: false,\r\n                offset: 0,\r\n            },\r\n        ];\r\n    }\r\n    const poses = getAbsolutePoses(datas.absolutePoses, [distX, distY]);\r\n    const { left, right, top, bottom } = getRect(poses);\r\n    const boundPoses = {\r\n        horizontal: poses.map((pos) => pos[1]),\r\n        vertical: poses.map((pos) => pos[0]),\r\n    };\r\n    const snapDirections = getSnapDirections(moveable.props.snapDirections);\r\n    const snapPoses = splitSnapDirectionPoses(snapDirections, {\r\n        left,\r\n        right,\r\n        top,\r\n        bottom,\r\n        center: (left + right) / 2,\r\n        middle: (top + bottom) / 2,\r\n    });\r\n    const {\r\n        vertical: verticalSnapBoundInfo,\r\n        horizontal: horizontalSnapBoundInfo,\r\n    } = checkMoveableSnapBounds(moveable, ignoreSnap, snapPoses, boundPoses);\r\n    const {\r\n        vertical: verticalInnerBoundInfo,\r\n        horizontal: horizontalInnerBoundInfo,\r\n    } = getInnerBoundDragInfo(moveable, poses, datas);\r\n\r\n    const isVerticalSnap = verticalSnapBoundInfo.isSnap;\r\n    const isHorizontalSnap = horizontalSnapBoundInfo.isSnap;\r\n    const isVerticalBound =\r\n        verticalSnapBoundInfo.isBound || verticalInnerBoundInfo.isBound;\r\n    const isHorizontalBound =\r\n        horizontalSnapBoundInfo.isBound || horizontalInnerBoundInfo.isBound;\r\n    const verticalOffset = maxOffset(\r\n        verticalSnapBoundInfo.offset,\r\n        verticalInnerBoundInfo.offset\r\n    );\r\n    const horizontalOffset = maxOffset(\r\n        horizontalSnapBoundInfo.offset,\r\n        horizontalInnerBoundInfo.offset\r\n    );\r\n\r\n    const [offsetX, offsetY] = checkThrottleDragRotate(\r\n        throttleDragRotate,\r\n        [distX, distY],\r\n        [isVerticalBound, isHorizontalBound],\r\n        [isVerticalSnap, isHorizontalSnap],\r\n        [verticalOffset, horizontalOffset]\r\n    );\r\n\r\n    return [\r\n        {\r\n            isBound: isVerticalBound,\r\n            isSnap: isVerticalSnap,\r\n            offset: offsetX,\r\n        },\r\n        {\r\n            isBound: isHorizontalBound,\r\n            isSnap: isHorizontalSnap,\r\n            offset: offsetY,\r\n        },\r\n    ];\r\n}\r\n\r\nexport function checkMoveableSnapBounds(\r\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\r\n    ignoreSnap: boolean,\r\n    poses: { vertical: number[]; horizontal: number[]; },\r\n    boundPoses: { vertical: number[]; horizontal: number[]; } = poses,\r\n): DirectionSnapType<Required<SnapBoundInfo>> {\r\n    const {\r\n        horizontal: horizontalBoundInfos,\r\n        vertical: verticalBoundInfos,\r\n    } = checkBoundPoses(\r\n        getBounds(moveable),\r\n        boundPoses.vertical,\r\n        boundPoses.horizontal,\r\n    );\r\n    const {\r\n        horizontal: horizontalSnapInfo,\r\n        vertical: verticalSnapInfo,\r\n    } = ignoreSnap ? {\r\n        horizontal: { isSnap: false, index: -1 } as SnapInfo,\r\n        vertical: { isSnap: false, index: -1 } as SnapInfo,\r\n    } : checkMoveableSnapPoses(\r\n        moveable,\r\n        poses.vertical,\r\n        poses.horizontal,\r\n    );\r\n    const horizontalOffset = getSnapBound(\r\n        horizontalBoundInfos[0],\r\n        horizontalSnapInfo\r\n    );\r\n    const verticalOffset = getSnapBound(\r\n        verticalBoundInfos[0],\r\n        verticalSnapInfo\r\n    );\r\n\r\n    const horizontalDist = abs(horizontalOffset);\r\n    const verticalDist = abs(verticalOffset);\r\n\r\n    return {\r\n        horizontal: {\r\n            isBound: horizontalBoundInfos[0].isBound,\r\n            isSnap: horizontalSnapInfo.isSnap,\r\n            snapIndex: horizontalSnapInfo.index,\r\n            offset: horizontalOffset,\r\n            dist: horizontalDist,\r\n            bounds: horizontalBoundInfos,\r\n            snap: horizontalSnapInfo,\r\n        },\r\n        vertical: {\r\n            isBound: verticalBoundInfos[0].isBound,\r\n            isSnap: verticalSnapInfo.isSnap,\r\n            snapIndex: verticalSnapInfo.index,\r\n            offset: verticalOffset,\r\n            dist: verticalDist,\r\n            bounds: verticalBoundInfos,\r\n            snap: verticalSnapInfo,\r\n        },\r\n    };\r\n}\r\nexport function checkSnapBounds(\r\n    guideines: SnapGuideline[],\r\n    bounds: BoundType | undefined | false,\r\n    posesX: number[],\r\n    posesY: number[],\r\n    snapThreshold: number,\r\n    multiples = [1, 1],\r\n): DirectionSnapType<Required<SnapBoundInfo>> {\r\n    const {\r\n        horizontal: horizontalBoundInfos,\r\n        vertical: verticalBoundInfos,\r\n    } = checkBoundPoses(bounds, posesX, posesY);\r\n\r\n    // options.isRequest ? {\r\n    //     horizontal: { isSnap: false, index: -1 } as SnapInfo,\r\n    //     vertical: { isSnap: false, index: -1 } as SnapInfo,\r\n    // } :\r\n    const {\r\n        horizontal: horizontalSnapInfo,\r\n        vertical: verticalSnapInfo,\r\n    } = checkSnapPoses(\r\n        guideines, posesX, posesY, [], [],\r\n        snapThreshold,\r\n        multiples,\r\n    );\r\n\r\n    const horizontalOffset = getSnapBound(\r\n        horizontalBoundInfos[0],\r\n        horizontalSnapInfo\r\n    );\r\n    const verticalOffset = getSnapBound(\r\n        verticalBoundInfos[0],\r\n        verticalSnapInfo\r\n    );\r\n\r\n    const horizontalDist = abs(horizontalOffset);\r\n    const verticalDist = abs(verticalOffset);\r\n\r\n    return {\r\n        horizontal: {\r\n            isBound: horizontalBoundInfos[0].isBound,\r\n            isSnap: horizontalSnapInfo.isSnap,\r\n            snapIndex: horizontalSnapInfo.index,\r\n            offset: horizontalOffset,\r\n            dist: horizontalDist,\r\n            bounds: horizontalBoundInfos,\r\n            snap: horizontalSnapInfo,\r\n        },\r\n        vertical: {\r\n            isBound: verticalBoundInfos[0].isBound,\r\n            isSnap: verticalSnapInfo.isSnap,\r\n            snapIndex: verticalSnapInfo.index,\r\n            offset: verticalOffset,\r\n            dist: verticalDist,\r\n            bounds: verticalBoundInfos,\r\n            snap: verticalSnapInfo,\r\n        },\r\n    };\r\n}\r\n\r\n\r\nfunction checkSnapRightLine(\r\n    startPos: number[],\r\n    endPos: number[],\r\n    snapBoundInfo: { vertical: SnapBoundInfo; horizontal: SnapBoundInfo },\r\n    keepRatio: boolean\r\n) {\r\n    const rad = (getRad(startPos, endPos) / Math.PI) * 180;\r\n    const {\r\n        vertical: {\r\n            isBound: isVerticalBound,\r\n            isSnap: isVerticalSnap,\r\n            dist: verticalDist,\r\n        },\r\n        horizontal: {\r\n            isBound: isHorizontalBound,\r\n            isSnap: isHorizontalSnap,\r\n            dist: horizontalDist,\r\n        },\r\n    } = snapBoundInfo;\r\n\r\n    const rad180 = rad % 180;\r\n    const isHorizontalLine = rad180 < 3 || rad180 > 177;\r\n    const isVerticalLine = rad180 > 87 && rad180 < 93;\r\n\r\n    if (horizontalDist < verticalDist) {\r\n        if (\r\n            isVerticalBound ||\r\n            (isVerticalSnap &&\r\n                !isVerticalLine &&\r\n                (!keepRatio || !isHorizontalLine))\r\n        ) {\r\n            return \"vertical\";\r\n        }\r\n    }\r\n    if (\r\n        isHorizontalBound ||\r\n        (isHorizontalSnap &&\r\n            !isHorizontalLine &&\r\n            (!keepRatio || !isVerticalLine))\r\n    ) {\r\n        return \"horizontal\";\r\n    }\r\n    return \"\";\r\n}\r\n\r\n\r\nexport function getSnapBoundInfo(\r\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\r\n    poses: number[][],\r\n    directions: number[][][],\r\n    keepRatio: boolean,\r\n    isRequest: boolean,\r\n    datas: any\r\n) {\r\n    return directions.map(([startDirection, endDirection]) => {\r\n        const otherStartPos = getPosByDirection(poses, startDirection);\r\n        const otherEndPos = getPosByDirection(poses, endDirection);\r\n        const snapBoundInfo = keepRatio\r\n            ? checkSnapBoundsKeepRatio(\r\n                moveable,\r\n                otherStartPos,\r\n                otherEndPos,\r\n                isRequest\r\n            )\r\n            : checkMoveableSnapBounds(moveable, isRequest, {\r\n                vertical: [otherEndPos[0]],\r\n                horizontal: [otherEndPos[1]],\r\n            });\r\n\r\n        const {\r\n            horizontal: {\r\n                // dist: otherHorizontalDist,\r\n                offset: otherHorizontalOffset,\r\n                isBound: isOtherHorizontalBound,\r\n                isSnap: isOtherHorizontalSnap,\r\n            },\r\n            vertical: {\r\n                // dist: otherVerticalDist,\r\n                offset: otherVerticalOffset,\r\n                isBound: isOtherVerticalBound,\r\n                isSnap: isOtherVerticalSnap,\r\n            },\r\n        } = snapBoundInfo;\r\n\r\n        const multiple = minus(endDirection, startDirection);\r\n\r\n        if (!otherVerticalOffset && !otherHorizontalOffset) {\r\n            return {\r\n                isBound: isOtherVerticalBound || isOtherHorizontalBound,\r\n                isSnap: isOtherVerticalSnap || isOtherHorizontalSnap,\r\n                sign: multiple,\r\n                offset: [0, 0],\r\n            };\r\n        }\r\n        const snapLine = checkSnapRightLine(\r\n            otherStartPos,\r\n            otherEndPos,\r\n            snapBoundInfo,\r\n            keepRatio\r\n        );\r\n\r\n        if (!snapLine) {\r\n            return {\r\n                sign: multiple,\r\n                isBound: false,\r\n                isSnap: false,\r\n                offset: [0, 0],\r\n            };\r\n        }\r\n\r\n        const isVertical = snapLine === \"vertical\";\r\n        let sizeOffset = [0, 0];\r\n\r\n        if (\r\n            !keepRatio\r\n            && abs(endDirection[0]) === 1\r\n            && abs(endDirection[1]) === 1\r\n            && startDirection[0] !== endDirection[0]\r\n            && startDirection[1] !== endDirection[1]\r\n        ) {\r\n            sizeOffset = getDragDist({\r\n                datas,\r\n                distX: -otherVerticalOffset,\r\n                distY: -otherHorizontalOffset,\r\n            });\r\n        } else {\r\n            sizeOffset = solveNextOffset(\r\n                otherStartPos,\r\n                otherEndPos,\r\n                -(isVertical ? otherVerticalOffset : otherHorizontalOffset),\r\n                isVertical,\r\n                datas,\r\n            ).offset;\r\n        }\r\n        sizeOffset = sizeOffset.map((size, i) => size * (multiple[i] ? 2 / multiple[i] : 0));\r\n\r\n\r\n        return {\r\n            sign: multiple,\r\n            isBound: isVertical ? isOtherVerticalBound : isOtherHorizontalBound,\r\n            isSnap: isVertical ? isOtherVerticalSnap : isOtherHorizontalSnap,\r\n            offset: sizeOffset,\r\n        };\r\n    });\r\n}\r\n\r\n\r\nfunction getSnapBoundOffset(boundInfo: BoundInfo, snapInfo: SnapOffsetInfo) {\r\n    if (boundInfo.isBound) {\r\n        return boundInfo.offset;\r\n    } else if (snapInfo.isSnap) {\r\n        return snapInfo.offset;\r\n    }\r\n    return 0;\r\n}\r\n\r\nexport function checkSnapBoundsKeepRatio(\r\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\r\n    startPos: number[],\r\n    endPos: number[],\r\n    isRequest: boolean\r\n): DirectionSnapType<SnapBoundInfo> {\r\n    const {\r\n        horizontal: horizontalBoundInfo,\r\n        vertical: verticalBoundInfo,\r\n    } = checkBoundKeepRatio(moveable, startPos, endPos);\r\n    const {\r\n        horizontal: horizontalSnapInfo,\r\n        vertical: verticalSnapInfo,\r\n    } = isRequest ? ({\r\n        horizontal: { isSnap: false },\r\n        vertical: { isSnap: false },\r\n    } as any) : checkSnapKeepRatio(moveable, startPos, endPos);\r\n\r\n    const horizontalOffset = getSnapBoundOffset(\r\n        horizontalBoundInfo,\r\n        horizontalSnapInfo\r\n    );\r\n    const verticalOffset = getSnapBoundOffset(\r\n        verticalBoundInfo,\r\n        verticalSnapInfo\r\n    );\r\n\r\n    const horizontalDist = abs(horizontalOffset);\r\n    const verticalDist = abs(verticalOffset);\r\n\r\n    return {\r\n        horizontal: {\r\n            isBound: horizontalBoundInfo.isBound,\r\n            isSnap: horizontalSnapInfo.isSnap,\r\n            offset: horizontalOffset,\r\n            dist: horizontalDist,\r\n        },\r\n        vertical: {\r\n            isBound: verticalBoundInfo.isBound,\r\n            isSnap: verticalSnapInfo.isSnap,\r\n            offset: verticalOffset,\r\n            dist: verticalDist,\r\n        },\r\n    };\r\n}\r\n\r\nexport function checkMaxBounds(\r\n    moveable: MoveableManagerInterface<SnappableProps>,\r\n    poses: number[][],\r\n    direction: number[],\r\n    fixedPosition: number[],\r\n    datas: any\r\n) {\r\n    const fixedDirection = [-direction[0], -direction[1]];\r\n    const { width, height } = moveable.state;\r\n    const bounds = moveable.props.bounds;\r\n    let maxWidth = Infinity;\r\n    let maxHeight = Infinity;\r\n\r\n    if (bounds) {\r\n        const directions = [\r\n            [direction[0], -direction[1]],\r\n            [-direction[0], direction[1]],\r\n        ];\r\n        const {\r\n            left = -Infinity,\r\n            top = -Infinity,\r\n            right = Infinity,\r\n            bottom = Infinity,\r\n        } = bounds;\r\n\r\n        directions.forEach((otherDirection) => {\r\n            const isCheckVertical = otherDirection[0] !== fixedDirection[0];\r\n            const isCheckHorizontal = otherDirection[1] !== fixedDirection[1];\r\n            const otherPos = getPosByDirection(poses, otherDirection);\r\n            const deg = (getRad(fixedPosition, otherPos) * 360) / Math.PI;\r\n\r\n            if (isCheckHorizontal) {\r\n                const nextOtherPos = otherPos.slice();\r\n\r\n                if (abs(deg - 360) < 2 || abs(deg - 180) < 2) {\r\n                    nextOtherPos[1] = fixedPosition[1];\r\n                }\r\n                const {\r\n                    offset: [, heightOffset],\r\n                    isOutside: isHeightOutside,\r\n                } = solveNextOffset(\r\n                    fixedPosition,\r\n                    nextOtherPos,\r\n                    (fixedPosition[1] < otherPos[1] ? bottom : top) -\r\n                    otherPos[1],\r\n                    false,\r\n                    datas\r\n                );\r\n                if (!isNaN(heightOffset)) {\r\n                    maxHeight = height + (isHeightOutside ? 1 : -1) * abs(heightOffset);\r\n                }\r\n            }\r\n            if (isCheckVertical) {\r\n                const nextOtherPos = otherPos.slice();\r\n\r\n                if (abs(deg - 90) < 2 || abs(deg - 270) < 2) {\r\n                    nextOtherPos[0] = fixedPosition[0];\r\n                }\r\n                const {\r\n                    offset: [widthOffset],\r\n                    isOutside: isWidthOutside,\r\n                } = solveNextOffset(\r\n                    fixedPosition,\r\n                    nextOtherPos,\r\n                    (fixedPosition[0] < otherPos[0] ? right : left) - otherPos[0],\r\n                    true,\r\n                    datas\r\n                );\r\n                if (!isNaN(widthOffset)) {\r\n                    maxWidth = width + (isWidthOutside ? 1 : -1) * abs(widthOffset);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    return {\r\n        maxWidth,\r\n        maxHeight,\r\n    };\r\n}\r\n","import {\r\n    setDragStart, getBeforeDragDist, getTransformDist,\r\n    convertTransformFormat, resolveTransformEvent, fillTransformStartEvent,\r\n    setDefaultTransformIndex, fillOriginalTransform,\r\n} from \"../gesto/GestoUtils\";\r\nimport {\r\n    triggerEvent, fillParams,\r\n    getDistSize, prefix,\r\n    fillEndParams,\r\n    fillCSSObject,\r\n} from \"../utils\";\r\nimport { minus, plus } from \"@scena/matrix\";\r\nimport {\r\n    DraggableProps, OnDrag, OnDragGroup,\r\n    OnDragGroupStart, OnDragStart, OnDragEnd, DraggableState,\r\n    Renderer, OnDragGroupEnd, MoveableManagerInterface, MoveableGroupInterface,\r\n} from \"../types\";\r\nimport { triggerChildGesto } from \"../groupUtils\";\r\nimport { startCheckSnapDrag } from \"./Snappable\";\r\nimport { getRad, throttle, throttleArray } from \"@daybrush/utils\";\r\nimport { checkSnapBoundsDrag } from \"./snappable/snapBounds\";\r\nimport { TINY_NUM } from \"../consts\";\r\n\r\n/**\r\n * @namespace Draggable\r\n * @memberof Moveable\r\n * @description Draggable refers to the ability to drag and move targets.\r\n */\r\nexport default {\r\n    name: \"draggable\",\r\n    props: [\r\n        \"draggable\",\r\n        \"throttleDrag\",\r\n        \"throttleDragRotate\",\r\n        \"hideThrottleDragRotateLine\",\r\n        \"startDragRotate\",\r\n        \"edgeDraggable\",\r\n    ] as const,\r\n    events: [\r\n        \"dragStart\",\r\n        \"drag\",\r\n        \"dragEnd\",\r\n        \"dragGroupStart\",\r\n        \"dragGroup\",\r\n        \"dragGroupEnd\",\r\n    ] as const,\r\n    requestStyle(): string[] {\r\n        return [\"left\", \"top\", \"right\", \"bottom\"];\r\n    },\r\n    requestChildStyle(): string[] {\r\n        return [\"left\", \"top\", \"right\", \"bottom\"];\r\n    },\r\n    render(\r\n        moveable: MoveableManagerInterface<DraggableProps, DraggableState>,\r\n        React: Renderer,\r\n    ): any[] {\r\n        const { hideThrottleDragRotateLine, throttleDragRotate, zoom } = moveable.props;\r\n        const { dragInfo, beforeOrigin } = moveable.getState();\r\n\r\n        if (hideThrottleDragRotateLine || !throttleDragRotate || !dragInfo) {\r\n            return [];\r\n        }\r\n        const dist = dragInfo.dist;\r\n\r\n        if (!dist[0] && !dist[1]) {\r\n            return [];\r\n        }\r\n\r\n        const width = getDistSize(dist);\r\n        const rad = getRad(dist, [0, 0]);\r\n\r\n        return [<div className={prefix(\r\n            \"line\",\r\n            \"horizontal\",\r\n            \"dragline\",\r\n            \"dashed\",\r\n        )} key={`dragRotateGuideline`} style={{\r\n            width: `${width}px`,\r\n            transform: `translate(${beforeOrigin[0]}px, ${beforeOrigin[1]}px) rotate(${rad}rad) scaleY(${zoom})`,\r\n        }} />];\r\n    },\r\n    dragStart(\r\n        moveable: MoveableManagerInterface<DraggableProps, any>,\r\n        e: any,\r\n    ) {\r\n        const { datas, parentEvent, parentGesto } = e;\r\n        const state = moveable.state;\r\n        const {\r\n            gestos,\r\n            style,\r\n        } = state;\r\n\r\n        if (gestos.draggable) {\r\n            return false;\r\n        }\r\n        gestos.draggable = parentGesto || moveable.targetGesto;\r\n\r\n        datas.datas = {};\r\n        datas.left = parseFloat(style.left || \"\") || 0;\r\n        datas.top = parseFloat(style.top || \"\") || 0;\r\n        datas.bottom = parseFloat(style.bottom || \"\") || 0;\r\n        datas.right = parseFloat(style.right || \"\") || 0;\r\n        datas.startValue = [0, 0];\r\n\r\n        setDragStart(moveable, e);\r\n        setDefaultTransformIndex(moveable, e, \"translate\");\r\n        startCheckSnapDrag(moveable, datas);\r\n\r\n        datas.prevDist = [0, 0];\r\n        datas.prevBeforeDist = [0, 0];\r\n        datas.isDrag = false;\r\n        datas.deltaOffset = [0, 0];\r\n\r\n        const params = fillParams<OnDragStart>(moveable, e, {\r\n            set: (translate: number[]) => {\r\n                datas.startValue = translate;\r\n            },\r\n            ...fillTransformStartEvent(moveable, e),\r\n        });\r\n        const result = parentEvent || triggerEvent(moveable, \"onDragStart\", params);\r\n\r\n        if (result !== false) {\r\n            datas.isDrag = true;\r\n            moveable.state.dragInfo = {\r\n                startRect: moveable.getRect(),\r\n                dist: [0, 0],\r\n            };\r\n        } else {\r\n            gestos.draggable = null;\r\n            datas.isPinch = false;\r\n        }\r\n        return datas.isDrag ? params : false;\r\n    },\r\n    drag(\r\n        moveable: MoveableManagerInterface<DraggableProps, any>,\r\n        e: any,\r\n    ): OnDrag | undefined {\r\n        if (!e) {\r\n            return;\r\n        }\r\n        resolveTransformEvent(moveable, e, \"translate\");\r\n\r\n        const {\r\n            datas, parentEvent,\r\n            parentFlag, isPinch, deltaOffset,\r\n            useSnap,\r\n            isRequest,\r\n            isGroup,\r\n            parentThrottleDrag,\r\n        } = e;\r\n        let { distX, distY } = e;\r\n        const { isDrag, prevDist, prevBeforeDist, startValue } = datas;\r\n\r\n        if (!isDrag) {\r\n            return;\r\n        }\r\n\r\n        if (deltaOffset) {\r\n            distX += deltaOffset[0];\r\n            distY += deltaOffset[1];\r\n        }\r\n        const props = moveable.props;\r\n\r\n        const parentMoveable = props.parentMoveable;\r\n        const throttleDrag = isGroup ? 0 : (props.throttleDrag || parentThrottleDrag || 0);\r\n        const throttleDragRotate = parentEvent ? 0 : (props.throttleDragRotate || 0);\r\n\r\n        let dragRotateRad = 0;\r\n        let isVerticalSnap = false;\r\n        let isVerticalBound = false;\r\n        let isHorizontalSnap = false;\r\n        let isHorizontalBound = false;\r\n\r\n        if (!parentEvent && throttleDragRotate > 0 && (distX || distY)) {\r\n            const startDragRotate = props.startDragRotate || 0;\r\n            const deg\r\n                = throttle(startDragRotate + getRad([0, 0], [distX, distY]) * 180 / Math.PI, throttleDragRotate)\r\n                - startDragRotate;\r\n            const ry = distY * Math.abs(Math.cos((deg - 90) / 180 * Math.PI));\r\n            const rx = distX * Math.abs(Math.cos(deg / 180 * Math.PI));\r\n            const r = getDistSize([rx, ry]);\r\n            dragRotateRad = deg * Math.PI / 180;\r\n\r\n            distX = r * Math.cos(dragRotateRad);\r\n            distY = r * Math.sin(dragRotateRad);\r\n        }\r\n\r\n        if (!isPinch && !parentEvent && !parentFlag) {\r\n            const [verticalInfo, horizontalInfo] = checkSnapBoundsDrag(\r\n                moveable, distX, distY,\r\n                throttleDragRotate,\r\n                (!useSnap && isRequest) || deltaOffset,\r\n                datas,\r\n            );\r\n            isVerticalSnap = verticalInfo.isSnap;\r\n            isVerticalBound = verticalInfo.isBound;\r\n            isHorizontalSnap = horizontalInfo.isSnap;\r\n            isHorizontalBound = horizontalInfo.isBound;\r\n\r\n            const verticalOffset = verticalInfo.offset;\r\n            const horizontalOffset = horizontalInfo.offset;\r\n\r\n            distX += verticalOffset;\r\n            distY += horizontalOffset;\r\n        }\r\n\r\n        const beforeTranslate = plus(getBeforeDragDist({ datas, distX, distY }), startValue);\r\n        const translate = plus(getTransformDist({ datas, distX, distY }), startValue);\r\n\r\n        throttleArray(translate, TINY_NUM);\r\n        throttleArray(beforeTranslate, TINY_NUM);\r\n\r\n        if (!throttleDragRotate) {\r\n            if (!isVerticalSnap && !isVerticalBound) {\r\n                translate[0] = throttle(translate[0], throttleDrag);\r\n                beforeTranslate[0] = throttle(beforeTranslate[0], throttleDrag);\r\n            }\r\n            if (!isHorizontalSnap && !isHorizontalBound) {\r\n                translate[1] = throttle(translate[1], throttleDrag);\r\n                beforeTranslate[1] = throttle(beforeTranslate[1], throttleDrag);\r\n            }\r\n        }\r\n\r\n\r\n        const beforeDist = minus(beforeTranslate, startValue);\r\n        const dist = minus(translate, startValue);\r\n        const delta = minus(dist, prevDist);\r\n        const beforeDelta = minus(beforeDist, prevBeforeDist);\r\n\r\n        datas.prevDist = dist;\r\n        datas.prevBeforeDist = beforeDist;\r\n\r\n\r\n        datas.passDelta = delta; //distX - (datas.passDistX || 0);\r\n        // datas.passDeltaY = distY - (datas.passDistY || 0);\r\n        datas.passDist = dist; //distX;\r\n        // datas.passDistY = distY;\r\n\r\n        const left = datas.left + beforeDist[0];\r\n        const top = datas.top + beforeDist[1];\r\n        const right = datas.right - beforeDist[0];\r\n        const bottom = datas.bottom - beforeDist[1];\r\n        const nextTransform = convertTransformFormat(datas,\r\n            `translate(${translate[0]}px, ${translate[1]}px)`, `translate(${dist[0]}px, ${dist[1]}px)`);\r\n\r\n        fillOriginalTransform(e, nextTransform);\r\n\r\n        moveable.state.dragInfo.dist = parentEvent ? [0, 0] : dist;\r\n        if (!parentEvent && !parentMoveable && delta.every(num => !num) && beforeDelta.some(num => !num)) {\r\n            return;\r\n        }\r\n\r\n        const {\r\n            width,\r\n            height,\r\n        } = moveable.state;\r\n        const params = fillParams<OnDrag>(moveable, e, {\r\n            transform: nextTransform,\r\n            dist,\r\n            delta,\r\n            translate,\r\n            beforeDist,\r\n            beforeDelta,\r\n            beforeTranslate,\r\n            left,\r\n            top,\r\n            right,\r\n            bottom,\r\n            width,\r\n            height,\r\n            isPinch,\r\n            ...fillCSSObject({\r\n                transform: nextTransform,\r\n            }, e),\r\n        });\r\n\r\n        !parentEvent && triggerEvent(moveable, \"onDrag\", params);\r\n        return params;\r\n    },\r\n    dragAfter(\r\n        moveable: MoveableManagerInterface<DraggableProps, DraggableState>,\r\n        e: any,\r\n    ) {\r\n        const datas = e.datas;\r\n        const {\r\n            deltaOffset,\r\n        } = datas;\r\n\r\n        if (deltaOffset[0] || deltaOffset[1]) {\r\n            datas.deltaOffset = [0, 0];\r\n            return this.drag(moveable, {...e, deltaOffset });\r\n        }\r\n        return false;\r\n    },\r\n    dragEnd(\r\n        moveable: MoveableManagerInterface<DraggableProps, DraggableState>,\r\n        e: any,\r\n    ) {\r\n        const { parentEvent, datas } = e;\r\n\r\n        moveable.state.dragInfo = null;\r\n        if (!datas.isDrag) {\r\n            return;\r\n        }\r\n        datas.isDrag = false;\r\n        const param = fillEndParams<OnDragEnd>(moveable, e, {});\r\n        !parentEvent && triggerEvent(moveable, \"onDragEnd\", param);\r\n        return param;\r\n    },\r\n    dragGroupStart(moveable: MoveableGroupInterface<any, any>, e: any) {\r\n        const { datas, clientX, clientY } = e;\r\n\r\n        const params = this.dragStart(moveable, e);\r\n\r\n        if (!params) {\r\n            return false;\r\n        }\r\n        const {\r\n            childEvents,\r\n            eventParams,\r\n        } = triggerChildGesto(moveable, this, \"dragStart\", [\r\n            clientX || 0,\r\n            clientY || 0,\r\n        ], e, false, \"draggable\");\r\n\r\n        const nextParams: OnDragGroupStart = {\r\n            ...params,\r\n            targets: moveable.props.targets!,\r\n            events: eventParams,\r\n        };\r\n        const result = triggerEvent(moveable, \"onDragGroupStart\", nextParams);\r\n\r\n        datas.isDrag = result !== false;\r\n\r\n\r\n        // find data.startValue and based on first child moveable\r\n        const startValue = childEvents[0]?.datas.startValue ?? [0, 0];\r\n\r\n\r\n        datas.throttleOffset = [startValue[0] % 1, startValue[1] % 1];\r\n\r\n        return datas.isDrag ? params : false;\r\n    },\r\n    dragGroup(moveable: MoveableGroupInterface<any, any>, e: any) {\r\n        const { datas } = e;\r\n\r\n        if (!datas.isDrag) {\r\n            return;\r\n        }\r\n        const params = this.drag(moveable, {\r\n            ...e,\r\n            parentThrottleDrag: moveable.props.throttleDrag,\r\n        });\r\n        const { passDelta } = e.datas;\r\n        const {\r\n            eventParams,\r\n        } = triggerChildGesto(moveable, this, \"drag\", passDelta, e, false, \"draggable\");\r\n\r\n        if (!params) {\r\n            return;\r\n        }\r\n\r\n        const nextParams: OnDragGroup = {\r\n            targets: moveable.props.targets!,\r\n            events: eventParams,\r\n            ...params,\r\n        };\r\n\r\n        triggerEvent(moveable, \"onDragGroup\", nextParams);\r\n        return nextParams;\r\n    },\r\n    dragGroupEnd(moveable: MoveableGroupInterface<any, any>, e: any) {\r\n        const { isDrag, datas } = e;\r\n\r\n        if (!datas.isDrag) {\r\n            return;\r\n        }\r\n        this.dragEnd(moveable, e);\r\n        const {\r\n            eventParams,\r\n        } = triggerChildGesto(moveable, this, \"dragEnd\", [0, 0], e, false, \"draggable\");\r\n        triggerEvent(moveable, \"onDragGroupEnd\", fillEndParams<OnDragGroupEnd>(moveable, e, {\r\n            targets: moveable.props.targets!,\r\n            events: eventParams,\r\n        }));\r\n\r\n        return isDrag;\r\n    },\r\n    /**\r\n     * @method Moveable.Draggable#request\r\n     * @param {object} [e] - the draggable's request parameter\r\n     * @param {number} [e.x] - x position\r\n     * @param {number} [e.y] - y position\r\n     * @param {number} [e.deltaX] - X number to move\r\n     * @param {number} [e.deltaY] - Y number to move\r\n     * @return {Moveable.Requester} Moveable Requester\r\n     * @example\r\n\r\n     * // Instantly Request (requestStart - request - requestEnd)\r\n     * // Use Relative Value\r\n     * moveable.request(\"draggable\", { deltaX: 10, deltaY: 10 }, true);\r\n     * // Use Absolute Value\r\n     * moveable.request(\"draggable\", { x: 200, y: 100 }, true);\r\n     *\r\n     * // requestStart\r\n     * const requester = moveable.request(\"draggable\");\r\n     *\r\n     * // request\r\n     * // Use Relative Value\r\n     * requester.request({ deltaX: 10, deltaY: 10 });\r\n     * requester.request({ deltaX: 10, deltaY: 10 });\r\n     * requester.request({ deltaX: 10, deltaY: 10 });\r\n     * // Use Absolute Value\r\n     * moveable.request(\"draggable\", { x: 200, y: 100 });\r\n     * moveable.request(\"draggable\", { x: 220, y: 100 });\r\n     * moveable.request(\"draggable\", { x: 240, y: 100 });\r\n     *\r\n     * // requestEnd\r\n     * requester.requestEnd();\r\n     */\r\n    request(moveable: MoveableManagerInterface<any, any>) {\r\n        const datas = {};\r\n        const rect = moveable.getRect();\r\n        let distX = 0;\r\n        let distY = 0;\r\n        let useSnap = false;\r\n\r\n        return {\r\n            isControl: false,\r\n            requestStart(e: Record<string, any>) {\r\n                useSnap = e.useSnap;\r\n                return { datas, useSnap };\r\n            },\r\n            request(e: Record<string, any>) {\r\n                if (\"x\" in e) {\r\n                    distX = e.x - rect.left;\r\n                } else if (\"deltaX\" in e) {\r\n                    distX += e.deltaX;\r\n                }\r\n                if (\"y\" in e) {\r\n                    distY = e.y - rect.top;\r\n                } else if (\"deltaY\" in e) {\r\n                    distY += e.deltaY;\r\n                }\r\n\r\n                return { datas, distX, distY, useSnap };\r\n            },\r\n            requestEnd() {\r\n                return { datas, isDrag: true, useSnap };\r\n            },\r\n        };\r\n    },\r\n    unset(moveable: MoveableManagerInterface<any, Record<string, any>>) {\r\n        moveable.state.gestos.draggable = null;\r\n        moveable.state.dragInfo = null;\r\n    },\r\n};\r\n\r\n/**\r\n * Whether or not target can be dragged. (default: false)\r\n * @name Moveable.Draggable#draggable\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body);\r\n *\r\n * moveable.draggable = true;\r\n */\r\n\r\n/**\r\n * throttle of x, y when drag.\r\n * @name Moveable.Draggable#throttleDrag\r\n * @default 0\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body);\r\n *\r\n * moveable.throttleDrag = 1;\r\n */\r\n\r\n/**\r\n* throttle of angle of x, y when drag.\r\n* @name Moveable.Draggable#throttleDragRotate\r\n* @example\r\n* import Moveable from \"moveable\";\r\n*\r\n* const moveable = new Moveable(document.body);\r\n*\r\n* moveable.throttleDragRotate = 45;\r\n*/\r\n\r\n/**\r\n* start angle of throttleDragRotate of x, y when drag.\r\n* @name Moveable.Draggable#startDragRotate\r\n* @example\r\n* import Moveable from \"moveable\";\r\n*\r\n* const moveable = new Moveable(document.body);\r\n*\r\n* // 45, 135, 225, 315\r\n* moveable.throttleDragRotate = 90;\r\n* moveable.startDragRotate = 45;\r\n*/\r\n\r\n/**\r\n * When the drag starts, the dragStart event is called.\r\n * @memberof Moveable.Draggable\r\n * @event dragStart\r\n * @param {Moveable.Draggable.OnDragStart} - Parameters for the dragStart event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, { draggable: true });\r\n * moveable.on(\"dragStart\", ({ target }) => {\r\n *     console.log(target);\r\n * });\r\n */\r\n/**\r\n * When dragging, the drag event is called.\r\n * @memberof Moveable.Draggable\r\n * @event drag\r\n * @param {Moveable.Draggable.OnDrag} - Parameters for the drag event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, { draggable: true });\r\n * moveable.on(\"drag\", ({ target, transform }) => {\r\n *     target.style.transform = transform;\r\n * });\r\n */\r\n/**\r\n * When the drag finishes, the dragEnd event is called.\r\n * @memberof Moveable.Draggable\r\n * @event dragEnd\r\n * @param {Moveable.Draggable.OnDragEnd} - Parameters for the dragEnd event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, { draggable: true });\r\n * moveable.on(\"dragEnd\", ({ target, isDrag }) => {\r\n *     console.log(target, isDrag);\r\n * });\r\n */\r\n\r\n/**\r\n* When the group drag starts, the `dragGroupStart` event is called.\r\n* @memberof Moveable.Draggable\r\n* @event dragGroupStart\r\n* @param {Moveable.Draggable.OnDragGroupStart} - Parameters for the `dragGroupStart` event\r\n* @example\r\n* import Moveable from \"moveable\";\r\n*\r\n* const moveable = new Moveable(document.body, {\r\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\r\n*     draggable: true\r\n* });\r\n* moveable.on(\"dragGroupStart\", ({ targets }) => {\r\n*     console.log(\"onDragGroupStart\", targets);\r\n* });\r\n*/\r\n\r\n/**\r\n* When the group drag, the `dragGroup` event is called.\r\n* @memberof Moveable.Draggable\r\n* @event dragGroup\r\n* @param {Moveable.Draggable.OnDragGroup} - Parameters for the `dragGroup` event\r\n* @example\r\n* import Moveable from \"moveable\";\r\n*\r\n* const moveable = new Moveable(document.body, {\r\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\r\n*     draggable: true\r\n* });\r\n* moveable.on(\"dragGroup\", ({ targets, events }) => {\r\n*     console.log(\"onDragGroup\", targets);\r\n*     events.forEach(ev => {\r\n*          // drag event\r\n*          console.log(\"onDrag left, top\", ev.left, ev.top);\r\n*          // ev.target!.style.left = `${ev.left}px`;\r\n*          // ev.target!.style.top = `${ev.top}px`;\r\n*          console.log(\"onDrag translate\", ev.dist);\r\n*          ev.target!.style.transform = ev.transform;)\r\n*     });\r\n* });\r\n*/\r\n\r\n/**\r\n * When the group drag finishes, the `dragGroupEnd` event is called.\r\n * @memberof Moveable.Draggable\r\n * @event dragGroupEnd\r\n * @param {Moveable.Draggable.OnDragGroupEnd} - Parameters for the `dragGroupEnd` event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\r\n *     draggable: true\r\n * });\r\n * moveable.on(\"dragGroupEnd\", ({ targets, isDrag }) => {\r\n *     console.log(\"onDragGroupEnd\", targets, isDrag);\r\n * });\r\n */\r\n","import { calculatePosition } from \"../utils\";\r\nimport { getDirectionByPos, getPosByDirection } from \"../gesto/GestoUtils\";\r\n\r\n\r\nexport function getFixedDirectionInfo(\r\n    startPositions: number[][],\r\n    fixedDirection: number[],\r\n) {\r\n    const fixedPosition = getPosByDirection(startPositions, fixedDirection);\r\n    const fixedOffset = [0, 0];\r\n\r\n    return {\r\n        fixedPosition,\r\n        fixedDirection,\r\n        fixedOffset,\r\n    };\r\n}\r\n\r\nexport function getOffsetFixedDirectionInfo(\r\n    state: {\r\n        allMatrix: number[];\r\n        is3d: boolean;\r\n        width: number;\r\n        height: number;\r\n    },\r\n    fixedDirection: number[],\r\n) {\r\n    // for start\r\n    const {\r\n        allMatrix,\r\n        is3d,\r\n        width,\r\n        height,\r\n    } = state;\r\n    const n = is3d ? 4 : 3;\r\n    const nextFixedOffset = [\r\n        width / 2 * (1 + fixedDirection[0]),\r\n        height / 2 * (1 + fixedDirection[1]),\r\n    ];\r\n    const fixedPosition = calculatePosition(allMatrix, nextFixedOffset, n);\r\n    const fixedOffset = [0, 0];\r\n\r\n    return {\r\n        fixedPosition,\r\n        fixedDirection,\r\n        fixedOffset,\r\n    };\r\n}\r\n\r\n\r\nexport function getOffsetFixedPositionInfo(\r\n    state: {\r\n        allMatrix: number[];\r\n        is3d: boolean;\r\n        width: number;\r\n        height: number;\r\n    },\r\n    offsetFixedPosition: number[],\r\n) {\r\n    // for start\r\n    const {\r\n        allMatrix,\r\n        is3d,\r\n        width,\r\n        height,\r\n    } = state;\r\n    const n = is3d ? 4 : 3;\r\n    const fixedDirection = getDirectionByPos(offsetFixedPosition, width, height);\r\n    const nextFixedPosition = calculatePosition(allMatrix, offsetFixedPosition, n);\r\n    const fixedOffset = [\r\n        width ? 0 : offsetFixedPosition[0],\r\n        height ? 0 : offsetFixedPosition[1],\r\n    ];\r\n\r\n    return {\r\n        fixedPosition: nextFixedPosition,\r\n        fixedDirection,\r\n        fixedOffset,\r\n    };\r\n}\r\n","import {\r\n    triggerEvent,\r\n    fillParams,\r\n    fillEndParams,\r\n    getAbsolutePosesByState,\r\n    catchEvent,\r\n    getOffsetSizeDist,\r\n    getProps,\r\n    getDirectionCondition,\r\n    calculatePoses,\r\n    fillAfterTransform,\r\n    getDirectionViewClassName,\r\n    getTotalDirection,\r\n    abs,\r\n} from \"../utils\";\r\nimport {\r\n    setDragStart,\r\n    getResizeDist,\r\n    getAbsolutePosition,\r\n    getNextMatrix,\r\n    getNextTransforms,\r\n} from \"../gesto/GestoUtils\";\r\nimport {\r\n    ResizableProps, OnResizeGroup, OnResizeGroupEnd,\r\n    OnResizeGroupStart, DraggableProps, OnDrag, OnResizeStart, SnappableState,\r\n    OnResize, OnResizeEnd, MoveableManagerInterface, MoveableGroupInterface, SnappableProps,\r\n    OnBeforeResize, OnBeforeResizeGroup, ResizableRequestParam,\r\n} from \"../types\";\r\nimport { getRenderDirections } from \"../renderDirections\";\r\nimport {\r\n    fillChildEvents,\r\n    startChildDist,\r\n    triggerChildAbles,\r\n} from \"../groupUtils\";\r\nimport Draggable from \"./Draggable\";\r\nimport { calculate, convertDimension, createRotateMatrix, plus } from \"@scena/matrix\";\r\nimport CustomGesto, { setCustomDrag } from \"../gesto/CustomGesto\";\r\nimport { checkSnapResize } from \"./Snappable\";\r\nimport {\r\n    calculateBoundSize,\r\n    isString, convertUnitSize,\r\n    throttle,\r\n    isNumber,\r\n} from \"@daybrush/utils\";\r\nimport { TINY_NUM } from \"../consts\";\r\nimport { parseMat } from \"css-to-mat\";\r\nimport { getFixedDirectionInfo, getOffsetFixedPositionInfo } from \"../utils/getFixedDirection\";\r\n\r\n/**\r\n * @namespace Resizable\r\n * @memberof Moveable\r\n * @description Resizable indicates whether the target's width and height can be increased or decreased.\r\n */\r\n\r\nconst directionCondition = getDirectionCondition(\"resizable\");\r\n\r\nexport default {\r\n    name: \"resizable\",\r\n    ableGroup: \"size\",\r\n    canPinch: true,\r\n    props: [\r\n        \"resizable\",\r\n        \"throttleResize\",\r\n        \"renderDirections\",\r\n        \"displayAroundControls\",\r\n        \"keepRatio\",\r\n        \"resizeFormat\",\r\n        \"keepRatioFinally\",\r\n        \"edge\",\r\n        \"checkResizableError\",\r\n    ] as const,\r\n    events: [\r\n        \"resizeStart\",\r\n        \"beforeResize\",\r\n        \"resize\",\r\n        \"resizeEnd\",\r\n        \"resizeGroupStart\",\r\n        \"beforeResizeGroup\",\r\n        \"resizeGroup\",\r\n        \"resizeGroupEnd\",\r\n    ] as const,\r\n    render: getRenderDirections(\"resizable\"),\r\n    dragControlCondition: directionCondition,\r\n    viewClassName: getDirectionViewClassName(\"resizable\"),\r\n    dragControlStart(\r\n        moveable: MoveableManagerInterface<ResizableProps & DraggableProps, SnappableState>,\r\n        e: any,\r\n    ) {\r\n        const {\r\n            inputEvent,\r\n            isPinch,\r\n            isGroup,\r\n            parentDirection,\r\n            parentGesto,\r\n            datas,\r\n            parentFixedDirection,\r\n            parentEvent,\r\n        } = e;\r\n\r\n        const direction = getTotalDirection(\r\n            parentDirection,\r\n            isPinch,\r\n            inputEvent,\r\n            datas,\r\n        );\r\n\r\n        const state = moveable.state;\r\n        const { target, width, height, gestos } = state;\r\n\r\n        if (!direction || !target) {\r\n            return false;\r\n        }\r\n        if (gestos.resizable) {\r\n            return false;\r\n        }\r\n        gestos.resizable = parentGesto || moveable.controlGesto;\r\n        !isPinch && setDragStart(moveable, e);\r\n\r\n        datas.datas = {};\r\n        datas.direction = direction;\r\n        datas.startOffsetWidth = width;\r\n        datas.startOffsetHeight = height;\r\n        datas.prevWidth = 0;\r\n        datas.prevHeight = 0;\r\n\r\n        datas.minSize = [0, 0];\r\n\r\n\r\n        datas.startWidth = state.inlineCSSWidth || state.cssWidth;\r\n        datas.startHeight = state.inlineCSSHeight || state.cssHeight;\r\n        datas.maxSize = [Infinity, Infinity];\r\n\r\n        if (!isGroup) {\r\n            datas.minSize = [\r\n                state.minOffsetWidth,\r\n                state.minOffsetHeight,\r\n            ];\r\n            datas.maxSize = [\r\n                state.maxOffsetWidth,\r\n                state.maxOffsetHeight,\r\n            ];\r\n        }\r\n        const transformOrigin = moveable.props.transformOrigin || \"% %\";\r\n\r\n        datas.transformOrigin = transformOrigin && isString(transformOrigin)\r\n            ? transformOrigin.split(\" \")\r\n            : transformOrigin;\r\n\r\n        datas.startOffsetMatrix = state.offsetMatrix;\r\n        datas.startTransformOrigin = state.transformOrigin;\r\n\r\n        datas.isWidth = e?.parentIsWidth ?? ((!direction[0] && !direction[1]) || direction[0] || !direction[1]);\r\n\r\n        function setRatio(ratio: number) {\r\n            datas.ratio = ratio && isFinite(ratio) ? ratio : 0;\r\n        }\r\n\r\n\r\n        datas.startPositions = getAbsolutePosesByState(moveable.state);\r\n\r\n        function setFixedDirection(fixedDirection: number[]) {\r\n            const result = getFixedDirectionInfo(datas.startPositions, fixedDirection);\r\n\r\n            datas.fixedDirection = result.fixedDirection;\r\n            datas.fixedPosition = result.fixedPosition;\r\n            datas.fixedOffset = result.fixedOffset;\r\n        }\r\n        function setFixedPosition(fixedPosition: number[]) {\r\n            const result = getOffsetFixedPositionInfo(moveable.state, fixedPosition);\r\n\r\n            datas.fixedDirection = result.fixedDirection;\r\n            datas.fixedPosition = result.fixedPosition;\r\n            datas.fixedOffset = result.fixedOffset;\r\n        }\r\n        function setMin(minSize: Array<string | number>)  {\r\n            datas.minSize = [\r\n                convertUnitSize(`${minSize[0]}`, 0) || 0,\r\n                convertUnitSize(`${minSize[1]}`, 0) || 0,\r\n            ];\r\n        }\r\n        function setMax(maxSize: Array<string | number>) {\r\n            const nextMaxSize = [\r\n                maxSize[0] || Infinity,\r\n                maxSize[1] || Infinity,\r\n            ];\r\n            if (!isNumber(nextMaxSize[0]) || isFinite(nextMaxSize[0])) {\r\n                nextMaxSize[0] = convertUnitSize(`${nextMaxSize[0]}`, 0) || Infinity;\r\n            }\r\n            if (!isNumber(nextMaxSize[1]) || isFinite(nextMaxSize[1])) {\r\n                nextMaxSize[1] = convertUnitSize(`${nextMaxSize[1]}`, 0) || Infinity;\r\n            }\r\n            datas.maxSize = nextMaxSize;\r\n        }\r\n\r\n        setRatio(width / height);\r\n        setFixedDirection(parentFixedDirection || [-direction[0], -direction[1]]);\r\n\r\n        datas.setFixedDirection = setFixedDirection;\r\n        datas.setFixedPosition = setFixedPosition;\r\n        datas.setMin = setMin;\r\n        datas.setMax = setMax;\r\n        const params = fillParams<OnResizeStart>(moveable, e, {\r\n            direction,\r\n            startRatio: datas.ratio,\r\n            set: ([startWidth, startHeight]: number[]) => {\r\n                datas.startWidth = startWidth;\r\n                datas.startHeight = startHeight;\r\n            },\r\n            setMin,\r\n            setMax,\r\n            setRatio,\r\n            setFixedDirection,\r\n            setFixedPosition,\r\n            setOrigin: (origin: Array<string | number>) => {\r\n                datas.transformOrigin = origin;\r\n            },\r\n            dragStart: Draggable.dragStart(\r\n                moveable,\r\n                new CustomGesto().dragStart([0, 0], e),\r\n            ),\r\n        });\r\n        const result = parentEvent || triggerEvent(moveable, \"onResizeStart\", params);\r\n\r\n        datas.startFixedDirection = datas.fixedDirection;\r\n        datas.startFixedPosition = datas.fixedPosition;\r\n        if (result !== false) {\r\n            datas.isResize = true;\r\n            moveable.state.snapRenderInfo = {\r\n                request: e.isRequest,\r\n                direction,\r\n            };\r\n        }\r\n        return datas.isResize ? params : false;\r\n    },\r\n    dragControl(\r\n        moveable: MoveableManagerInterface<ResizableProps & DraggableProps & SnappableProps>,\r\n        e: any,\r\n    ) {\r\n        const {\r\n            datas,\r\n            parentFlag,\r\n            isPinch,\r\n            parentKeepRatio,\r\n            dragClient,\r\n            parentDist,\r\n            useSnap,\r\n            isRequest,\r\n            isGroup,\r\n            parentEvent,\r\n            resolveMatrix,\r\n        } = e;\r\n\r\n        const {\r\n            isResize,\r\n            transformOrigin,\r\n            startWidth,\r\n            startHeight,\r\n            prevWidth,\r\n            prevHeight,\r\n            minSize,\r\n            maxSize,\r\n            ratio,\r\n            startOffsetWidth,\r\n            startOffsetHeight,\r\n            isWidth,\r\n        } = datas;\r\n\r\n        if (!isResize) {\r\n            return;\r\n        }\r\n        if (resolveMatrix) {\r\n            const {\r\n                is3d,\r\n            } = moveable.state;\r\n            const {\r\n                startOffsetMatrix,\r\n                startTransformOrigin,\r\n            } = datas;\r\n            const n = is3d ? 4 : 3;\r\n            let targetMatrix = parseMat(getNextTransforms(e));\r\n            const targetN = Math.sqrt(targetMatrix.length);\r\n\r\n            if (n !== targetN) {\r\n                targetMatrix = convertDimension(targetMatrix, targetN, n);\r\n            }\r\n\r\n            const nextAllMatrix = getNextMatrix(\r\n                startOffsetMatrix,\r\n                targetMatrix,\r\n                startTransformOrigin,\r\n                n,\r\n            );\r\n            const poses = calculatePoses(nextAllMatrix, startOffsetWidth, startOffsetHeight, n);\r\n\r\n            datas.startPositions = poses;\r\n            datas.nextTargetMatrix = targetMatrix;\r\n            datas.nextAllMatrix = nextAllMatrix;\r\n        }\r\n        const props = getProps(moveable.props, \"resizable\");\r\n        const {\r\n            resizeFormat,\r\n            throttleResize = parentFlag ? 0 : 1,\r\n            parentMoveable,\r\n            keepRatioFinally,\r\n        } = props;\r\n        const direction = datas.direction;\r\n        let sizeDirection = direction;\r\n        let distWidth = 0;\r\n        let distHeight = 0;\r\n\r\n        if (!direction[0] && !direction[1]) {\r\n            sizeDirection = [1, 1];\r\n        }\r\n        const keepRatio = (ratio && (parentKeepRatio != null ? parentKeepRatio : props.keepRatio)) || false;\r\n\r\n        function getNextBoundingSize() {\r\n            const fixedDirection = datas.fixedDirection;\r\n            const nextSize = getOffsetSizeDist(sizeDirection, keepRatio, datas, e);\r\n\r\n            distWidth = nextSize.distWidth;\r\n            distHeight = nextSize.distHeight;\r\n\r\n            let nextWidth = (sizeDirection[0] - fixedDirection[0]) || keepRatio\r\n                ? Math.max(startOffsetWidth + distWidth, TINY_NUM) : startOffsetWidth;\r\n            let nextHeight = (sizeDirection[1] - fixedDirection[1]) || keepRatio\r\n                ? Math.max(startOffsetHeight + distHeight, TINY_NUM) : startOffsetHeight;\r\n\r\n            if (keepRatio && startOffsetWidth && startOffsetHeight) {\r\n                // startOffsetWidth : startOffsetHeight = nextWidth : nextHeight\r\n                if (isWidth) {\r\n                    nextHeight = nextWidth / ratio;\r\n                } else {\r\n                    nextWidth = nextHeight * ratio;\r\n                }\r\n            }\r\n            return [nextWidth, nextHeight];\r\n        }\r\n\r\n        let [boundingWidth, boundingHeight] = getNextBoundingSize();\r\n\r\n        if (!parentEvent) {\r\n            datas.setFixedDirection(datas.fixedDirection);\r\n\r\n            triggerEvent(moveable, \"onBeforeResize\", fillParams<OnBeforeResize>(moveable, e, {\r\n                startFixedDirection: datas.startFixedDirection,\r\n                startFixedPosition: datas.startFixedPosition,\r\n                setFixedDirection(nextFixedDirection: number[]) {\r\n                    datas.setFixedDirection(nextFixedDirection);\r\n\r\n                    [boundingWidth, boundingHeight] = getNextBoundingSize();\r\n\r\n                    return [boundingWidth, boundingHeight];\r\n                },\r\n                setFixedPosition(nextFixedPosition: number[]) {\r\n                    datas.setFixedPosition(nextFixedPosition);\r\n\r\n                    [boundingWidth, boundingHeight] = getNextBoundingSize();\r\n\r\n                    return [boundingWidth, boundingHeight];\r\n                },\r\n                boundingWidth,\r\n                boundingHeight,\r\n                setSize(size: number[]) {\r\n                    [boundingWidth, boundingHeight] = size;\r\n                },\r\n            }, true));\r\n        }\r\n\r\n        let fixedPosition = dragClient;\r\n\r\n        if (!dragClient) {\r\n            if (!parentFlag && isPinch) {\r\n                fixedPosition = getAbsolutePosition(moveable, [0, 0]);\r\n            } else {\r\n                fixedPosition = datas.fixedPosition;\r\n            }\r\n        }\r\n\r\n        let snapDist = [0, 0];\r\n\r\n        if (!isPinch) {\r\n            snapDist = checkSnapResize(\r\n                moveable,\r\n                boundingWidth,\r\n                boundingHeight,\r\n                direction,\r\n                fixedPosition,\r\n                !useSnap && isRequest,\r\n                datas,\r\n            );\r\n        }\r\n        if (parentDist) {\r\n            !parentDist[0] && (snapDist[0] = 0);\r\n            !parentDist[1] && (snapDist[1] = 0);\r\n        }\r\n\r\n        function computeSize() {\r\n            if (resizeFormat) {\r\n                [boundingWidth, boundingHeight] = resizeFormat([boundingWidth, boundingHeight]);\r\n            }\r\n            boundingWidth = throttle(boundingWidth, throttleResize!);\r\n            boundingHeight = throttle(boundingHeight, throttleResize!);\r\n        }\r\n        if (keepRatio) {\r\n            if (sizeDirection[0] && sizeDirection[1] && snapDist[0] && snapDist[1]) {\r\n                if (abs(snapDist[0]) > abs(snapDist[1])) {\r\n                    snapDist[1] = 0;\r\n                } else {\r\n                    snapDist[0] = 0;\r\n                }\r\n            }\r\n            const isNoSnap = !snapDist[0] && !snapDist[1];\r\n\r\n            if (isNoSnap) {\r\n                // pre-compute before maintaining the ratio\r\n                computeSize();\r\n            }\r\n            if (\r\n                (sizeDirection[0] && !sizeDirection[1])\r\n                || (snapDist[0] && !snapDist[1])\r\n                || (isNoSnap && isWidth)\r\n            ) {\r\n                boundingWidth += snapDist[0];\r\n                boundingHeight = boundingWidth / ratio;\r\n            } else if (\r\n                (!sizeDirection[0] && sizeDirection[1])\r\n                || (!snapDist[0] && snapDist[1])\r\n                || (isNoSnap && !isWidth)\r\n            ) {\r\n                boundingHeight += snapDist[1];\r\n                boundingWidth = boundingHeight * ratio;\r\n            }\r\n        } else {\r\n            boundingWidth += snapDist[0];\r\n            boundingHeight += snapDist[1];\r\n\r\n            boundingWidth = Math.max(0, boundingWidth);\r\n            boundingHeight = Math.max(0, boundingHeight);\r\n        }\r\n\r\n        [boundingWidth, boundingHeight] = calculateBoundSize(\r\n            [boundingWidth, boundingHeight],\r\n            minSize,\r\n            maxSize,\r\n            keepRatio ? ratio : false,\r\n        );\r\n        computeSize();\r\n\r\n        if (keepRatio && (isGroup || keepRatioFinally)) {\r\n            if (isWidth) {\r\n                boundingHeight = boundingWidth / ratio;\r\n            } else {\r\n                boundingWidth = boundingHeight * ratio;\r\n            }\r\n        }\r\n        distWidth = boundingWidth - startOffsetWidth;\r\n        distHeight = boundingHeight - startOffsetHeight;\r\n\r\n        const delta = [distWidth - prevWidth, distHeight - prevHeight];\r\n\r\n        datas.prevWidth = distWidth;\r\n        datas.prevHeight = distHeight;\r\n\r\n        const inverseDelta = getResizeDist(\r\n            moveable,\r\n            boundingWidth,\r\n            boundingHeight,\r\n            fixedPosition,\r\n            transformOrigin,\r\n            datas,\r\n        );\r\n\r\n        if (!parentMoveable && delta.every(num => !num) && inverseDelta.every(num => !num)) {\r\n            return;\r\n        }\r\n        const drag = Draggable.drag(\r\n            moveable,\r\n            setCustomDrag(e, moveable.state, inverseDelta, !!isPinch, false, \"draggable\"),\r\n        ) as OnDrag;\r\n        const transform = drag.transform;\r\n\r\n        const nextWidth = startWidth + distWidth;\r\n        const nextHeight = startHeight + distHeight;\r\n\r\n        const params = fillParams<OnResize>(moveable, e, {\r\n            width: nextWidth,\r\n            height: nextHeight,\r\n            offsetWidth: Math.round(boundingWidth),\r\n            offsetHeight: Math.round(boundingHeight),\r\n            startRatio: ratio,\r\n            boundingWidth,\r\n            boundingHeight,\r\n            direction,\r\n            dist: [distWidth, distHeight],\r\n            delta,\r\n            isPinch: !!isPinch,\r\n            drag,\r\n            ...fillAfterTransform({\r\n                style: {\r\n                    width: `${nextWidth}px`,\r\n                    height: `${nextHeight}px`,\r\n                },\r\n                transform,\r\n            }, drag, e),\r\n        });\r\n        !parentEvent && triggerEvent(moveable, \"onResize\", params);\r\n        return params;\r\n    },\r\n    dragControlAfter(\r\n        moveable: MoveableManagerInterface<ResizableProps & DraggableProps>,\r\n        e: any,\r\n    ) {\r\n        const datas = e.datas;\r\n        const {\r\n            isResize,\r\n            startOffsetWidth,\r\n            startOffsetHeight,\r\n            prevWidth,\r\n            prevHeight,\r\n        } = datas;\r\n\r\n        if (!isResize || moveable.props.checkResizableError === false) {\r\n            return;\r\n        }\r\n        const {\r\n            width,\r\n            height,\r\n        } = moveable.state;\r\n        const errorWidth = width - (startOffsetWidth + prevWidth);\r\n        const errorHeight = height - (startOffsetHeight + prevHeight);\r\n        const isErrorWidth = abs(errorWidth) > 3;\r\n        const isErrorHeight = abs(errorHeight) > 3;\r\n\r\n        if (isErrorWidth) {\r\n            datas.startWidth += errorWidth;\r\n            datas.startOffsetWidth += errorWidth;\r\n            datas.prevWidth += errorWidth;\r\n        }\r\n        if (isErrorHeight) {\r\n            datas.startHeight += errorHeight;\r\n            datas.startOffsetHeight += errorHeight;\r\n            datas.prevHeight += errorHeight;\r\n        }\r\n        if (isErrorWidth || isErrorHeight) {\r\n            return this.dragControl(moveable, e);\r\n        }\r\n    },\r\n    dragControlEnd(\r\n        moveable: MoveableManagerInterface<ResizableProps & DraggableProps>,\r\n        e: any,\r\n    ) {\r\n        const { datas, parentEvent } = e;\r\n        if (!datas.isResize) {\r\n            return;\r\n        }\r\n        datas.isResize = false;\r\n\r\n        const params = fillEndParams<OnResizeEnd>(moveable, e, {});\r\n        !parentEvent && triggerEvent(moveable, \"onResizeEnd\", params);\r\n        return params;\r\n    },\r\n    dragGroupControlCondition: directionCondition,\r\n    dragGroupControlStart(moveable: MoveableGroupInterface<any, any>, e: any) {\r\n        const { datas } = e;\r\n        const params = this.dragControlStart(moveable, {...e, isGroup: true });\r\n\r\n        if (!params) {\r\n            return false;\r\n        }\r\n        const originalEvents = fillChildEvents(moveable, \"resizable\", e);\r\n        const {\r\n            startOffsetWidth: parentStartOffsetWidth,\r\n            startOffsetHeight: parentStartOffsetHeight,\r\n        } = datas;\r\n\r\n        function updateGroupMin() {\r\n            const originalMinSize = datas.minSize;\r\n            originalEvents.forEach(ev => {\r\n                const {\r\n                    minSize: childMinSize,\r\n                    startOffsetWidth: childStartOffsetWidth,\r\n                    startOffsetHeight: childStartOffsetHeight,\r\n                } = ev.datas;\r\n\r\n                const parentMinWidth = parentStartOffsetWidth\r\n                    * (childStartOffsetWidth ? childMinSize[0] / childStartOffsetWidth : 0);\r\n                const parentMinHeight = parentStartOffsetHeight\r\n                    * (childStartOffsetHeight ? childMinSize[1] / childStartOffsetHeight : 0);\r\n\r\n                originalMinSize[0] = Math.max(originalMinSize[0], parentMinWidth);\r\n                originalMinSize[1] = Math.max(originalMinSize[1], parentMinHeight);\r\n            });\r\n        }\r\n\r\n        function updateGroupMax() {\r\n            const originalMaxSize = datas.maxSize;\r\n            originalEvents.forEach(ev => {\r\n                const {\r\n                    maxSize: childMaxSize,\r\n                    startOffsetWidth: childStartOffsetWidth,\r\n                    startOffsetHeight: childStartOffsetHeight,\r\n                } = ev.datas;\r\n\r\n                const parentMaxWidth = parentStartOffsetWidth\r\n                    * (childStartOffsetWidth ? childMaxSize[0] / childStartOffsetWidth : 0);\r\n                const parentMaxHeight = parentStartOffsetHeight\r\n                    * (childStartOffsetHeight ? childMaxSize[1] / childStartOffsetHeight : 0);\r\n\r\n                originalMaxSize[0] = Math.min(originalMaxSize[0], parentMaxWidth);\r\n                originalMaxSize[1] = Math.min(originalMaxSize[1], parentMaxHeight);\r\n            });\r\n        }\r\n        const events = triggerChildAbles(\r\n            moveable,\r\n            this,\r\n            \"dragControlStart\",\r\n            e,\r\n            (child, ev) => {\r\n                return startChildDist(moveable, child, datas, ev);\r\n            },\r\n        );\r\n\r\n\r\n        updateGroupMin();\r\n        updateGroupMax();\r\n\r\n        const setFixedDirection = (fixedDirection: number[]) => {\r\n            params.setFixedDirection(fixedDirection);\r\n            events.forEach((ev, i) => {\r\n                ev.setFixedDirection(fixedDirection);\r\n                startChildDist(moveable, ev.moveable, datas, originalEvents[i]);\r\n            });\r\n        };\r\n\r\n        datas.setFixedDirection = setFixedDirection;\r\n\r\n        const nextParams: OnResizeGroupStart = {\r\n            ...params,\r\n            targets: moveable.props.targets!,\r\n            events: events.map(ev => {\r\n                return {\r\n                    ...ev,\r\n                    setMin: (minSize: Array<number | string>) => {\r\n                        ev.setMin(minSize);\r\n                        updateGroupMin();\r\n                    },\r\n                    setMax: (maxSize: Array<number | string>) => {\r\n                        ev.setMax(maxSize);\r\n                        updateGroupMax();\r\n                    },\r\n                };\r\n            }),\r\n            setFixedDirection,\r\n            setMin: (minSize: Array<number | string>) => {\r\n                params.setMin(minSize);\r\n                updateGroupMin();\r\n            },\r\n            setMax: (maxSize: Array<number | string>) => {\r\n                params.setMax(maxSize);\r\n                updateGroupMax();\r\n            },\r\n        };\r\n        const result = triggerEvent(moveable, \"onResizeGroupStart\", nextParams);\r\n\r\n        datas.isResize = result !== false;\r\n        return datas.isResize ? params : false;\r\n    },\r\n    dragGroupControl(moveable: MoveableGroupInterface<any, any>, e: any) {\r\n        const { datas } = e;\r\n        if (!datas.isResize) {\r\n            return;\r\n        }\r\n        const props = getProps(moveable.props, \"resizable\");\r\n\r\n        catchEvent(moveable, \"onBeforeResize\", parentEvent => {\r\n            triggerEvent(moveable, \"onBeforeResizeGroup\", fillParams<OnBeforeResizeGroup>(moveable, e, {\r\n                ...parentEvent,\r\n                targets: props.targets!,\r\n            }, true));\r\n        });\r\n\r\n\r\n        const params = this.dragControl(moveable, {...e, isGroup: true });\r\n\r\n        if (!params) {\r\n            return;\r\n        }\r\n        const {\r\n            boundingWidth,\r\n            boundingHeight,\r\n            dist,\r\n        } = params;\r\n\r\n        const keepRatio = props.keepRatio;\r\n\r\n        const parentScale = [\r\n            boundingWidth / (boundingWidth - dist[0]),\r\n            boundingHeight / (boundingHeight - dist[1]),\r\n        ];\r\n        const fixedPosition = datas.fixedPosition;\r\n\r\n        const events = triggerChildAbles(\r\n            moveable,\r\n            this,\r\n            \"dragControl\",\r\n            e,\r\n            (_, ev) => {\r\n                const [clientX, clientY] = calculate(\r\n                    createRotateMatrix(moveable.rotation / 180 * Math.PI, 3),\r\n                    [\r\n                        ev.datas.originalX * parentScale[0],\r\n                        ev.datas.originalY * parentScale[1],\r\n                        1,\r\n                    ],\r\n                    3,\r\n                );\r\n\r\n                return {\r\n                    ...ev,\r\n                    parentDist: null,\r\n                    parentScale,\r\n                    dragClient: plus(fixedPosition, [clientX, clientY]),\r\n                    parentKeepRatio: keepRatio,\r\n                };\r\n            },\r\n        );\r\n        const nextParams: OnResizeGroup = {\r\n            targets: props.targets!,\r\n            events,\r\n            ...params,\r\n        };\r\n\r\n        triggerEvent(moveable, \"onResizeGroup\", nextParams);\r\n        return nextParams;\r\n    },\r\n    dragGroupControlEnd(moveable: MoveableGroupInterface<any, any>, e: any) {\r\n        const { isDrag, datas } = e;\r\n\r\n        if (!datas.isResize) {\r\n            return;\r\n        }\r\n\r\n        this.dragControlEnd(moveable, e);\r\n        const events = triggerChildAbles(moveable, this, \"dragControlEnd\", e);\r\n\r\n        const nextParams: OnResizeGroupEnd = fillEndParams<OnResizeGroupEnd>(moveable, e, {\r\n            targets: moveable.props.targets!,\r\n            events,\r\n        });\r\n\r\n        triggerEvent(moveable, \"onResizeGroupEnd\", nextParams);\r\n        return isDrag;\r\n    },\r\n    /**\r\n     * @method Moveable.Resizable#request\r\n     * @param {Moveable.Resizable.ResizableRequestParam} e - the Resizable's request parameter\r\n     * @return {Moveable.Requester} Moveable Requester\r\n     * @example\r\n\r\n     * // Instantly Request (requestStart - request - requestEnd)\r\n     * // Use Relative Value\r\n     * moveable.request(\"resizable\", { deltaWidth: 10, deltaHeight: 10 }, true);\r\n     *\r\n     * // Use Absolute Value\r\n     * moveable.request(\"resizable\", { offsetWidth: 100, offsetHeight: 100 }, true);\r\n     *\r\n     * // requestStart\r\n     * const requester = moveable.request(\"resizable\");\r\n     *\r\n     * // request\r\n     * // Use Relative Value\r\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\r\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\r\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\r\n     *\r\n     * // Use Absolute Value\r\n     * moveable.request(\"resizable\", { offsetWidth: 100, offsetHeight: 100 });\r\n     * moveable.request(\"resizable\", { offsetWidth: 110, offsetHeight: 100 });\r\n     * moveable.request(\"resizable\", { offsetWidth: 120, offsetHeight: 100 });\r\n     *\r\n     * // requestEnd\r\n     * requester.requestEnd();\r\n     */\r\n    request(moveable: MoveableManagerInterface<any>) {\r\n        const datas: Record<string, any> = {};\r\n        let distWidth = 0;\r\n        let distHeight = 0;\r\n        let useSnap = false;\r\n        const rect = moveable.getRect();\r\n\r\n        return {\r\n            isControl: true,\r\n            requestStart(e: ResizableRequestParam) {\r\n                useSnap = e.useSnap!;\r\n\r\n                return {\r\n                    datas, parentDirection: e.direction || [1, 1],\r\n                    parentIsWidth: e?.horizontal ?? true,\r\n                    useSnap,\r\n                };\r\n            },\r\n            request(e: ResizableRequestParam) {\r\n                if (\"offsetWidth\" in e) {\r\n                    distWidth = e.offsetWidth! - rect.offsetWidth;\r\n                } else if (\"deltaWidth\" in e) {\r\n                    distWidth += e.deltaWidth!;\r\n                }\r\n                if (\"offsetHeight\" in e) {\r\n                    distHeight = e.offsetHeight! - rect.offsetHeight;\r\n                } else if (\"deltaHeight\" in e) {\r\n                    distHeight += e.deltaHeight!;\r\n                }\r\n\r\n\r\n                return {\r\n                    datas,\r\n                    parentDist: [distWidth, distHeight],\r\n                    parentKeepRatio: e.keepRatio,\r\n                    useSnap,\r\n                };\r\n            },\r\n            requestEnd() {\r\n                return { datas, isDrag: true, useSnap };\r\n            },\r\n        };\r\n    },\r\n    unset(moveable: MoveableManagerInterface<any, {}>) {\r\n        moveable.state.gestos.resizable = null;\r\n    },\r\n};\r\n\r\n/**\r\n * Whether or not target can be resized.\r\n * @name Moveable.Resizable#resizable\r\n * @default false\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     resizable: false,\r\n * });\r\n *\r\n * moveable.resizable = true;\r\n */\r\n\r\n/**\r\n * throttle of width, height when resize. If throttleResize is set to less than 1, the target may shake.\r\n * @name Moveable.Resizable#throttleResize\r\n * @default 1\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *   resizable: true,\r\n *   throttleResize: 1,\r\n * });\r\n *\r\n * moveable.throttleResize = 0;\r\n */\r\n/**\r\n * When resize or scale, keeps a ratio of the width, height.\r\n * @name Moveable.Resizable#keepRatio\r\n * @default false\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *   resizable: true,\r\n * });\r\n *\r\n * moveable.keepRatio = true;\r\n */\r\n/**\r\n * Set directions to show the control box.\r\n * @name Moveable.Resizable#renderDirections\r\n * @default [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"]\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *   resizable: true,\r\n *   renderDirections: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"],\r\n * });\r\n *\r\n * moveable.renderDirections = [\"nw\", \"ne\", \"sw\", \"se\"];\r\n */\r\n\r\n/**\r\n * Function to convert size for resize\r\n * @name Moveable.Resizable#resizeFormat\r\n * @default oneself\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *   resizable: true,\r\n *   resizeFormat: v => v,\r\n * });\r\n *\r\n * moveable.resizeFormat = (size: number[]) => ([Math.trunc(size[0]), Math.trunc(size[1])];\r\n */\r\n\r\n/**\r\n * When the resize starts, the resizeStart event is called.\r\n * @memberof Moveable.Resizable\r\n * @event resizeStart\r\n * @param {Moveable.Resizable.OnResizeStart} - Parameters for the resizeStart event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, { resizable: true });\r\n * moveable.on(\"resizeStart\", ({ target }) => {\r\n *     console.log(target);\r\n * });\r\n */\r\n\r\n/**\r\n * When resizing, `beforeResize` is called before `resize` occurs. In `beforeResize`, you can get and set the pre-value before resizing.\r\n * @memberof Moveable.Resizable\r\n * @event beforeResize\r\n * @param {Moveable.Resizable.OnBeforeResize} - Parameters for the `beforeResize` event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, { resizable: true });\r\n * moveable.on(\"beforeResize\", ({ setFixedDirection }) => {\r\n *     if (shiftKey) {\r\n *        setFixedDirection([0, 0]);\r\n *     }\r\n * });\r\n * moveable.on(\"resize\", ({ target, width, height, drag }) => {\r\n *     target.style.width = `${width}px`;\r\n *     target.style.height = `${height}px`;\r\n *     target.style.transform = drag.transform;\r\n * });\r\n */\r\n\r\n/**\r\n * When resizing, the resize event is called.\r\n * @memberof Moveable.Resizable\r\n * @event resize\r\n * @param {Moveable.Resizable.OnResize} - Parameters for the resize event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, { resizable: true });\r\n * moveable.on(\"resize\", ({ target, width, height }) => {\r\n *     target.style.width = `${e.width}px`;\r\n *     target.style.height = `${e.height}px`;\r\n * });\r\n */\r\n/**\r\n * When the resize finishes, the resizeEnd event is called.\r\n * @memberof Moveable.Resizable\r\n * @event resizeEnd\r\n * @param {Moveable.Resizable.OnResizeEnd} - Parameters for the resizeEnd event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, { resizable: true });\r\n * moveable.on(\"resizeEnd\", ({ target, isDrag }) => {\r\n *     console.log(target, isDrag);\r\n * });\r\n */\r\n\r\n/**\r\n* When the group resize starts, the `resizeGroupStart` event is called.\r\n* @memberof Moveable.Resizable\r\n* @event resizeGroupStart\r\n* @param {Moveable.Resizable.OnResizeGroupStart} - Parameters for the `resizeGroupStart` event\r\n* @example\r\n* import Moveable from \"moveable\";\r\n*\r\n* const moveable = new Moveable(document.body, {\r\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\r\n*     resizable: true\r\n* });\r\n* moveable.on(\"resizeGroupStart\", ({ targets }) => {\r\n*     console.log(\"onResizeGroupStart\", targets);\r\n* });\r\n*/\r\n\r\n/**\r\n* When the group resize, the `resizeGroup` event is called.\r\n* @memberof Moveable.Resizable\r\n* @event resizeGroup\r\n* @param {Moveable.Resizable.onResizeGroup} - Parameters for the `resizeGroup` event\r\n* @example\r\n* import Moveable from \"moveable\";\r\n*\r\n* const moveable = new Moveable(document.body, {\r\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\r\n*     resizable: true\r\n* });\r\n* moveable.on(\"resizeGroup\", ({ targets, events }) => {\r\n*     console.log(\"onResizeGroup\", targets);\r\n*     events.forEach(ev => {\r\n*         const offset = [\r\n*             direction[0] < 0 ? -ev.delta[0] : 0,\r\n*             direction[1] < 0 ? -ev.delta[1] : 0,\r\n*         ];\r\n*         // ev.drag is a drag event that occurs when the group resize.\r\n*         const left = offset[0] + ev.drag.beforeDist[0];\r\n*         const top = offset[1] + ev.drag.beforeDist[1];\r\n*         const width = ev.width;\r\n*         const top = ev.top;\r\n*     });\r\n* });\r\n*/\r\n\r\n/**\r\n * When the group resize finishes, the `resizeGroupEnd` event is called.\r\n * @memberof Moveable.Resizable\r\n * @event resizeGroupEnd\r\n * @param {Moveable.Resizable.OnResizeGroupEnd} - Parameters for the `resizeGroupEnd` event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\r\n *     resizable: true\r\n * });\r\n * moveable.on(\"resizeGroupEnd\", ({ targets, isDrag }) => {\r\n *     console.log(\"onResizeGroupEnd\", targets, isDrag);\r\n * });\r\n */\r\n","import {\r\n    prefix, triggerEvent, fillParams,\r\n    calculatePosition, fillEndParams, getRotationRad, getRefTargets,\r\n    catchEvent, getProps, calculateMoveableClientPositions,\r\n    fillAfterTransform,\r\n    getTotalOrigin,\r\n} from \"../utils\";\r\nimport {\r\n    IObject, hasClass, getRad,\r\n    throttle,\r\n    getDist,\r\n    getKeys,\r\n    isArray,\r\n} from \"@daybrush/utils\";\r\nimport {\r\n    RotatableProps, OnRotateGroup, OnRotateGroupEnd,\r\n    Renderer, OnRotateGroupStart, OnRotateStart, OnRotate,\r\n    OnRotateEnd, MoveableClientRect, SnappableProps,\r\n    SnappableState, MoveableManagerInterface, MoveableGroupInterface, DraggableProps,\r\n    OnBeforeRotate,\r\n    OnBeforeRotateGroup,\r\n    OnResizeStart,\r\n    OnResize,\r\n    TransformObject,\r\n    OnDragStart,\r\n} from \"../types\";\r\nimport { triggerChildAbles } from \"../groupUtils\";\r\nimport { calculate, convertPositionMatrix, getOrigin, minus, plus, rotate as rotateMatrix } from \"@scena/matrix\";\r\nimport CustomGesto, { setCustomDrag } from \"../gesto/CustomGesto\";\r\nimport { checkSnapRotate } from \"./Snappable\";\r\nimport {\r\n    fillTransformStartEvent,\r\n    convertTransformFormat, getRotateDist,\r\n    fillTransformEvent,\r\n    setDefaultTransformIndex,\r\n    resolveTransformEvent,\r\n    getTransformDirection,\r\n    getPosByDirection,\r\n    getTranslateFixedPosition,\r\n} from \"../gesto/GestoUtils\";\r\nimport { DirectionControlInfo, renderAroundControls, renderDirectionControlsByInfos } from \"../renderDirections\";\r\nimport { DIRECTION_REGION_TO_DIRECTION } from \"../consts\";\r\nimport Resizable from \"./Resizable\";\r\nimport Draggable from \"./Draggable\";\r\nimport { getOffsetFixedDirectionInfo, getOffsetFixedPositionInfo } from \"../utils/getFixedDirection\";\r\n\r\n/**\r\n * @namespace Rotatable\r\n * @memberof Moveable\r\n * @description Rotatable indicates whether the target can be rotated.\r\n */\r\n\r\nfunction setRotateStartInfo(\r\n    moveable: MoveableManagerInterface<any, any>,\r\n    datas: IObject<any>, clientX: number, clientY: number,\r\n    rect: MoveableClientRect,\r\n) {\r\n    const groupable = moveable.props.groupable;\r\n    const state = moveable.state;\r\n    const n = state.is3d ? 4 : 3;\r\n    const origin = datas.origin;\r\n    const nextOrigin = calculatePosition(\r\n        moveable.state.rootMatrix,\r\n        // TO-DO #710\r\n        minus([origin[0], origin[1]], groupable ? [0, 0] : [state.left, state.top]),\r\n        n,\r\n    );\r\n    const startAbsoluteOrigin = plus([rect.left, rect.top], nextOrigin);\r\n\r\n    datas.startAbsoluteOrigin = startAbsoluteOrigin;\r\n    datas.prevDeg = getRad(startAbsoluteOrigin, [clientX, clientY]) / Math.PI * 180;\r\n    datas.defaultDeg = datas.prevDeg;\r\n    datas.prevSnapDeg = 0;\r\n    datas.loop = 0;\r\n    datas.startDist = getDist(startAbsoluteOrigin, [clientX, clientY]);\r\n}\r\n\r\nfunction getAbsoluteDist(\r\n    deg: number,\r\n    direction: number,\r\n    datas: IObject<any>,\r\n) {\r\n    const {\r\n        defaultDeg,\r\n        prevDeg,\r\n    } = datas;\r\n\r\n\r\n    let normalizedPrevDeg = prevDeg % 360;\r\n    let loop = Math.floor(prevDeg / 360);\r\n\r\n    if (normalizedPrevDeg < 0) {\r\n        normalizedPrevDeg += 360;\r\n    }\r\n\r\n    if (normalizedPrevDeg > deg && normalizedPrevDeg > 270 && deg < 90) {\r\n        // 360 => 0\r\n        ++loop;\r\n    } else if (normalizedPrevDeg < deg && normalizedPrevDeg < 90 && deg > 270) {\r\n        // 0 => 360\r\n        --loop;\r\n    }\r\n    const dist = direction * (loop * 360 + deg - defaultDeg);\r\n\r\n    datas.prevDeg = defaultDeg + dist;\r\n\r\n    return dist;\r\n}\r\nfunction getAbsoluteDistByClient(\r\n    clientX: number, clientY: number,\r\n    direction: number,\r\n    datas: IObject<any>,\r\n) {\r\n    return getAbsoluteDist(\r\n        getRad(datas.startAbsoluteOrigin, [clientX, clientY]) / Math.PI * 180,\r\n        direction,\r\n        datas,\r\n    );\r\n}\r\nfunction getRotateInfo(\r\n    moveable: MoveableManagerInterface<any, any>,\r\n    moveableRect: any,\r\n    datas: IObject<any>,\r\n    dist: number,\r\n    startValue: number,\r\n    checkSnap?: boolean,\r\n) {\r\n    const {\r\n        throttleRotate = 0,\r\n    } = moveable.props;\r\n    const prevSnapDeg = datas.prevSnapDeg;\r\n    let snapRotation = 0;\r\n    let isSnap = false;\r\n\r\n    if (checkSnap) {\r\n        const result = checkSnapRotate(\r\n            moveable,\r\n            moveableRect,\r\n            dist,\r\n            startValue + dist,\r\n        );\r\n\r\n        isSnap = result.isSnap;\r\n        snapRotation = startValue + result.dist;\r\n    }\r\n\r\n    if (!isSnap) {\r\n        snapRotation = throttle(startValue + dist, throttleRotate);\r\n    }\r\n    const snapDeg = snapRotation - startValue;\r\n\r\n    datas.prevSnapDeg = snapDeg;\r\n\r\n    return [snapDeg - prevSnapDeg, snapDeg, snapRotation];\r\n\r\n\r\n}\r\n\r\nexport function getReversePositionX(dir: string) {\r\n    if (dir === \"left\") {\r\n        return \"right\";\r\n    } else if (dir === \"right\") {\r\n        return \"left\";\r\n    }\r\n    return dir;\r\n}\r\nexport function getReversePositionY(dir: string) {\r\n    if (dir === \"top\") {\r\n        return \"bottom\";\r\n    } else if (dir === \"bottom\") {\r\n        return \"top\";\r\n    }\r\n    return dir;\r\n}\r\nexport function getRotationPositions(\r\n    rotationPosition: RotatableProps[\"rotationPosition\"],\r\n    [pos1, pos2, pos3, pos4]: number[][],\r\n    direction: number,\r\n): [number[], number][] {\r\n    if (rotationPosition === \"none\") {\r\n        return [];\r\n    }\r\n    if (isArray(rotationPosition)) {\r\n        return rotationPosition.map(child => getRotationPositions(\r\n            child,\r\n            [pos1, pos2, pos3, pos4],\r\n            direction,\r\n        )[0]);\r\n    }\r\n    const [dir1, dir2] = (rotationPosition || \"top\").split(\"-\");\r\n    let radPoses = [pos1, pos2];\r\n\r\n    if (dir1 === \"left\") {\r\n        radPoses = [pos3, pos1];\r\n    } else if (dir1 === \"right\") {\r\n        radPoses = [pos2, pos4];\r\n    } else if (dir1 === \"bottom\") {\r\n        radPoses = [pos4, pos3];\r\n    }\r\n    let pos = [\r\n        (radPoses[0][0] + radPoses[1][0]) / 2,\r\n        (radPoses[0][1] + radPoses[1][1]) / 2,\r\n    ];\r\n    const rad = getRotationRad(radPoses, direction);\r\n    if (dir2) {\r\n        const isStart = dir2 === \"top\" || dir2 === \"left\";\r\n        const isReverse = dir1 === \"bottom\" || dir1 === \"left\";\r\n\r\n        pos = radPoses[(isStart && !isReverse) || (!isStart && isReverse) ? 0 : 1];\r\n    }\r\n    return [[pos, rad]];\r\n}\r\n\r\nexport function dragControlCondition(moveable: MoveableManagerInterface<RotatableProps>, e: any) {\r\n    if (e.isRequest) {\r\n        return e.requestAble === \"rotatable\";\r\n    }\r\n    const target = e.inputEvent.target as HTMLElement;\r\n    if (\r\n        hasClass(target, prefix(\"rotation-control\"))\r\n        || (moveable.props.rotateAroundControls && hasClass(target, prefix(\"around-control\")))\r\n        || (hasClass(target, prefix(\"control\")) && hasClass(target, prefix(\"rotatable\")))\r\n    ) {\r\n        return true;\r\n    }\r\n    const rotationTarget = moveable.props.rotationTarget;\r\n\r\n    if (rotationTarget) {\r\n        return getRefTargets(rotationTarget, true).some(element => {\r\n            if (!element) {\r\n                return false;\r\n            }\r\n            return target === element || target.contains(element);\r\n        });\r\n    }\r\n    return false;\r\n}\r\n\r\nconst css = `.rotation {\r\nposition: absolute;\r\nheight: 40px;\r\nwidth: 1px;\r\ntransform-origin: 50% 100%;\r\nheight: calc(40px * var(--zoom));\r\ntop: auto;\r\nleft: 0;\r\nbottom: 100%;\r\nwill-change: transform;\r\n}\r\n.rotation .rotation-line {\r\ndisplay: block;\r\nwidth: 100%;\r\nheight: 100%;\r\ntransform-origin: 50% 50%;\r\n}\r\n.rotation .rotation-control {\r\nborder-color: #4af;\r\nborder-color: var(--moveable-color);\r\nbackground:#fff;\r\ncursor: alias;\r\n}\r\n:global .view-rotation-dragging, .rotatable.direction.control {\r\ncursor: alias;\r\n}\r\n.rotatable.direction.control.move {\r\ncursor: move;\r\n}\r\n`;\r\nexport default {\r\n    name: \"rotatable\",\r\n    canPinch: true,\r\n    props: [\r\n        \"rotatable\",\r\n        \"rotationPosition\",\r\n        \"throttleRotate\",\r\n        \"renderDirections\",\r\n        \"rotationTarget\",\r\n        \"rotateAroundControls\",\r\n        \"edge\",\r\n        \"resolveAblesWithRotatable\",\r\n        \"displayAroundControls\",\r\n    ] as const,\r\n    events: [\r\n        \"rotateStart\",\r\n        \"beforeRotate\",\r\n        \"rotate\",\r\n        \"rotateEnd\",\r\n        \"rotateGroupStart\",\r\n        \"beforeRotateGroup\",\r\n        \"rotateGroup\",\r\n        \"rotateGroupEnd\",\r\n    ] as const,\r\n    css: [css],\r\n    viewClassName(moveable: MoveableManagerInterface<RotatableProps>) {\r\n        if (!moveable.isDragging(\"rotatable\")) {\r\n            return \"\";\r\n        }\r\n        return prefix(\"view-rotation-dragging\");\r\n    },\r\n    render(moveable: MoveableManagerInterface<RotatableProps>, React: Renderer): any {\r\n        const {\r\n            rotatable,\r\n            rotationPosition,\r\n            zoom,\r\n            renderDirections,\r\n            rotateAroundControls,\r\n            resolveAblesWithRotatable,\r\n        } = getProps(moveable.props, \"rotatable\");\r\n        const {\r\n            renderPoses,\r\n            direction,\r\n        } = moveable.getState();\r\n        if (!rotatable) {\r\n            return null;\r\n        }\r\n        const positions = getRotationPositions(rotationPosition!, renderPoses, direction);\r\n        const jsxs: any[] = [];\r\n\r\n        positions.forEach(([pos, rad], i) => {\r\n            jsxs.push(\r\n                <div key={`rotation${i}`} className={prefix(\"rotation\")} style={{\r\n                    // tslint:disable-next-line: max-line-length\r\n                    transform: `translate(-50%) translate(${pos[0]}px, ${pos[1]}px) rotate(${rad}rad)`,\r\n                }}>\r\n                    <div className={prefix(\"line rotation-line\")} style={{\r\n                        transform: `scaleX(${zoom})`,\r\n                    }}></div>\r\n                    <div className={prefix(\"control rotation-control\")} style={{\r\n                        transform: `translate(0.5px) scale(${zoom})`,\r\n                    }}></div>\r\n                </div>\r\n            );\r\n        });\r\n        if (renderDirections) {\r\n            const ables = getKeys(resolveAblesWithRotatable || {});\r\n            const resolveMap: Record<string, string> = {};\r\n\r\n            ables.forEach(name => {\r\n                resolveAblesWithRotatable![name]!.forEach(direction => {\r\n                    resolveMap[direction] = name;\r\n                });\r\n            });\r\n\r\n            let directionControlInfos: DirectionControlInfo[] = [];\r\n\r\n            if (isArray(renderDirections)) {\r\n                directionControlInfos = renderDirections.map(dir => {\r\n                    const able = resolveMap[dir];\r\n\r\n                    return {\r\n                        data: able ? { resolve: able } : {},\r\n                        classNames: able ? [`move`] : [],\r\n                        dir,\r\n                    };\r\n                });\r\n            }\r\n\r\n            jsxs.push(...renderDirectionControlsByInfos(\r\n                moveable,\r\n                \"rotatable\",\r\n                directionControlInfos,\r\n                React,\r\n            ));\r\n        }\r\n        if (rotateAroundControls) {\r\n            jsxs.push(...renderAroundControls(moveable, React));\r\n        }\r\n\r\n        return jsxs;\r\n    },\r\n    dragControlCondition: dragControlCondition as (moveable: any, e: any) => boolean,\r\n    dragControlStart(\r\n        moveable: MoveableManagerInterface<RotatableProps & SnappableProps & DraggableProps, SnappableState>,\r\n        e: any) {\r\n        const {\r\n            datas,\r\n            clientX, clientY,\r\n            parentRotate, parentFlag, isPinch,\r\n            isRequest,\r\n        } = e;\r\n        const state = moveable.state;\r\n        const {\r\n            target, left, top,\r\n            direction, beforeDirection, targetTransform,\r\n            moveableClientRect,\r\n            offsetMatrix,\r\n            targetMatrix,\r\n            allMatrix,\r\n            width,\r\n            height,\r\n        } = state;\r\n\r\n        if (!isRequest && !target) {\r\n            return false;\r\n        }\r\n\r\n        const rect = moveable.getRect();\r\n        datas.rect = rect;\r\n        datas.transform = targetTransform;\r\n        datas.left = left;\r\n        datas.top = top;\r\n        let setFixedPosition = (fixedPosition: number[]) => {\r\n            const result = getOffsetFixedPositionInfo(moveable.state, fixedPosition);\r\n\r\n            datas.fixedDirection = result.fixedDirection;\r\n            datas.fixedOffset = result.fixedOffset;\r\n            datas.fixedPosition = result.fixedPosition;\r\n\r\n\r\n            if (resizeStart) {\r\n                resizeStart.setFixedPosition(fixedPosition);\r\n            }\r\n        };\r\n        let setFixedDirection: OnRotateStart[\"setFixedDirection\"] = (fixedDirection: number[]) => {\r\n            const result = getOffsetFixedDirectionInfo(moveable.state, fixedDirection);\r\n\r\n            datas.fixedDirection = result.fixedDirection;\r\n            datas.fixedOffset = result.fixedOffset;\r\n            datas.fixedPosition = result.fixedPosition;\r\n\r\n            if (resizeStart) {\r\n                resizeStart.setFixedDirection(fixedDirection);\r\n            }\r\n        };\r\n        let startClientX = clientX;\r\n        let startClientY = clientY;\r\n\r\n        if (isRequest || isPinch || parentFlag) {\r\n            const externalRotate = parentRotate || 0;\r\n\r\n            datas.beforeInfo = {\r\n                origin: rect.beforeOrigin,\r\n                prevDeg: externalRotate,\r\n                defaultDeg: externalRotate,\r\n                prevSnapDeg: 0,\r\n                startDist: 0,\r\n            };\r\n            datas.afterInfo = {\r\n                ...datas.beforeInfo,\r\n                origin: rect.origin,\r\n            };\r\n            datas.absoluteInfo = {\r\n                ...datas.beforeInfo,\r\n                origin: rect.origin,\r\n                startValue: externalRotate,\r\n            };\r\n        } else {\r\n            const inputTarget = e.inputEvent?.target;\r\n\r\n            if (inputTarget) {\r\n                const regionDirection = inputTarget.getAttribute(\"data-direction\") || \"\";\r\n                const controlDirection = DIRECTION_REGION_TO_DIRECTION[regionDirection];\r\n\r\n                if (controlDirection) {\r\n                    datas.isControl = true;\r\n                    datas.isAroundControl = hasClass(inputTarget, prefix(\"around-control\"));\r\n                    datas.controlDirection = controlDirection;\r\n                    const resolve = inputTarget.getAttribute(\"data-resolve\");\r\n\r\n                    if (resolve) {\r\n                        datas.resolveAble = resolve;\r\n                    }\r\n\r\n                    const clientPoses = calculateMoveableClientPositions(\r\n                        state.rootMatrix,\r\n                        state.renderPoses,\r\n                        moveableClientRect,\r\n                    );\r\n\r\n\r\n                    [startClientX, startClientY] = getPosByDirection(clientPoses, controlDirection);\r\n                }\r\n            }\r\n            datas.beforeInfo = { origin: rect.beforeOrigin };\r\n            datas.afterInfo = { origin: rect.origin };\r\n            datas.absoluteInfo = {\r\n                origin: rect.origin,\r\n                startValue: rect.rotation,\r\n            };\r\n\r\n            const originalFixedPosition = setFixedPosition;\r\n\r\n            setFixedPosition = (fixedPosition: number[]) => {\r\n                const n = state.is3d ? 4 : 3;\r\n                const [originX, originY] = plus(getOrigin(targetMatrix, n), fixedPosition);\r\n                const fixedBeforeOrigin = calculate(\r\n                    offsetMatrix,\r\n                    convertPositionMatrix([originX, originY], n),\r\n                );\r\n                const fixedAfterOrigin = calculate(\r\n                    allMatrix,\r\n                    convertPositionMatrix([fixedPosition[0], fixedPosition[1]], n),\r\n                );\r\n                originalFixedPosition(fixedPosition);\r\n                const posDelta = state.posDelta;\r\n\r\n                datas.beforeInfo.origin = minus(fixedBeforeOrigin, posDelta);\r\n                datas.afterInfo.origin = minus(fixedAfterOrigin, posDelta);\r\n                datas.absoluteInfo.origin = minus(fixedAfterOrigin, posDelta);\r\n\r\n                setRotateStartInfo(moveable, datas.beforeInfo, startClientX, startClientY, moveableClientRect);\r\n                setRotateStartInfo(moveable, datas.afterInfo, startClientX, startClientY, moveableClientRect);\r\n                setRotateStartInfo(moveable, datas.absoluteInfo, startClientX, startClientY, moveableClientRect);\r\n            };\r\n            setFixedDirection = (fixedDirection: number[]) => {\r\n                const fixedPosition = getPosByDirection([\r\n                    [0, 0],\r\n                    [width, 0],\r\n                    [0, height],\r\n                    [width, height],\r\n                ], fixedDirection);\r\n\r\n                setFixedPosition(fixedPosition);\r\n            };\r\n        }\r\n\r\n        datas.startClientX = startClientX;\r\n        datas.startClientY = startClientY;\r\n        datas.direction = direction;\r\n        datas.beforeDirection = beforeDirection;\r\n        datas.startValue = 0;\r\n        datas.datas = {};\r\n\r\n        setDefaultTransformIndex(moveable, e, \"rotate\");\r\n\r\n        let dragStart: OnDragStart | false = false;\r\n        let resizeStart: OnResizeStart | false = false;\r\n\r\n        if (datas.isControl && datas.resolveAble) {\r\n            const resolveAble = datas.resolveAble;\r\n\r\n            if (resolveAble === \"resizable\") {\r\n                resizeStart = Resizable.dragControlStart(moveable, {\r\n                    ...(new CustomGesto(\"resizable\").dragStart([0, 0], e)),\r\n                    parentPosition: datas.controlPosition,\r\n                    parentFixedPosition: datas.fixedPosition,\r\n                });\r\n            }\r\n        }\r\n\r\n        if (!resizeStart) {\r\n            dragStart = Draggable.dragStart!(\r\n                moveable,\r\n                new CustomGesto().dragStart([0, 0], e),\r\n            );\r\n        }\r\n\r\n        setFixedPosition(getTotalOrigin(moveable));\r\n        const params = fillParams<OnRotateStart>(moveable, e, {\r\n            set: (rotatation: number) => {\r\n                datas.startValue = rotatation * Math.PI / 180;\r\n            },\r\n            setFixedDirection,\r\n            setFixedPosition,\r\n            ...fillTransformStartEvent(moveable, e),\r\n            dragStart,\r\n            resizeStart,\r\n        });\r\n        const result = triggerEvent(moveable, \"onRotateStart\", params);\r\n        datas.isRotate = result !== false;\r\n        state.snapRenderInfo = {\r\n            request: e.isRequest,\r\n        };\r\n\r\n        return datas.isRotate ? params : false;\r\n    },\r\n    dragControl(\r\n        moveable: MoveableManagerInterface<RotatableProps & DraggableProps>,\r\n        e: any,\r\n    ) {\r\n        const {\r\n            datas, clientDistX, clientDistY,\r\n            parentRotate, parentFlag, isPinch, groupDelta,\r\n            resolveMatrix,\r\n        } = e;\r\n        const {\r\n            beforeDirection,\r\n            beforeInfo,\r\n            afterInfo,\r\n            absoluteInfo,\r\n            isRotate,\r\n            startValue,\r\n            rect,\r\n            startClientX,\r\n            startClientY,\r\n        } = datas;\r\n\r\n        if (!isRotate) {\r\n            return;\r\n        }\r\n\r\n        resolveTransformEvent(moveable, e, \"rotate\");\r\n\r\n        const targetDirection = getTransformDirection(e);\r\n        const direction = beforeDirection * targetDirection;\r\n        const {\r\n            parentMoveable,\r\n        } = moveable.props;\r\n\r\n\r\n        let beforeDelta = 0;\r\n        let beforeDist: number;\r\n        let beforeRotation: number;\r\n\r\n        let delta = 0;\r\n        let dist: number;\r\n        let rotation: number;\r\n\r\n        let absoluteDelta = 0;\r\n        let absoluteDist: number;\r\n        let absoluteRotation: number;\r\n\r\n        const startRotation = 180 / Math.PI * startValue;\r\n        const absoluteStartRotation = absoluteInfo.startValue;\r\n        let isSnap = false;\r\n        const nextClientX = startClientX + clientDistX;\r\n        const nextClientY = startClientY + clientDistY;\r\n\r\n        if (!parentFlag && \"parentDist\" in e) {\r\n            const parentDist = e.parentDist;\r\n\r\n            beforeDist = parentDist;\r\n            dist = parentDist;\r\n            absoluteDist = parentDist;\r\n        } else if (isPinch || parentFlag) {\r\n            beforeDist = getAbsoluteDist(parentRotate, beforeDirection, beforeInfo);\r\n            dist = getAbsoluteDist(parentRotate, direction, afterInfo);\r\n            absoluteDist = getAbsoluteDist(parentRotate, direction, absoluteInfo);\r\n        } else {\r\n            beforeDist = getAbsoluteDistByClient(nextClientX, nextClientY, beforeDirection, beforeInfo);\r\n            dist = getAbsoluteDistByClient(nextClientX, nextClientY, direction, afterInfo);\r\n            absoluteDist = getAbsoluteDistByClient(nextClientX, nextClientY, direction, absoluteInfo);\r\n            isSnap = true;\r\n        }\r\n        beforeRotation = startRotation + beforeDist;\r\n        rotation = startRotation + dist;\r\n        absoluteRotation = absoluteStartRotation + absoluteDist;\r\n\r\n\r\n        triggerEvent(moveable, \"onBeforeRotate\", fillParams<OnBeforeRotate>(moveable, e, {\r\n            beforeRotation,\r\n            rotation,\r\n            absoluteRotation,\r\n            setRotation(nextRotation: number) {\r\n                dist = nextRotation - startRotation;\r\n                beforeDist = dist;\r\n                absoluteDist = dist;\r\n            },\r\n        }, true));\r\n\r\n        [\r\n            beforeDelta,\r\n            beforeDist,\r\n            beforeRotation,\r\n        ] = getRotateInfo(moveable, rect, beforeInfo, beforeDist, startRotation, isSnap);\r\n\r\n        [\r\n            delta,\r\n            dist,\r\n            rotation,\r\n        ] = getRotateInfo(moveable, rect, afterInfo, dist, startRotation, isSnap);\r\n\r\n        [\r\n            absoluteDelta,\r\n            absoluteDist,\r\n            absoluteRotation,\r\n        ] = getRotateInfo(moveable, rect, absoluteInfo, absoluteDist, absoluteStartRotation, isSnap);\r\n\r\n        if (!absoluteDelta && !delta && !beforeDelta && !parentMoveable && !resolveMatrix) {\r\n            return;\r\n        }\r\n\r\n        const nextTransform = convertTransformFormat(\r\n            datas, `rotate(${rotation}deg)`, `rotate(${dist}deg)`,\r\n        );\r\n        if (resolveMatrix) {\r\n            datas.fixedPosition = getTranslateFixedPosition(\r\n                moveable,\r\n                datas.targetAllTransform,\r\n                datas.fixedDirection,\r\n                datas.fixedOffset,\r\n                datas,\r\n            );\r\n        }\r\n\r\n        const inverseDist = getRotateDist(moveable, dist, datas);\r\n        const inverseDelta = minus(\r\n            plus(groupDelta || [0, 0], inverseDist),\r\n            datas.prevInverseDist || [0, 0],\r\n        );\r\n        datas.prevInverseDist = inverseDist;\r\n        datas.requestValue = null;\r\n\r\n        const dragEvent = fillTransformEvent(\r\n            moveable,\r\n            nextTransform,\r\n            inverseDelta,\r\n            isPinch,\r\n            e,\r\n        );\r\n\r\n        let transformEvent: TransformObject = dragEvent;\r\n        const parentDistance = getDist(\r\n            [nextClientX, nextClientY],\r\n            absoluteInfo.startAbsoluteOrigin,\r\n        ) - absoluteInfo.startDist;\r\n\r\n        let resize: OnResize | undefined = undefined;\r\n\r\n        if (datas.resolveAble === \"resizable\") {\r\n            const resizeEvent = Resizable.dragControl(\r\n                moveable,\r\n                {\r\n                    ...setCustomDrag(e, moveable.state, [e.deltaX, e.deltaY], !!isPinch, false, \"resizable\"),\r\n                    resolveMatrix: true,\r\n                    parentDistance,\r\n                },\r\n            );\r\n\r\n            if (resizeEvent) {\r\n                resize = resizeEvent;\r\n                transformEvent = fillAfterTransform(transformEvent, resizeEvent, e);\r\n            }\r\n        }\r\n\r\n        const params = fillParams<OnRotate>(moveable, e, {\r\n            delta,\r\n            dist,\r\n            rotate: rotation,\r\n            rotation,\r\n\r\n            beforeDist,\r\n            beforeDelta,\r\n            beforeRotate: beforeRotation,\r\n            beforeRotation,\r\n\r\n            absoluteDist,\r\n            absoluteDelta,\r\n            absoluteRotate: absoluteRotation,\r\n            absoluteRotation,\r\n\r\n            isPinch: !!isPinch,\r\n            resize,\r\n            ...dragEvent,\r\n            ...transformEvent,\r\n        });\r\n        triggerEvent(moveable, \"onRotate\", params);\r\n\r\n        return params;\r\n    },\r\n    dragControlEnd(moveable: MoveableManagerInterface<RotatableProps>, e: any) {\r\n        const { datas } = e;\r\n\r\n        if (!datas.isRotate) {\r\n            return;\r\n        }\r\n        datas.isRotate = false;\r\n\r\n        const params = fillEndParams<OnRotateEnd>(moveable, e, {});\r\n\r\n        triggerEvent(moveable, \"onRotateEnd\", params);\r\n        return params;\r\n    },\r\n    dragGroupControlCondition: dragControlCondition as (moveable: any, e: any) => boolean,\r\n    dragGroupControlStart(moveable: MoveableGroupInterface<any, any>, e: any) {\r\n        const { datas } = e;\r\n        const {\r\n            left: parentLeft,\r\n            top: parentTop,\r\n            beforeOrigin: parentBeforeOrigin,\r\n        } = moveable.state;\r\n\r\n        const params = this.dragControlStart(moveable, e);\r\n\r\n        if (!params) {\r\n            return false;\r\n        }\r\n\r\n        params.set(datas.beforeDirection * moveable.rotation);\r\n\r\n        const events = triggerChildAbles(\r\n            moveable,\r\n            this,\r\n            \"dragControlStart\",\r\n            e,\r\n            (child, ev) => {\r\n                const { left, top, beforeOrigin } = child.state;\r\n                const childClient = plus(\r\n                    minus([left, top], [parentLeft, parentTop]),\r\n                    minus(beforeOrigin, parentBeforeOrigin),\r\n                );\r\n\r\n                ev.datas.startGroupClient = childClient;\r\n                ev.datas.groupClient = childClient;\r\n                return { ...ev, parentRotate: 0 };\r\n            },\r\n        );\r\n\r\n        const nextParams: OnRotateGroupStart = {\r\n            ...params,\r\n            targets: moveable.props.targets!,\r\n            events,\r\n        };\r\n        const result = triggerEvent(moveable, \"onRotateGroupStart\", nextParams);\r\n\r\n        datas.isRotate = result !== false;\r\n\r\n        return datas.isRotate ? params : false;\r\n    },\r\n    dragGroupControl(moveable: MoveableGroupInterface<any, any>, e: any) {\r\n        const { datas } = e;\r\n\r\n        if (!datas.isRotate) {\r\n            return;\r\n        }\r\n\r\n        catchEvent(moveable, \"onBeforeRotate\", parentEvent => {\r\n            triggerEvent(moveable, \"onBeforeRotateGroup\", fillParams<OnBeforeRotateGroup>(moveable, e, {\r\n                ...parentEvent,\r\n                targets: moveable.props.targets!,\r\n            }, true));\r\n        });\r\n        const params = this.dragControl(moveable, e);\r\n\r\n        if (!params) {\r\n            return;\r\n        }\r\n        const direction = datas.beforeDirection;\r\n        const parentRotate = params.beforeDist;\r\n        const rad = parentRotate / 180 * Math.PI;\r\n        const events = triggerChildAbles(\r\n            moveable,\r\n            this,\r\n            \"dragControl\",\r\n            e,\r\n            (_, ev) => {\r\n                const startGroupClient = ev.datas.startGroupClient;\r\n                const [prevClientX, prevClientY] = ev.datas.groupClient;\r\n                const [clientX, clientY] = rotateMatrix(startGroupClient, rad * direction);\r\n                const delta = [clientX - prevClientX, clientY - prevClientY];\r\n\r\n                ev.datas.groupClient = [clientX, clientY];\r\n                return { ...ev, parentRotate, groupDelta: delta };\r\n            },\r\n        );\r\n        moveable.rotation = direction * params.beforeRotation;\r\n\r\n        const nextParams: OnRotateGroup = {\r\n            targets: moveable.props.targets!,\r\n            events,\r\n            set(rotation: number) {\r\n                moveable.rotation = rotation;\r\n            },\r\n            setGroupRotation(rotation: number) {\r\n                moveable.rotation = rotation;\r\n            },\r\n            ...params,\r\n        };\r\n\r\n        triggerEvent(moveable, \"onRotateGroup\", nextParams);\r\n        return nextParams;\r\n    },\r\n    dragGroupControlEnd(moveable: MoveableGroupInterface<any, any>, e: any) {\r\n        const { isDrag, datas } = e;\r\n\r\n        if (!datas.isRotate) {\r\n            return;\r\n        }\r\n\r\n        this.dragControlEnd(moveable, e);\r\n        const events = triggerChildAbles(moveable, this, \"dragControlEnd\", e);\r\n\r\n        const nextParams = fillEndParams<OnRotateGroupEnd>(moveable, e, {\r\n            targets: moveable.props.targets!,\r\n            events,\r\n        });\r\n\r\n        triggerEvent(moveable, \"onRotateGroupEnd\", nextParams);\r\n        return isDrag;\r\n    },\r\n    /**\r\n     * @method Moveable.Rotatable#request\r\n     * @param {object} [e] - the Resizable's request parameter\r\n     * @param {number} [e.deltaRotate=0] -  delta number of rotation\r\n     * @param {number} [e.rotate=0] - absolute number of moveable's rotation\r\n     * @return {Moveable.Requester} Moveable Requester\r\n     * @example\r\n\r\n     * // Instantly Request (requestStart - request - requestEnd)\r\n     * moveable.request(\"rotatable\", { deltaRotate: 10 }, true);\r\n     *\r\n     * * moveable.request(\"rotatable\", { rotate: 10 }, true);\r\n     *\r\n     * // requestStart\r\n     * const requester = moveable.request(\"rotatable\");\r\n     *\r\n     * // request\r\n     * requester.request({ deltaRotate: 10 });\r\n     * requester.request({ deltaRotate: 10 });\r\n     * requester.request({ deltaRotate: 10 });\r\n     *\r\n     * requester.request({ rotate: 10 });\r\n     * requester.request({ rotate: 20 });\r\n     * requester.request({ rotate: 30 });\r\n     *\r\n     * // requestEnd\r\n     * requester.requestEnd();\r\n     */\r\n    request(moveable: MoveableManagerInterface<RotatableProps>) {\r\n        const datas = {};\r\n        let distRotate = 0;\r\n\r\n        const startRotation = moveable.getRotation();\r\n        return {\r\n            isControl: true,\r\n            requestStart() {\r\n                return { datas };\r\n            },\r\n            request(e: IObject<any>) {\r\n                if (\"deltaRotate\" in e) {\r\n                    distRotate += e.deltaRotate;\r\n                } else if (\"rotate\" in e) {\r\n                    distRotate = e.rotate - startRotation;\r\n                }\r\n\r\n                return { datas, parentDist: distRotate };\r\n            },\r\n            requestEnd() {\r\n                return { datas, isDrag: true };\r\n            },\r\n        };\r\n    },\r\n};\r\n/**\r\n * Whether or not target can be rotated. (default: false)\r\n * @name Moveable.Rotatable#rotatable\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body);\r\n *\r\n * moveable.rotatable = true;\r\n */\r\n/**\r\n * You can specify the position of the rotation. (default: \"top\")\r\n * @name Moveable.Rotatable#rotationPosition\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *   rotationPosition: \"top\",\r\n * });\r\n *\r\n * moveable.rotationPosition = \"bottom\"\r\n */\r\n\r\n/**\r\n * throttle of angle(degree) when rotate.\r\n * @name Moveable.Rotatable#throttleRotate\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body);\r\n *\r\n * moveable.throttleRotate = 1;\r\n */\r\n\r\n/**\r\n * When the rotate starts, the rotateStart event is called.\r\n * @memberof Moveable.Rotatable\r\n * @event rotateStart\r\n * @param {Moveable.Rotatable.OnRotateStart} - Parameters for the rotateStart event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, { rotatable: true });\r\n * moveable.on(\"rotateStart\", ({ target }) => {\r\n *     console.log(target);\r\n * });\r\n */\r\n\r\n/**\r\n* When rotating, the rotate event is called.\r\n* @memberof Moveable.Rotatable\r\n* @event rotate\r\n* @param {Moveable.Rotatable.OnRotate} - Parameters for the rotate event\r\n* @example\r\n* import Moveable from \"moveable\";\r\n*\r\n* const moveable = new Moveable(document.body, { rotatable: true });\r\n* moveable.on(\"rotate\", ({ target, transform, dist }) => {\r\n*     target.style.transform = transform;\r\n* });\r\n*/\r\n/**\r\n * When the rotate finishes, the rotateEnd event is called.\r\n * @memberof Moveable.Rotatable\r\n * @event rotateEnd\r\n * @param {Moveable.Rotatable.OnRotateEnd} - Parameters for the rotateEnd event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, { rotatable: true });\r\n * moveable.on(\"rotateEnd\", ({ target, isDrag }) => {\r\n *     console.log(target, isDrag);\r\n * });\r\n */\r\n\r\n/**\r\n * When the group rotate starts, the `rotateGroupStart` event is called.\r\n * @memberof Moveable.Rotatable\r\n * @event rotateGroupStart\r\n * @param {Moveable.Rotatable.OnRotateGroupStart} - Parameters for the `rotateGroupStart` event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\r\n *     rotatable: true\r\n * });\r\n * moveable.on(\"rotateGroupStart\", ({ targets }) => {\r\n *     console.log(\"onRotateGroupStart\", targets);\r\n * });\r\n */\r\n\r\n/**\r\n* When the group rotate, the `rotateGroup` event is called.\r\n* @memberof Moveable.Rotatable\r\n* @event rotateGroup\r\n* @param {Moveable.Rotatable.OnRotateGroup} - Parameters for the `rotateGroup` event\r\n* @example\r\n* import Moveable from \"moveable\";\r\n*\r\n* const moveable = new Moveable(document.body, {\r\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\r\n*     rotatable: true\r\n* });\r\n* moveable.on(\"rotateGroup\", ({ targets, events }) => {\r\n*     console.log(\"onRotateGroup\", targets);\r\n*     events.forEach(ev => {\r\n*         const target = ev.target;\r\n*         // ev.drag is a drag event that occurs when the group rotate.\r\n*         const left = ev.drag.beforeDist[0];\r\n*         const top = ev.drag.beforeDist[1];\r\n*         const deg = ev.beforeDist;\r\n*     });\r\n* });\r\n*/\r\n\r\n/**\r\n * When the group rotate finishes, the `rotateGroupEnd` event is called.\r\n * @memberof Moveable.Rotatable\r\n * @event rotateGroupEnd\r\n * @param {Moveable.Rotatable.OnRotateGroupEnd} - Parameters for the `rotateGroupEnd` event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\r\n *     rotatable: true\r\n * });\r\n * moveable.on(\"rotateGroupEnd\", ({ targets, isDrag }) => {\r\n *     console.log(\"onRotateGroupEnd\", targets, isDrag);\r\n * });\r\n */\r\n","import { throttle } from \"@daybrush/utils\";\r\nimport {\r\n    RenderGuidelineInfo, Renderer, RenderGuidelineInnerInfo,\r\n    MoveableManagerInterface, SnappableProps, SnapGuideline,\r\n    SnappableRenderType, SnappableState,\r\n    SnapDirectionPoses,\r\n} from \"../../types\";\r\nimport { prefix, groupBy } from \"../../utils\";\r\nimport { HORIZONTAL_NAMES_MAP, VERTICAL_NAMES_MAP } from \"./utils\";\r\n\r\nexport function renderGuideline(info: RenderGuidelineInfo, React: Renderer): any {\r\n    const { direction, classNames, size, pos, zoom, key } = info;\r\n    const isHorizontal = direction === \"horizontal\";\r\n    const scaleType = isHorizontal ? \"Y\" : \"X\";\r\n    // const scaleType2 = isHorizontal ? \"Y\" : \"X\";\r\n\r\n    return React.createElement(\"div\", {\r\n        key,\r\n        className: classNames.join(\" \"),\r\n        style: {\r\n            [isHorizontal ? \"width\" : \"height\"]: `${size}`,\r\n            transform: `translate(${pos[0]}, ${pos[1]}) translate${scaleType}(-50%) scale${scaleType}(${zoom})`,\r\n        },\r\n    });\r\n}\r\n\r\nexport function renderInnerGuideline(info: RenderGuidelineInnerInfo, React: Renderer): any {\r\n    return renderGuideline({\r\n        ...info,\r\n        classNames: [\r\n            prefix(\"line\", \"guideline\", info.direction),\r\n            ...info.classNames,\r\n        ].filter(className => className) as string[],\r\n        size: info.size || `${info.sizeValue}px`,\r\n        pos: info.pos || info.posValue.map(v => `${throttle(v, 0.1)}px`),\r\n    }, React);\r\n}\r\n\r\nexport function renderSnapPoses(\r\n    moveable: MoveableManagerInterface,\r\n    direction: string,\r\n    snapPoses: SnappableRenderType[],\r\n    minPos: number,\r\n    targetPos: number,\r\n    size: number,\r\n    index: number,\r\n    React: Renderer\r\n) {\r\n    const { zoom } = moveable.props;\r\n    return snapPoses.map(({ type, pos }, i) => {\r\n        const renderPos = [0, 0];\r\n\r\n        renderPos[index] = minPos;\r\n        renderPos[index ? 0 : 1] = -targetPos + pos;\r\n\r\n        return renderInnerGuideline(\r\n            {\r\n                key: `${direction}TargetGuideline${i}`,\r\n                classNames: [prefix(\"target\", \"bold\", type)],\r\n                posValue: renderPos,\r\n                sizeValue: size,\r\n                zoom: zoom!,\r\n                direction: direction,\r\n            },\r\n            React\r\n        );\r\n    });\r\n}\r\nexport function renderGuidelines(\r\n    moveable: MoveableManagerInterface<SnappableProps>,\r\n    type: \"vertical\" | \"horizontal\",\r\n    guidelines: SnapGuideline[],\r\n    targetPos: number[],\r\n    targetRect: SnapDirectionPoses,\r\n    React: Renderer\r\n): any[] {\r\n    const { zoom, isDisplayInnerSnapDigit } = moveable.props;\r\n\r\n    const mainNames = type === \"horizontal\" ? VERTICAL_NAMES_MAP : HORIZONTAL_NAMES_MAP;\r\n    const targetStart = targetRect[mainNames.start]!;\r\n    const targetEnd = targetRect[mainNames.end]!;\r\n    return guidelines.filter(({ hide, elementRect }) => {\r\n        if (hide) {\r\n            return false;\r\n        }\r\n        if (isDisplayInnerSnapDigit && elementRect) {\r\n            // inner\r\n            const rect = elementRect.rect;\r\n\r\n            if (rect[mainNames.start]! <= targetStart && targetEnd <= rect[mainNames.end]!) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }).map((guideline, i) => {\r\n        const { pos, size, element, className } = guideline;\r\n\r\n        const renderPos = [\r\n            -targetPos[0] + pos[0],\r\n            -targetPos[1] + pos[1],\r\n        ];\r\n\r\n        return renderInnerGuideline(\r\n            {\r\n                key: `${type}-default-guideline-${i}`,\r\n                classNames: element ? [prefix(\"bold\"), className] : [prefix(\"normal\"), className],\r\n                direction: type,\r\n                posValue: renderPos,\r\n                sizeValue: size,\r\n                zoom: zoom!,\r\n            },\r\n            React\r\n        );\r\n    });\r\n}\r\n\r\nexport function renderDigitLine(\r\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\r\n    type: \"vertical\" | \"horizontal\",\r\n    lineType: \"dashed\" | \"gap\",\r\n    index: number,\r\n    gap: number,\r\n    renderPos: number[],\r\n    className: string | undefined,\r\n    React: Renderer,\r\n    middlePosition?: number,\r\n    singleGap?: number\r\n): any {\r\n    const {\r\n        snapDigit = 0,\r\n        isDisplaySnapDigit = true,\r\n        snapDistFormat = (v: number, type: \"vertical\" | \"horizontal\") => {\r\n            // Type can be used render different values.\r\n            if (type === 'vertical') {\r\n                return v;\r\n            }\r\n            return v;\r\n        },\r\n        zoom,\r\n    } = moveable.props;\r\n    const scaleType = type === \"horizontal\" ? \"X\" : \"Y\";\r\n    const sizeName = type === \"vertical\" ? \"height\" : \"width\";\r\n    const absGap = Math.abs(gap!);\r\n    const top=middlePosition? (type === \"horizontal\" ? `${middlePosition}px`:`${renderPos[1]}px`):`${renderPos[1]}px`;\r\n    const left=middlePosition? (type === \"horizontal\" ? `${renderPos[0]}px`:`${middlePosition}px`):`${renderPos[0]}px`;\r\n    const snapSize = isDisplaySnapDigit\r\n        ? parseFloat(absGap.toFixed(snapDigit))\r\n        : 0;\r\n    return <div\r\n        key={`${type}-${lineType}-guideline-${index}`}\r\n        className={prefix(\"guideline-group\", type)}\r\n        style={{\r\n            left: left,\r\n            top: top,\r\n            [sizeName]: `${absGap}px`,\r\n        }}\r\n    >\r\n        {renderInnerGuideline(\r\n            {\r\n                direction: type,\r\n                classNames: [prefix(lineType), className],\r\n                size: \"100%\",\r\n                posValue: [0, 0],\r\n                sizeValue: absGap,\r\n                zoom: zoom!,\r\n            },\r\n            React\r\n        )}\r\n        {middlePosition&&<div className='centerbg'   style={{\r\n            [sizeName]: `${absGap}px`,\r\n            background:'#f424fd33',\r\n            position: 'absolute',\r\n            [ type === \"vertical\" ?'left':'top']:  `-${singleGap}px`,\r\n            [ type === \"vertical\" ?'width':'height']:  `${(singleGap??0)*2}px`,\r\n        }}></div>}\r\n        <div\r\n            className={prefix(\"size-value\", \"gap\")}\r\n            style={{\r\n                transform: `translate${scaleType}(-50%) scale(${zoom})`,\r\n            }}\r\n        >\r\n            {snapSize > 0 ? snapDistFormat(snapSize, type) : \"\"}\r\n        </div>\r\n    </div>;\r\n}\r\n\r\nexport function groupByElementGuidelines(\r\n    type: \"vertical\" | \"horizontal\",\r\n    guidelines: SnapGuideline[],\r\n    targetRect: SnapDirectionPoses,\r\n    isDisplayInnerSnapDigit: boolean,\r\n) {\r\n    const index = type === \"vertical\" ? 0 : 1;\r\n    const otherIndex = type === \"vertical\" ? 1 : 0;\r\n    const names = index ? VERTICAL_NAMES_MAP : HORIZONTAL_NAMES_MAP;\r\n    const targetStart = targetRect[names.start]!;\r\n    const targetEnd = targetRect[names.end]!;\r\n    return groupBy(guidelines, (guideline) => {\r\n        return guideline.pos[index];\r\n    }).map(nextGuidelines => {\r\n        const start: SnapGuideline[] = [];\r\n        const end: SnapGuideline[] = [];\r\n        const inner: SnapGuideline[] = [];\r\n\r\n        nextGuidelines.forEach(guideline => {\r\n            const element = guideline.element!;\r\n            const rect = guideline.elementRect!.rect;\r\n            if (rect[names.end]! < targetStart) {\r\n                start.push(guideline);\r\n            } else if (targetEnd < rect[names.start]!) {\r\n                end.push(guideline);\r\n            } else if (rect[names.start]! <= targetStart && targetEnd <= rect[names.end]! && isDisplayInnerSnapDigit) {\r\n                const pos = guideline.pos;\r\n                const elementRect1 = { element, rect: { ...rect, [names.end]: rect[names.start]! } };\r\n                const elementRect2 = { element, rect: { ...rect, [names.start]: rect[names.end]! } };\r\n                const nextPos1 = [0, 0];\r\n                const nextPos2 = [0, 0];\r\n                nextPos1[index] = pos[index];\r\n                nextPos1[otherIndex] = pos[otherIndex];\r\n\r\n                nextPos2[index] = pos[index];\r\n                nextPos2[otherIndex] = pos[otherIndex] + guideline.size;\r\n\r\n\r\n                start.push({\r\n                    type,\r\n                    pos: nextPos1,\r\n                    size: 0,\r\n                    elementRect: elementRect1,\r\n                    direction: \"\",\r\n                    elementDirection: \"end\",\r\n                });\r\n                end.push({\r\n                    type,\r\n                    pos: nextPos2,\r\n                    size: 0,\r\n                    elementRect: elementRect2,\r\n                    direction: \"\",\r\n                    elementDirection: \"start\",\r\n                });\r\n                // inner.push(guideline);\r\n            }\r\n        });\r\n\r\n        start.sort((a, b) => {\r\n            return b.pos[otherIndex] - a.pos[otherIndex];\r\n        });\r\n        end.sort((a, b) => {\r\n            return a.pos[otherIndex] - b.pos[otherIndex];\r\n        });\r\n        return {\r\n            total: nextGuidelines,\r\n            start,\r\n            end,\r\n            inner,\r\n        };\r\n    });\r\n}\r\nexport function renderDashedGuidelines(\r\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\r\n    guidelines: SnapGuideline[],\r\n    targetPos: number[],\r\n    targetRect: SnapDirectionPoses,\r\n    React: Renderer,\r\n): any[] {\r\n    const {\r\n        isDisplayInnerSnapDigit,\r\n    } = moveable.props;\r\n    const rendered: any[] = [];\r\n\r\n    ([\"vertical\", \"horizontal\"] as const).forEach(type => {\r\n        const nextGuidelines = guidelines.filter(guideline => guideline.type === type);\r\n        const index = type === \"vertical\" ? 1 : 0;\r\n        const otherIndex = index ? 0 : 1;\r\n\r\n        const groups = groupByElementGuidelines(type, nextGuidelines, targetRect, isDisplayInnerSnapDigit!);\r\n        const mainNames = index ? HORIZONTAL_NAMES_MAP : VERTICAL_NAMES_MAP;\r\n        const sideNames = index ? VERTICAL_NAMES_MAP : HORIZONTAL_NAMES_MAP;\r\n        const targetStart = targetRect[mainNames.start]!;\r\n        const targetEnd = targetRect[mainNames.end]!;\r\n\r\n        groups.forEach(({ total, start, end, inner }) => {\r\n            const sidePos = targetPos[otherIndex] + total[0].pos[otherIndex] - targetRect[sideNames.start]!;\r\n\r\n            let prevRect = targetRect;\r\n\r\n            start.forEach(guideline => {\r\n                const nextRect = guideline.elementRect!.rect;\r\n                const size = prevRect[mainNames.start]! - nextRect[mainNames.end]!;\r\n\r\n                if (size > 0) {\r\n                    const renderPos = [0, 0];\r\n\r\n                    renderPos[index] = targetPos[index] + prevRect[mainNames.start]! - targetStart - size;\r\n                    renderPos[otherIndex] = sidePos;\r\n\r\n                    rendered.push(renderDigitLine(\r\n                        moveable,\r\n                        type,\r\n                        \"dashed\",\r\n                        rendered.length,\r\n                        size,\r\n                        renderPos,\r\n                        guideline.className,\r\n                        React\r\n                    ));\r\n                }\r\n                prevRect = nextRect;\r\n            });\r\n\r\n            prevRect = targetRect;\r\n            end.forEach(guideline => {\r\n                const nextRect = guideline.elementRect!.rect;\r\n                const size = nextRect[mainNames.start]! - prevRect[mainNames.end]!;\r\n\r\n                if (size > 0) {\r\n                    const renderPos = [0, 0];\r\n\r\n                    renderPos[index] = targetPos[index] + prevRect[mainNames.end]! - targetStart;\r\n                    renderPos[otherIndex] = sidePos;\r\n\r\n                    rendered.push(renderDigitLine(\r\n                        moveable,\r\n                        type,\r\n                        \"dashed\",\r\n                        rendered.length,\r\n                        size,\r\n                        renderPos,\r\n                        guideline.className,\r\n                        React\r\n                    ));\r\n                }\r\n                prevRect = nextRect;\r\n            });\r\n\r\n            inner.forEach(guideline => {\r\n                const nextRect = guideline.elementRect!.rect;\r\n\r\n                const size1 = targetStart - nextRect[mainNames.start]!;\r\n                const size2 = nextRect[mainNames.end]! - targetEnd;\r\n                const renderPos1 = [0, 0];\r\n                const renderPos2 = [0, 0];\r\n\r\n                renderPos1[index] = targetPos[index] - size1;\r\n                renderPos1[otherIndex] = sidePos;\r\n\r\n                renderPos2[index] = targetPos[index] + targetEnd - targetStart;\r\n                renderPos2[otherIndex] = sidePos;\r\n\r\n                rendered.push(renderDigitLine(\r\n                    moveable,\r\n                    type,\r\n                    \"dashed\",\r\n                    rendered.length,\r\n                    size1,\r\n                    renderPos1,\r\n                    guideline.className,\r\n                    React\r\n                ));\r\n                rendered.push(renderDigitLine(\r\n                    moveable,\r\n                    type,\r\n                    \"dashed\",\r\n                    rendered.length,\r\n                    size2,\r\n                    renderPos2,\r\n                    guideline.className,\r\n                    React\r\n                ));\r\n            });\r\n        });\r\n    });\r\n    return rendered;\r\n}\r\nexport function renderGapGuidelines(\r\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\r\n    guidelines: SnapGuideline[],\r\n    targetPos: number[],\r\n    targetRect: SnapDirectionPoses,\r\n    React: any\r\n): any[] {\r\n    const rendered: any[] = [];\r\n    ([\"horizontal\", \"vertical\"] as const).forEach(type => {\r\n        const nextGuidelines = guidelines.filter(guideline => guideline.type === type).slice(0, 1);\r\n        const index = type === \"vertical\" ? 0 : 1;\r\n        const otherIndex = index ? 0 : 1;\r\n        const mainNames = index ? HORIZONTAL_NAMES_MAP : VERTICAL_NAMES_MAP;\r\n        const sideNames = index ? VERTICAL_NAMES_MAP : HORIZONTAL_NAMES_MAP;\r\n        const targetStart = targetRect[mainNames.start]!;\r\n        const targetEnd = targetRect[mainNames.end]!;\r\n        const targetSideStart = targetRect[sideNames.start]!;\r\n        const targetSideEnd = targetRect[sideNames.end]!;\r\n\r\n\r\n        nextGuidelines.forEach(({ gap, gapRects }) => {\r\n            const sideStartPos = Math.max(\r\n                targetSideStart,\r\n                ...gapRects!.map(({ rect }) => rect[sideNames.start]!),\r\n            );\r\n            const sideEndPos = Math.min(\r\n                targetSideEnd,\r\n                ...gapRects!.map(({ rect }) => rect[sideNames.end]!),\r\n            );\r\n            const sideCenterPos = (sideStartPos + sideEndPos) / 2;\r\n\r\n            if (sideStartPos === sideEndPos || sideCenterPos === (targetSideStart + targetSideEnd)/ 2) {\r\n                return;\r\n            }\r\n            gapRects!.forEach(({ rect, className }) => {\r\n                const renderPos = [targetPos[0], targetPos[1]];\r\n                let middlePosition=0;  // 这个是动态定位\r\n                /* 这里算阴影的高度 */\r\n                const rectMin = Math.min(\r\n                    targetSideStart,\r\n                    rect[sideNames.start]!);\r\n                const rectMax = Math.max(\r\n                    targetSideEnd,\r\n                    rect[sideNames.end]!);\r\n                const singleGap =(rectMax-rectMin)/2;\r\n                if (targetSideStart>rect[sideNames.start]!) {\r\n                    middlePosition=singleGap-(targetSideStart-rect[sideNames.start]!);\r\n                }else{\r\n                    middlePosition=singleGap;\r\n                }\r\n                if (rect[mainNames.end]! < targetStart) {\r\n                    renderPos[index] += rect[mainNames.end]! - targetStart;\r\n                } else if (targetEnd < rect[mainNames.start]!) {\r\n                    renderPos[index] += rect[mainNames.start]! - targetStart - gap!;\r\n                } else {\r\n                    return;\r\n                }\r\n\r\n                renderPos[otherIndex] += sideCenterPos - targetSideStart;\r\n                rendered.push(renderDigitLine(\r\n                    moveable,\r\n                    index ? \"vertical\" : \"horizontal\",\r\n                    \"gap\",\r\n                    rendered.length,\r\n                    gap!,\r\n                    renderPos,\r\n                    className,\r\n                    React,\r\n                    middlePosition,\r\n                    singleGap\r\n                ));\r\n            });\r\n        });\r\n    });\r\n    return rendered;\r\n}\r\n","import { convertUnitSize, dot, flat, isNumber, isObject, throttle } from \"@daybrush/utils\";\r\nimport { diff } from \"@egjs/children-differ\";\r\nimport {\r\n    MoveableManagerInterface, SnappableProps,\r\n    SnappableState, SnapGuideline, SnapDirectionPoses,\r\n    PosGuideline, ElementGuidelineValue,\r\n    SnapElementRect,\r\n    NumericPosGuideline,\r\n} from \"../../types\";\r\nimport { getRect, getAbsolutePosesByState, getRefTarget, calculateInversePosition, prefix, abs } from \"../../utils\";\r\nimport {\r\n    splitSnapDirectionPoses, getSnapDirections,\r\n    HORIZONTAL_NAMES_MAP, VERTICAL_NAMES_MAP, calculateContainerPos, SNAP_SKIP_NAMES_MAP,\r\n} from \"./utils\";\r\n\r\nexport function getTotalGuidelines(\r\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\r\n) {\r\n    const state = moveable.state;\r\n    const {\r\n        containerClientRect,\r\n        hasFixed,\r\n    } = state;\r\n    const {\r\n        overflow,\r\n        scrollHeight: containerHeight,\r\n        scrollWidth: containerWidth,\r\n        clientHeight: containerClientHeight,\r\n        clientWidth: containerClientWidth,\r\n        clientLeft,\r\n        clientTop,\r\n    } = containerClientRect;\r\n    const {\r\n        snapGap = true,\r\n        verticalGuidelines,\r\n        horizontalGuidelines,\r\n        snapThreshold = 5,\r\n        maxSnapElementGuidelineDistance = Infinity,\r\n        isDisplayGridGuidelines,\r\n    } = moveable.props;\r\n    const { top, left, bottom, right } = getRect(getAbsolutePosesByState(moveable.state));\r\n    const targetRect = { top, left, bottom, right, center: (left + right) / 2, middle: (top + bottom) / 2 };\r\n    const elementGuidelines = getElementGuidelines(moveable);\r\n    let totalGuidelines: SnapGuideline[] = [...elementGuidelines];\r\n\r\n    const snapThresholdMultiples = (state.snapThresholdInfo?.multiples ?? [1, 1]).map(n => n * snapThreshold);\r\n\r\n    if (snapGap) {\r\n        totalGuidelines.push(...getGapGuidelines(\r\n            moveable,\r\n            targetRect,\r\n            snapThresholdMultiples,\r\n        ));\r\n    }\r\n    const snapOffset = {\r\n        ...(state.snapOffset || {\r\n            left: 0,\r\n            top: 0,\r\n            bottom: 0,\r\n            right: 0,\r\n        }),\r\n    };\r\n\r\n    totalGuidelines.push(...getGridGuidelines(\r\n        moveable,\r\n        overflow ? containerWidth! : containerClientWidth!,\r\n        overflow ? containerHeight! : containerClientHeight!,\r\n        clientLeft,\r\n        clientTop,\r\n        snapOffset,\r\n        isDisplayGridGuidelines,\r\n    ));\r\n\r\n\r\n    if (hasFixed) {\r\n        const { left, top } = containerClientRect;\r\n\r\n        snapOffset.left += left;\r\n        snapOffset.top += top;\r\n        snapOffset.right += left;\r\n        snapOffset.bottom += top;\r\n    }\r\n\r\n    totalGuidelines.push(...getDefaultGuidelines(\r\n        horizontalGuidelines || false,\r\n        verticalGuidelines || false,\r\n        overflow ? containerWidth! : containerClientWidth!,\r\n        overflow ? containerHeight! : containerClientHeight!,\r\n        clientLeft,\r\n        clientTop,\r\n        snapOffset,\r\n    ));\r\n\r\n    totalGuidelines = totalGuidelines.filter(({ element, elementRect, type }) => {\r\n        if (!element || !elementRect) {\r\n            return true;\r\n        }\r\n        const rect = elementRect.rect;\r\n\r\n        return checkBetweenRects(targetRect, rect, type, maxSnapElementGuidelineDistance);\r\n    });\r\n\r\n    return totalGuidelines;\r\n}\r\n\r\nexport function getGapGuidelines(\r\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\r\n    targetRect: SnapDirectionPoses,\r\n    snapThresholds: number[],\r\n) {\r\n    const {\r\n        maxSnapElementGuidelineDistance = Infinity,\r\n        maxSnapElementGapDistance = Infinity,\r\n    } = moveable.props;\r\n    const elementRects = moveable.state.elementRects;\r\n    const gapGuidelines: SnapGuideline[] = [];\r\n    [\r\n        [\"vertical\", VERTICAL_NAMES_MAP, HORIZONTAL_NAMES_MAP] as const,\r\n        [\"horizontal\", HORIZONTAL_NAMES_MAP, VERTICAL_NAMES_MAP] as const,\r\n    ].forEach(([type, mainNames, sideNames]) => {\r\n        const targetStart = targetRect[mainNames.start]!;\r\n        const targetEnd = targetRect[mainNames.end]!;\r\n        const targetCenter = targetRect[mainNames.center]!;\r\n        const targetStart2 = targetRect[sideNames.start]!;\r\n        const targetEnd2 = targetRect[sideNames.end]!;\r\n\r\n        // element : moveable\r\n        const snapThresholdMap = {\r\n            left: snapThresholds[0],\r\n            top: snapThresholds[1],\r\n        };\r\n\r\n        function getDist(elementRect: SnapElementRect) {\r\n            const rect = elementRect.rect;\r\n            const snapThreshold = snapThresholdMap[mainNames.start];\r\n\r\n            if (rect[mainNames.end]! < targetStart + snapThreshold) {\r\n                return targetStart - rect[mainNames.end]!;\r\n            } else if (targetEnd - snapThreshold < rect[mainNames.start]!) {\r\n                return rect[mainNames.start]! - targetEnd;\r\n            } else {\r\n                return -1;\r\n            }\r\n        }\r\n        const nextElementRects = elementRects.filter(elementRect => {\r\n            const rect = elementRect.rect;\r\n\r\n            if (rect[sideNames.start]! > targetEnd2 || rect[sideNames.end]! < targetStart2) {\r\n                return false;\r\n            }\r\n\r\n            return getDist(elementRect) > 0;\r\n        }).sort((a, b) => {\r\n            return getDist(a) - getDist(b);\r\n        });\r\n\r\n        const groups: SnapElementRect[][] = [];\r\n\r\n        nextElementRects.forEach(snapRect1 => {\r\n            nextElementRects.forEach(snapRect2 => {\r\n                if (snapRect1 === snapRect2) {\r\n                    return;\r\n                }\r\n                const { rect: rect1 } = snapRect1;\r\n                const { rect: rect2 } = snapRect2;\r\n\r\n                const rect1Start = rect1[sideNames.start]!;\r\n                const rect1End = rect1[sideNames.end]!;\r\n                const rect2Start = rect2[sideNames.start]!;\r\n                const rect2End = rect2[sideNames.end]!;\r\n\r\n                if (rect1Start > rect2End || rect2Start > rect1End) {\r\n                    return;\r\n                }\r\n\r\n                groups.push([snapRect1, snapRect2]);\r\n            });\r\n        });\r\n\r\n        groups.forEach(([snapRect1, snapRect2]) => {\r\n            const { rect: rect1 } = snapRect1;\r\n            const { rect: rect2 } = snapRect2;\r\n\r\n            const rect1Start = rect1[mainNames.start]!;\r\n            const rect1End = rect1[mainNames.end]!;\r\n            const rect2Start = rect2[mainNames.start]!;\r\n            const rect2End = rect2[mainNames.end]!;\r\n            const snapThreshold = snapThresholdMap[mainNames.start];\r\n            let gap = 0;\r\n            let pos = 0;\r\n            let isStart = false;\r\n            let isCenter = false;\r\n            let isEnd = false;\r\n\r\n            if (rect1End <= targetStart && targetEnd <= rect2Start) {\r\n                // (l)element1(r) : (l)target(r) : (l)element2(r)\r\n                isCenter = true;\r\n                gap = ((rect2Start - rect1End) - (targetEnd - targetStart)) / 2;\r\n                pos = rect1End + gap + (targetEnd - targetStart) / 2;\r\n\r\n                if (abs(pos - targetCenter) > snapThreshold) {\r\n                    return;\r\n                }\r\n            } else if (rect1End < rect2Start && rect2End < targetStart + snapThreshold) {\r\n                // (l)element1(r) : (l)element2(r) : (l)target\r\n                isStart = true;\r\n\r\n                gap = rect2Start - rect1End;\r\n                pos = rect2End + gap;\r\n\r\n                if (abs(pos - targetStart) > snapThreshold) {\r\n                    return;\r\n                }\r\n            } else if (rect1End < rect2Start && targetEnd - snapThreshold < rect1Start) {\r\n                // target(r) : (l)element1(r) : (l)element2(r)\r\n\r\n                isEnd = true;\r\n                gap = rect2Start - rect1End;\r\n                pos = rect1Start - gap;\r\n\r\n                if (abs(pos - targetEnd) > snapThreshold) {\r\n                    return;\r\n                }\r\n            } else {\r\n                return;\r\n            }\r\n            if (!gap) {\r\n                return;\r\n            }\r\n            if (!checkBetweenRects(targetRect, rect2, type, maxSnapElementGuidelineDistance)) {\r\n                return;\r\n            }\r\n            if (gap > maxSnapElementGapDistance) {\r\n                return;\r\n            }\r\n            gapGuidelines.push({\r\n                type,\r\n                pos: type === \"vertical\" ? [pos, 0] : [0, pos],\r\n                element: snapRect2.element,\r\n                size: 0,\r\n                className: snapRect2.className,\r\n                isStart,\r\n                isCenter,\r\n                isEnd,\r\n                gap,\r\n                hide: true,\r\n                gapRects: [snapRect1, snapRect2],\r\n                direction: \"\",\r\n                elementDirection: \"\",\r\n            });\r\n        });\r\n    });\r\n    return gapGuidelines;\r\n}\r\nexport function startGridGroupGuidelines(\r\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\r\n    clientLeft: number,\r\n    clientTop: number,\r\n    snapOffset: { left: number, top: number, right: number, bottom: number },\r\n) {\r\n    const props = moveable.props;\r\n    const state = moveable.state;\r\n    const {\r\n        snapGridAll,\r\n    } = props;\r\n    const {\r\n        snapGridWidth = 0,\r\n        snapGridHeight = 0,\r\n    } = props;\r\n    const {\r\n        snapRenderInfo,\r\n    } = state;\r\n    const hasDirection = snapRenderInfo && (snapRenderInfo.direction?.[0] || snapRenderInfo.direction?.[1]);\r\n    const moveables = moveable.moveables;\r\n    const ignores = [false, false];\r\n\r\n    // snap group's all child to grid.\r\n    if (\r\n        snapGridAll\r\n        && moveables\r\n        && hasDirection\r\n        && (snapGridWidth || snapGridHeight)\r\n    ) {\r\n        if (state.snapThresholdInfo) {\r\n            return;\r\n        }\r\n        state.snapThresholdInfo = {\r\n            multiples: [1, 1],\r\n            offset: [0, 0],\r\n        };\r\n\r\n        const rect = moveable.getRect();\r\n        const children = rect.children;\r\n        const direction = snapRenderInfo.direction!;\r\n\r\n\r\n        if (children) {\r\n            const result = direction.map((dir, i) => {\r\n                const {\r\n                    snapSize,\r\n                    posName,\r\n                    sizeName,\r\n                    clientOffset,\r\n                } = i === 0 ? {\r\n                    snapSize: snapGridWidth,\r\n                    posName: \"left\",\r\n                    sizeName: \"width\",\r\n                    clientOffset: snapOffset.left - clientLeft,\r\n                } as const : {\r\n                    snapSize: snapGridHeight,\r\n                    posName: \"top\",\r\n                    sizeName: \"height\",\r\n                    clientOffset: snapOffset.top - clientTop,\r\n                } as const;\r\n\r\n                if (!snapSize) {\r\n                    return {\r\n                        dir,\r\n                        multiple: 1,\r\n                        snapSize,\r\n                        snapOffset: 0,\r\n                    };\r\n                }\r\n                const rectSize = rect[sizeName];\r\n                const rectPos = rect[posName];\r\n\r\n                // 사이즈보다 만약 작다면 어떻게 해야되죠?\r\n                const childSizes = flat(children.map(child => {\r\n                    return [\r\n                        (child[posName] - rectPos),\r\n                        (child[sizeName]),\r\n                        (rectSize - child[sizeName] - child[posName] + rectPos),\r\n                    ];\r\n                })).filter(v => v).sort((a, b) => {\r\n                    return a - b;\r\n                });\r\n\r\n                const firstChildSize = childSizes[0];\r\n                const childSnapSizes = childSizes.map(size => throttle(size / firstChildSize, 0.1) * snapSize);\r\n                let n = 1;\r\n\r\n                const rectRatio = throttle(rectSize / firstChildSize, 0.1);\r\n\r\n                for (n = 1; n <= 10; ++n) {\r\n                    if (childSnapSizes.every(childSize => {\r\n                        return childSize * n % 1 === 0;\r\n                    })) {\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                // dir 1 (fixed -1)\r\n                // dir 0 (fixed 0)\r\n                // dir -1 (fixed 1)\r\n\r\n                const ratio = (-dir + 1) / 2;\r\n                const offsetPos = dot(\r\n                    rectPos - clientOffset,\r\n                    rectPos - clientOffset + rectSize,\r\n                    ratio, 1 - ratio,\r\n                );\r\n\r\n                return {\r\n                    multiple: rectRatio * n,\r\n                    dir,\r\n                    snapSize,\r\n                    snapOffset: Math.round(offsetPos / snapSize),\r\n                };\r\n            });\r\n\r\n            const multiples = result.map(r => r.multiple || 1);\r\n            state.snapThresholdInfo.multiples = multiples;\r\n            state.snapThresholdInfo.offset = result.map(r => r.snapOffset);\r\n\r\n            result.forEach((r, i) => {\r\n                if (r.snapSize) {\r\n                    ignores[i] = true;\r\n                }\r\n            });\r\n        }\r\n    } else {\r\n        state.snapThresholdInfo = null;\r\n    }\r\n}\r\n\r\n\r\nexport function getGridGuidelines(\r\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\r\n    containerWidth: number,\r\n    containerHeight: number,\r\n    clientLeft = 0,\r\n    clientTop = 0,\r\n    snapOffset: { left: number, top: number, right: number, bottom: number },\r\n    isDisplayGridGuidelines?: boolean,\r\n): SnapGuideline[] {\r\n    const props = moveable.props;\r\n    const state = moveable.state;\r\n    let {\r\n        snapGridWidth = 0,\r\n        snapGridHeight = 0,\r\n    } = props;\r\n    const guidelines: SnapGuideline[] = [];\r\n    const {\r\n        left: snapOffsetLeft,\r\n        top: snapOffsetTop,\r\n    } = snapOffset;\r\n    let startOffset = [0, 0];\r\n\r\n    startGridGroupGuidelines(\r\n        moveable,\r\n        clientLeft,\r\n        clientTop,\r\n        snapOffset,\r\n    );\r\n\r\n    const snapThresholdInfo = state.snapThresholdInfo;\r\n    const defaultSnapGridWidth = snapGridWidth;\r\n    const defaultSnapGridHeight = snapGridHeight;\r\n\r\n    if (snapThresholdInfo) {\r\n        snapGridWidth *= snapThresholdInfo.multiples[0] || 1;\r\n        snapGridHeight *= snapThresholdInfo.multiples[1] || 1;\r\n        startOffset = snapThresholdInfo.offset;\r\n    }\r\n\r\n    if (snapGridHeight) {\r\n        const pushGuideline = (pos: number) => {\r\n            guidelines.push({\r\n                type: \"horizontal\",\r\n                pos: [\r\n                    snapOffsetLeft,\r\n                    throttle(startOffset[1] * defaultSnapGridHeight + pos - clientTop + snapOffsetTop, 0.1),\r\n                ],\r\n                className: prefix(\"grid-guideline\"),\r\n                size: containerWidth!,\r\n                hide: !isDisplayGridGuidelines,\r\n                direction: \"\",\r\n                grid: true,\r\n            });\r\n        };\r\n        for (let pos = 0; pos <= containerHeight * 2; pos += snapGridHeight) {\r\n            pushGuideline(pos);\r\n        }\r\n        for (let pos = -snapGridHeight; pos >= -containerHeight; pos -= snapGridHeight) {\r\n            pushGuideline(pos);\r\n        }\r\n    }\r\n\r\n    if (snapGridWidth) {\r\n        const pushGuideline = (pos: number) => {\r\n            guidelines.push({\r\n                type: \"vertical\",\r\n                pos: [\r\n                    throttle(startOffset[0] * defaultSnapGridWidth + pos - clientLeft + snapOffsetLeft, 0.1),\r\n                    snapOffsetTop,\r\n                ],\r\n                className: prefix(\"grid-guideline\"),\r\n                size: containerHeight!,\r\n                hide: !isDisplayGridGuidelines,\r\n                direction: \"\",\r\n                grid: true,\r\n            });\r\n        };\r\n        for (let pos = 0; pos <= containerWidth * 2; pos += snapGridWidth) {\r\n            pushGuideline(pos);\r\n        }\r\n        for (let pos = -snapGridWidth; pos >= -containerWidth; pos -= snapGridWidth) {\r\n            pushGuideline(pos);\r\n        }\r\n    }\r\n\r\n    return guidelines;\r\n}\r\n\r\nexport function checkBetweenRects(\r\n    rect1: SnapDirectionPoses,\r\n    rect2: SnapDirectionPoses,\r\n    type: \"horizontal\" | \"vertical\",\r\n    distance: number,\r\n) {\r\n    if (type === \"horizontal\") {\r\n        return abs(rect1.right! - rect2.left!) <= distance\r\n            || abs(rect1.left! - rect2.right!) <= distance\r\n            || rect1.left! <= rect2.right! && rect2.left! <= rect1.right!;\r\n    } else if (type === \"vertical\") {\r\n        return abs(rect1.bottom! - rect2.top!) <= distance\r\n            || abs(rect1.top! - rect2.bottom!) <= distance\r\n            || rect1.top! <= rect2.bottom! && rect2.top! <= rect1.bottom!;\r\n    }\r\n    return true;\r\n}\r\n\r\n\r\nexport function getElementGuidelines(\r\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\r\n) {\r\n    const state = moveable.state;\r\n\r\n    const {\r\n        elementGuidelines = [],\r\n    } = moveable.props;\r\n\r\n    if (!elementGuidelines.length) {\r\n        state.elementRects = [];\r\n        return [];\r\n    }\r\n\r\n    const prevValues = (state.elementRects || []).filter(snapRect => !snapRect.refresh);\r\n    const nextElementGuidelines = elementGuidelines.map(el => {\r\n        if (isObject(el) && \"element\" in el) {\r\n            return {\r\n                ...el,\r\n                element: getRefTarget(el.element, true)!,\r\n            };\r\n        }\r\n        return {\r\n            element: getRefTarget(el, true)!,\r\n        };\r\n    }).filter(value => {\r\n        return value.element;\r\n    }) as ElementGuidelineValue[];\r\n\r\n    const {\r\n        maintained,\r\n        added,\r\n    } = diff(prevValues.map(v => v.element), nextElementGuidelines.map(v => v.element));\r\n\r\n\r\n    const nextValues: SnapElementRect[] = [];\r\n    maintained.forEach(([prevIndex, nextIndex]) => {\r\n        nextValues[nextIndex] = prevValues[prevIndex];\r\n    });\r\n\r\n    getSnapElementRects(moveable, added.map(index => nextElementGuidelines[index])).map((rect, i) => {\r\n        nextValues[added[i]] = rect;\r\n    });\r\n\r\n\r\n    state.elementRects = nextValues;\r\n    const elementSnapDirections = getSnapDirections(moveable.props.elementSnapDirections);\r\n    const nextGuidelines: SnapGuideline[] = [];\r\n\r\n    nextValues.forEach(snapRect => {\r\n        const {\r\n            element,\r\n            top: topValue = elementSnapDirections.top,\r\n            left: leftValue = elementSnapDirections.left,\r\n            right: rightValue = elementSnapDirections.right,\r\n            bottom: bottomValue = elementSnapDirections.bottom,\r\n            center: centerValue = elementSnapDirections.center,\r\n            middle: middleValue = elementSnapDirections.middle,\r\n            className,\r\n            rect,\r\n        } = snapRect;\r\n        const {\r\n            horizontal,\r\n            vertical,\r\n            horizontalNames,\r\n            verticalNames,\r\n        } = splitSnapDirectionPoses({\r\n            top: topValue,\r\n            right: rightValue,\r\n            left: leftValue,\r\n            bottom: bottomValue,\r\n            center: centerValue,\r\n            middle: middleValue,\r\n        }, rect);\r\n        const rectTop = rect.top!;\r\n        const rectLeft = rect.left!;\r\n        const width = rect.right! - rectLeft;\r\n        const height = rect.bottom! - rectTop;\r\n        const sizes = [width, height];\r\n\r\n        vertical.forEach((pos, i) => {\r\n            nextGuidelines.push({\r\n                type: \"vertical\", element, pos: [\r\n                    throttle(pos, 0.1),\r\n                    rectTop,\r\n                ], size: height,\r\n                sizes,\r\n                className,\r\n                elementRect: snapRect,\r\n                elementDirection: SNAP_SKIP_NAMES_MAP[verticalNames[i]] || verticalNames[i],\r\n                direction: \"\",\r\n            });\r\n        });\r\n        horizontal.forEach((pos, i) => {\r\n            nextGuidelines.push({\r\n                type: \"horizontal\",\r\n                element,\r\n                pos: [\r\n                    rectLeft,\r\n                    throttle(pos, 0.1),\r\n                ],\r\n                size: width,\r\n                sizes,\r\n                className,\r\n                elementRect: snapRect,\r\n                elementDirection: SNAP_SKIP_NAMES_MAP[horizontalNames[i]] || horizontalNames[i],\r\n                direction: \"\",\r\n            });\r\n        });\r\n    });\r\n\r\n    return nextGuidelines;\r\n}\r\n\r\n\r\nfunction getObjectGuidelines(\r\n    guidelines: Array<PosGuideline | number | string> | false,\r\n    containerSize: number,\r\n): NumericPosGuideline[] {\r\n    return guidelines ? guidelines.map(info => {\r\n        const posGuideline = isObject(info) ? info : { pos: info };\r\n        const pos = posGuideline.pos;\r\n\r\n        if (isNumber(pos)) {\r\n            return posGuideline as NumericPosGuideline;\r\n        } else {\r\n            return {\r\n                ...posGuideline,\r\n                pos: convertUnitSize(pos, containerSize),\r\n            };\r\n        }\r\n    }) : [];\r\n}\r\n\r\nexport function getDefaultGuidelines(\r\n    horizontalGuidelines: Array<PosGuideline | number | string> | false,\r\n    verticalGuidelines: Array<PosGuideline | number | string> | false,\r\n    width: number,\r\n    height: number,\r\n    clientLeft = 0,\r\n    clientTop = 0,\r\n    snapOffset = { left: 0, top: 0, right: 0, bottom: 0 },\r\n): SnapGuideline[] {\r\n    const guidelines: SnapGuideline[] = [];\r\n    const {\r\n        left: snapOffsetLeft,\r\n        top: snapOffsetTop,\r\n        bottom: snapOffsetBottom,\r\n        right: snapOffsetRight,\r\n    } = snapOffset;\r\n    const snapWidth = width! + snapOffsetRight - snapOffsetLeft;\r\n    const snapHeight = height! + snapOffsetBottom - snapOffsetTop;\r\n\r\n    getObjectGuidelines(horizontalGuidelines, snapHeight).forEach(posInfo => {\r\n        guidelines.push({\r\n            type: \"horizontal\",\r\n            pos: [\r\n                snapOffsetLeft,\r\n                throttle(posInfo.pos - clientTop + snapOffsetTop, 0.1),\r\n            ],\r\n            size: snapWidth,\r\n            className: posInfo.className,\r\n            direction: \"\",\r\n        });\r\n    });\r\n    getObjectGuidelines(verticalGuidelines, snapWidth).forEach(posInfo => {\r\n        guidelines.push({\r\n            type: \"vertical\",\r\n            pos: [\r\n                throttle(posInfo.pos - clientLeft + snapOffsetLeft, 0.1),\r\n                snapOffsetTop,\r\n            ],\r\n            size: snapHeight,\r\n            className: posInfo.className,\r\n            direction: \"\",\r\n        });\r\n    });\r\n    return guidelines;\r\n}\r\n\r\n\r\n\r\nexport function getSnapElementRects(\r\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\r\n    values: ElementGuidelineValue[],\r\n): SnapElementRect[] {\r\n    if (!values.length) {\r\n        return [];\r\n    }\r\n    const groupable = moveable.props.groupable;\r\n    const state = moveable.state;\r\n    const {\r\n        containerClientRect,\r\n        // targetClientRect: {\r\n        //     top: clientTop,\r\n        //     left: clientLeft,\r\n        // },\r\n        rootMatrix,\r\n        is3d,\r\n        offsetDelta,\r\n    } = state;\r\n    const n = is3d ? 4 : 3;\r\n    const [containerLeft, containerTop] = calculateContainerPos(rootMatrix, containerClientRect, n);\r\n    // const poses = getAbsolutePosesByState(state);\r\n    // const {\r\n    //     minX: targetLeft,\r\n    //     minY: targetTop,\r\n    // } = getMinMaxs(poses);\r\n    // const [distLeft, distTop] = minus([targetLeft, targetTop], calculateInversePosition(rootMatrix, [\r\n    //     clientLeft - containerLeft,\r\n    //     clientTop - containerTop,\r\n    // ], n)).map(pos => roundSign(pos));\r\n\r\n    const offsetLeft = groupable ? 0 : offsetDelta[0];\r\n    const offsetTop = groupable ? 0 : offsetDelta[1];\r\n\r\n    return values.map(value => {\r\n        const rect = value.element.getBoundingClientRect();\r\n        const left = rect.left - containerLeft - offsetLeft;\r\n        const top = rect.top - containerTop - offsetTop;\r\n        const bottom = top + rect.height;\r\n        const right = left + rect.width;\r\n        const [elementLeft, elementTop] = calculateInversePosition(rootMatrix, [left, top], n);\r\n        const [elementRight, elementBottom] = calculateInversePosition(rootMatrix, [right, bottom], n);\r\n\r\n        return {\r\n            ...value,\r\n            rect: {\r\n                left: elementLeft,\r\n                right: elementRight,\r\n                top: elementTop,\r\n                bottom: elementBottom,\r\n                center: (elementLeft + elementRight) / 2,\r\n                middle: (elementTop + elementBottom) / 2,\r\n            },\r\n        };\r\n    });\r\n}\r\n","import {\r\n    Renderer,\r\n    SnappableProps,\r\n    SnappableState,\r\n    SnapGuideline,\r\n    ScalableProps,\r\n    SnapPosInfo,\r\n    RotatableProps,\r\n    RectInfo,\r\n    MoveableManagerInterface,\r\n    SnappableRenderType,\r\n    BoundType,\r\n    MoveableGroupInterface,\r\n    SnapDirectionInfo,\r\n} from \"../types\";\r\nimport {\r\n    prefix,\r\n    calculatePoses,\r\n    getRect,\r\n    getAbsolutePosesByState,\r\n    getAbsolutePoses,\r\n    getClientRect,\r\n    getRefTarget,\r\n    getDragDistByState,\r\n    triggerEvent,\r\n    getDirectionCondition,\r\n    abs,\r\n    watchValue,\r\n} from \"../utils\";\r\nimport {\r\n    find,\r\n    findIndex, hasClass, throttle,\r\n} from \"@daybrush/utils\";\r\nimport {\r\n    getDragDist,\r\n    scaleMatrix,\r\n    getPosByDirection,\r\n} from \"../gesto/GestoUtils\";\r\nimport { minus, rotate, plus } from \"@scena/matrix\";\r\nimport { dragControlCondition as rotatableDragControlCondtion } from \"./Rotatable\";\r\nimport { FLOAT_POINT_NUM } from \"../consts\";\r\nimport {\r\n    getInnerBoundInfo,\r\n    getCheckInnerBoundLineInfos,\r\n    checkRotateInnerBounds,\r\n    checkInnerBoundPoses,\r\n} from \"./snappable/innerBounds\";\r\nimport {\r\n    checkBoundPoses,\r\n    checkRotateBounds,\r\n    getBounds,\r\n} from \"./snappable/bounds\";\r\nimport {\r\n    checkSnaps,\r\n    getSnapInfosByDirection,\r\n    getNearOffsetInfo,\r\n    getCheckSnapDirections,\r\n} from \"./snappable/snap\";\r\nimport {\r\n    renderSnapPoses,\r\n    renderGuidelines,\r\n    renderDashedGuidelines,\r\n    renderGapGuidelines,\r\n} from \"./snappable/render\";\r\nimport {\r\n    getInitialBounds,\r\n    hasGuidelines,\r\n} from \"./snappable/utils\";\r\nimport {\r\n    checkMaxBounds,\r\n    checkMoveableSnapBounds,\r\n    getSnapBoundInfo,\r\n} from \"./snappable/snapBounds\";\r\nimport { getTotalGuidelines } from \"./snappable/getTotalGuidelines\";\r\n\r\n\r\nexport interface SnapPoses {\r\n    vertical: number[];\r\n    horizontal: number[];\r\n}\r\n\r\nexport function checkSnapInfo(\r\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>\r\n) {\r\n    const state = moveable.state;\r\n    const container = state.container;\r\n    const snapContainer = moveable.props.snapContainer || container!;\r\n\r\n    if (state.snapContainer === snapContainer && state.guidelines && state.guidelines.length) {\r\n        return false;\r\n    }\r\n\r\n    const containerClientRect = state.containerClientRect;\r\n    const snapOffset = {\r\n        left: 0,\r\n        top: 0,\r\n        bottom: 0,\r\n        right: 0,\r\n    };\r\n\r\n    if (container !== snapContainer) {\r\n        const snapContainerTarget = getRefTarget(snapContainer, true);\r\n\r\n        if (snapContainerTarget) {\r\n            const snapContainerRect = getClientRect(snapContainerTarget);\r\n            const offset1 = getDragDistByState(state, [\r\n                snapContainerRect.left - containerClientRect.left,\r\n                snapContainerRect.top - containerClientRect.top,\r\n            ]);\r\n            const offset2 = getDragDistByState(state, [\r\n                snapContainerRect.right - containerClientRect.right,\r\n                snapContainerRect.bottom - containerClientRect.bottom,\r\n            ]);\r\n\r\n            snapOffset.left = throttle(offset1[0], 0.00001);\r\n            snapOffset.top = throttle(offset1[1], 0.00001);\r\n            snapOffset.right = throttle(offset2[0], 0.00001);\r\n            snapOffset.bottom = throttle(offset2[1], 0.00001);\r\n        }\r\n    }\r\n\r\n    state.snapContainer = snapContainer;\r\n    state.snapOffset = snapOffset;\r\n    state.guidelines = getTotalGuidelines(moveable);\r\n    state.enableSnap = true;\r\n    return true;\r\n}\r\n\r\nfunction getNextFixedPoses(\r\n    matrix: number[],\r\n    width: number,\r\n    height: number,\r\n    fixedDirection: number[],\r\n    fixedPos: number[],\r\n    is3d: boolean\r\n) {\r\n    const nextPoses = calculatePoses(matrix, width, height, is3d ? 4 : 3);\r\n    const nextFixedPos = getPosByDirection(nextPoses, fixedDirection);\r\n\r\n    return getAbsolutePoses(nextPoses, minus(fixedPos, nextFixedPos));\r\n}\r\n\r\nexport function normalized(value: number) {\r\n    return value ? value / abs(value) : 0;\r\n}\r\n\r\nexport function getSizeOffsetInfo(\r\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\r\n    poses: number[][],\r\n    direction: number[],\r\n    keepRatio: boolean,\r\n    isRequest: boolean,\r\n    datas: any\r\n) {\r\n    const { fixedDirection } = datas;\r\n    const directions = getCheckSnapDirections(direction, fixedDirection, keepRatio);\r\n    const innerBoundLineInfos = getCheckInnerBoundLineInfos(moveable, poses, direction, keepRatio);\r\n    const offsets = [\r\n        ...getSnapBoundInfo(\r\n            moveable,\r\n            poses,\r\n            directions,\r\n            keepRatio,\r\n            isRequest,\r\n            datas\r\n        ),\r\n        ...getInnerBoundInfo(\r\n            moveable,\r\n            innerBoundLineInfos,\r\n            datas\r\n        ),\r\n    ];\r\n    const widthOffsetInfo = getNearOffsetInfo(offsets, 0);\r\n    const heightOffsetInfo = getNearOffsetInfo(offsets, 1);\r\n    // console.log( 'widthOffsetInfo', widthOffsetInfo, heightOffsetInfo);\r\n    return {\r\n        width: {\r\n            isBound: widthOffsetInfo.isBound,\r\n            offset: widthOffsetInfo.offset[0],\r\n        },\r\n        height: {\r\n            isBound: heightOffsetInfo.isBound,\r\n            offset: heightOffsetInfo.offset[1],\r\n        },\r\n    };\r\n}\r\n\r\nexport function recheckSizeByTwoDirection(\r\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\r\n    poses: number[][],\r\n    width: number,\r\n    height: number,\r\n    maxWidth: number,\r\n    maxHeight: number,\r\n    direction: number[],\r\n    isRequest: boolean,\r\n    datas: any\r\n) {\r\n    const snapPos = getPosByDirection(poses, direction);\r\n\r\n    const {\r\n        horizontal: { offset: horizontalOffset },\r\n        vertical: { offset: verticalOffset },\r\n    } = checkMoveableSnapBounds(moveable, isRequest, {\r\n        vertical: [snapPos[0]],\r\n        horizontal: [snapPos[1]],\r\n    });\r\n\r\n    if (throttle(verticalOffset, FLOAT_POINT_NUM) || throttle(horizontalOffset, FLOAT_POINT_NUM)) {\r\n        const [nextWidthOffset, nextHeightOffset] = getDragDist({\r\n            datas,\r\n            distX: -verticalOffset,\r\n            distY: -horizontalOffset,\r\n        });\r\n        const nextWidth = Math.min(\r\n            maxWidth || Infinity,\r\n            width + direction[0] * nextWidthOffset\r\n        );\r\n        const nextHeight = Math.min(\r\n            maxHeight || Infinity,\r\n            height + direction[1] * nextHeightOffset\r\n        );\r\n\r\n        return [nextWidth - width, nextHeight - height];\r\n    }\r\n    return [0, 0];\r\n}\r\n\r\nexport function checkSizeDist(\r\n    moveable: MoveableManagerInterface<any, any>,\r\n    getNextPoses: (widthOffset: number, heightOffset: number) => number[][],\r\n    width: number,\r\n    height: number,\r\n    direction: number[],\r\n    fixedPosition: number[],\r\n    isRequest: boolean,\r\n    datas: any\r\n) {\r\n    const poses = getAbsolutePosesByState(moveable.state);\r\n    const keepRatio = moveable.props.keepRatio;\r\n\r\n    let widthOffset = 0;\r\n    let heightOffset = 0;\r\n\r\n    for (let i = 0; i < 2; ++i) {\r\n        const nextPoses = getNextPoses(widthOffset, heightOffset);\r\n        const {\r\n            width: widthOffsetInfo,\r\n            height: heightOffsetInfo,\r\n        } = getSizeOffsetInfo(\r\n            moveable,\r\n            nextPoses,\r\n            direction,\r\n            keepRatio,\r\n            isRequest,\r\n            datas\r\n        );\r\n\r\n        const isWidthBound = widthOffsetInfo.isBound;\r\n        const isHeightBound = heightOffsetInfo.isBound;\r\n        let nextWidthOffset = widthOffsetInfo.offset;\r\n        let nextHeightOffset = heightOffsetInfo.offset;\r\n\r\n\r\n        if (i === 1) {\r\n            if (!isWidthBound) {\r\n                nextWidthOffset = 0;\r\n            }\r\n            if (!isHeightBound) {\r\n                nextHeightOffset = 0;\r\n            }\r\n        }\r\n        if (i === 0 && isRequest && !isWidthBound && !isHeightBound) {\r\n            return [0, 0];\r\n        }\r\n        if (keepRatio) {\r\n            const widthDist =\r\n                abs(nextWidthOffset) * (width ? 1 / width : 1);\r\n            const heightDist =\r\n                abs(nextHeightOffset) * (height ? 1 / height : 1);\r\n            const isGetWidthOffset =\r\n                isWidthBound && isHeightBound\r\n                    ? widthDist < heightDist\r\n                    : isHeightBound ||\r\n                    (!isWidthBound && widthDist < heightDist);\r\n            if (isGetWidthOffset) {\r\n                // width : height = ? : heightOffset\r\n                nextWidthOffset = (width * nextHeightOffset) / height;\r\n            } else {\r\n                // width : height = widthOffset : ?\r\n                nextHeightOffset = (height * nextWidthOffset) / width;\r\n            }\r\n        }\r\n        widthOffset += nextWidthOffset;\r\n        heightOffset += nextHeightOffset;\r\n    }\r\n\r\n    if (!keepRatio && direction[0] && direction[1]) {\r\n        const { maxWidth, maxHeight } = checkMaxBounds(\r\n            moveable,\r\n            poses,\r\n            direction,\r\n            fixedPosition,\r\n            datas\r\n        );\r\n\r\n        const [nextWidthOffset, nextHeightOffset] = recheckSizeByTwoDirection(\r\n            moveable,\r\n            getNextPoses(widthOffset, heightOffset).map(pos => pos.map(p => throttle(p, FLOAT_POINT_NUM))),\r\n            width + widthOffset,\r\n            height + heightOffset,\r\n            maxWidth,\r\n            maxHeight,\r\n            direction,\r\n            isRequest,\r\n            datas\r\n        );\r\n\r\n        widthOffset += nextWidthOffset;\r\n        heightOffset += nextHeightOffset;\r\n    }\r\n\r\n    return [widthOffset, heightOffset];\r\n}\r\n\r\nexport function absDegree(deg: number) {\r\n    if (deg < 0) {\r\n        deg = deg % 360 + 360;\r\n    }\r\n    deg %= 360;\r\n    return deg;\r\n}\r\n\r\nexport function bumpDegree(baseDeg: number, snapDeg: number) {\r\n    // baseDeg -80\r\n    // snapDeg 270\r\n    // return -90\r\n    snapDeg = absDegree(snapDeg);\r\n\r\n    const count = Math.floor(baseDeg / 360);\r\n\r\n\r\n    const deg1 = count * 360 + 360 - snapDeg;\r\n    const deg2 = count * 360 + snapDeg;\r\n\r\n    return abs(baseDeg - deg1) < abs(baseDeg - deg2) ? deg1 : deg2;\r\n}\r\n\r\nexport function getMinDegreeDistance(deg1: number, deg2: number) {\r\n    deg1 = absDegree(deg1);\r\n    deg2 = absDegree(deg2);\r\n\r\n    const deg3 = absDegree(deg1 - deg2);\r\n\r\n    return Math.min(deg3, 360 - deg3);\r\n}\r\n\r\nexport function checkSnapRotate(\r\n    moveable: MoveableManagerInterface<SnappableProps & RotatableProps, any>,\r\n    rect: RectInfo,\r\n    dist: number,\r\n    rotation: number,\r\n) {\r\n    const props = moveable.props;\r\n    const snapRotationThreshold = props[NAME_snapRotationThreshold] ?? 5;\r\n    const snapRotationDegrees = props[NAME_snapRotationDegrees];\r\n\r\n    if (hasGuidelines(moveable, \"rotatable\")) {\r\n        const { pos1, pos2, pos3, pos4, origin: origin2 } = rect;\r\n        const rad = (dist * Math.PI) / 180;\r\n        const prevPoses = [pos1, pos2, pos3, pos4].map((pos) => minus(pos, origin2));\r\n        const nextPoses = prevPoses.map((pos) => rotate(pos, rad));\r\n\r\n        // console.log(moveable.state.left, moveable.state.top, moveable.state.origin);\r\n        // console.log(pos1, pos2, pos3, pos4, origin, rad, prevPoses, nextPoses);\r\n        const result = [\r\n            ...checkRotateBounds(moveable, prevPoses, nextPoses, origin2, dist),\r\n            ...checkRotateInnerBounds(\r\n                moveable,\r\n                prevPoses,\r\n                nextPoses,\r\n                origin2,\r\n                dist\r\n            ),\r\n        ];\r\n        result.sort((a, b) => abs(a - dist) - abs(b - dist));\r\n        const isSnap = result.length > 0;\r\n\r\n        if (isSnap) {\r\n            return {\r\n                isSnap,\r\n                dist: isSnap ? result[0] : dist,\r\n            };\r\n        }\r\n    }\r\n    if (snapRotationDegrees?.length && snapRotationThreshold) {\r\n\r\n\r\n        const sorted = snapRotationDegrees.slice().sort((a, b) => {\r\n            return getMinDegreeDistance(a, rotation) - getMinDegreeDistance(b, rotation);\r\n        });\r\n        const firstDegree = sorted[0];\r\n\r\n        if (getMinDegreeDistance(firstDegree, rotation) <= snapRotationThreshold) {\r\n\r\n            return {\r\n                isSnap: true,\r\n                dist: dist + bumpDegree(rotation, firstDegree) - rotation,\r\n            };\r\n        }\r\n    }\r\n    return {\r\n        isSnap: false,\r\n        dist,\r\n    };\r\n\r\n}\r\n\r\nexport function checkSnapResize(\r\n    moveable: MoveableManagerInterface<{}, {}>,\r\n    width: number,\r\n    height: number,\r\n    direction: number[],\r\n    fixedPosition: number[],\r\n    isRequest: boolean,\r\n    datas: any\r\n) {\r\n    if (!hasGuidelines(moveable, \"resizable\")) {\r\n        return [0, 0];\r\n    }\r\n    const { fixedDirection, nextAllMatrix } = datas;\r\n    const { allMatrix, is3d } = moveable.state;\r\n\r\n    return checkSizeDist(\r\n        moveable,\r\n        (widthOffset: number, heightOffset: number) => {\r\n            return getNextFixedPoses(\r\n                nextAllMatrix || allMatrix,\r\n                width + widthOffset,\r\n                height + heightOffset,\r\n                fixedDirection,\r\n                fixedPosition,\r\n                is3d\r\n            );\r\n        },\r\n        width,\r\n        height,\r\n        direction,\r\n        fixedPosition,\r\n        isRequest,\r\n        datas\r\n    );\r\n}\r\nexport function checkSnapScale(\r\n    moveable: MoveableManagerInterface<ScalableProps, any>,\r\n    scale: number[],\r\n    direction: number[],\r\n    isRequest: boolean,\r\n    datas: any\r\n) {\r\n    if (!hasGuidelines(moveable, \"scalable\")) {\r\n        return [0, 0];\r\n    }\r\n    const { startOffsetWidth, startOffsetHeight, fixedPosition, fixedDirection, is3d } = datas;\r\n    const sizeDist = checkSizeDist(\r\n        moveable,\r\n        (widthOffset: number, heightOffset: number) => {\r\n            return getNextFixedPoses(\r\n                scaleMatrix(\r\n                    datas,\r\n                    plus(scale, [widthOffset / startOffsetWidth, heightOffset / startOffsetHeight]),\r\n                ),\r\n                startOffsetWidth,\r\n                startOffsetHeight,\r\n                fixedDirection,\r\n                fixedPosition,\r\n                is3d\r\n            );\r\n        },\r\n        startOffsetWidth,\r\n        startOffsetHeight,\r\n        direction,\r\n        fixedPosition,\r\n        isRequest,\r\n        datas\r\n    );\r\n    return [sizeDist[0] / startOffsetWidth, sizeDist[1] / startOffsetHeight];\r\n}\r\n\r\nexport function startCheckSnapDrag(\r\n    moveable: MoveableManagerInterface<any, any>,\r\n    datas: any\r\n) {\r\n    datas.absolutePoses = getAbsolutePosesByState(moveable.state);\r\n}\r\n\r\n\r\n\r\nfunction getSnapGuidelines(posInfos: SnapPosInfo[]) {\r\n    const guidelines: Array<{ guideline: SnapGuideline, posInfo: SnapPosInfo }> = [];\r\n\r\n    posInfos.forEach((posInfo) => {\r\n        posInfo.guidelineInfos.forEach(({ guideline }) => {\r\n            if (find(guidelines, info => info.guideline === guideline)) {\r\n                return;\r\n            }\r\n            guideline.direction = \"\";\r\n            guidelines.push({ guideline, posInfo });\r\n        });\r\n    });\r\n\r\n    return guidelines.map(({ guideline, posInfo }) => {\r\n        return {\r\n            ...guideline,\r\n            direction: posInfo.direction,\r\n        };\r\n    });\r\n}\r\n\r\nfunction addBoundGuidelines(\r\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\r\n    verticalPoses: number[],\r\n    horizontalPoses: number[],\r\n    verticalSnapPoses: SnappableRenderType[],\r\n    horizontalSnapPoses: SnappableRenderType[],\r\n    externalBounds?: BoundType | false | null\r\n) {\r\n    const {\r\n        vertical: verticalBoundInfos,\r\n        horizontal: horizontalBoundInfos,\r\n    } = checkBoundPoses(\r\n        getBounds(moveable, externalBounds),\r\n        verticalPoses,\r\n        horizontalPoses\r\n    );\r\n\r\n    const boundMap = getInitialBounds();\r\n\r\n\r\n    verticalBoundInfos.forEach((info) => {\r\n        if (info.isBound) {\r\n            if (info.direction === \"start\") {\r\n                boundMap.left = true;\r\n            }\r\n            if (info.direction === \"end\") {\r\n                boundMap.right = true;\r\n            }\r\n            verticalSnapPoses.push({\r\n                type: \"bounds\",\r\n                pos: info.pos,\r\n            });\r\n        }\r\n    });\r\n    horizontalBoundInfos.forEach((info) => {\r\n        if (info.isBound) {\r\n            if (info.direction === \"start\") {\r\n                boundMap.top = true;\r\n            }\r\n            if (info.direction === \"end\") {\r\n                boundMap.bottom = true;\r\n            }\r\n            horizontalSnapPoses.push({\r\n                type: \"bounds\",\r\n                pos: info.pos,\r\n            });\r\n        }\r\n    });\r\n    const {\r\n        boundMap: innerBoundMap,\r\n        vertical: verticalInnerBoundPoses,\r\n        horizontal: horizontalInnerBoundPoses,\r\n    } = checkInnerBoundPoses(moveable);\r\n\r\n    verticalInnerBoundPoses.forEach((innerPos) => {\r\n        if (\r\n            findIndex(\r\n                verticalSnapPoses,\r\n                ({ type, pos }) => type === \"bounds\" && pos === innerPos\r\n            ) >= 0\r\n        ) {\r\n            return;\r\n        }\r\n        verticalSnapPoses.push({\r\n            type: \"bounds\",\r\n            pos: innerPos,\r\n        });\r\n    });\r\n\r\n    horizontalInnerBoundPoses.forEach((innerPos) => {\r\n        if (\r\n            findIndex(\r\n                horizontalSnapPoses,\r\n                ({ type, pos }) => type === \"bounds\" && pos === innerPos\r\n            ) >= 0\r\n        ) {\r\n            return;\r\n        }\r\n        horizontalSnapPoses.push({\r\n            type: \"bounds\",\r\n            pos: innerPos,\r\n        });\r\n    });\r\n\r\n    return {\r\n        boundMap,\r\n        innerBoundMap,\r\n    };\r\n}\r\n\r\nconst directionCondition = getDirectionCondition(\"\", [\"resizable\", \"scalable\"]);\r\n\r\n\r\nconst NAME_snapRotationThreshold = \"snapRotationThreshold\";\r\nconst NAME_snapRotationDegrees = \"snapRotationDegrees\";\r\n\r\n/**\r\n * @namespace Moveable.Snappable\r\n * @description Whether or not target can be snapped to the guideline. (default: false)\r\n * @sort 2\r\n */\r\nexport default {\r\n    name: \"snappable\",\r\n    dragRelation: \"strong\",\r\n    props: [\r\n        \"snappable\",\r\n        \"snapContainer\",\r\n        \"snapDirections\",\r\n        \"elementSnapDirections\",\r\n        \"snapGap\",\r\n        \"snapGridWidth\",\r\n        \"snapGridHeight\",\r\n        \"isDisplaySnapDigit\",\r\n        \"isDisplayInnerSnapDigit\",\r\n        \"isDisplayGridGuidelines\",\r\n        \"snapDigit\",\r\n        \"snapThreshold\",\r\n        \"snapRenderThreshold\",\r\n        \"snapGridAll\",\r\n        NAME_snapRotationThreshold,\r\n        NAME_snapRotationDegrees,\r\n        \"horizontalGuidelines\",\r\n        \"verticalGuidelines\",\r\n        \"elementGuidelines\",\r\n        \"bounds\",\r\n        \"innerBounds\",\r\n        \"snapDistFormat\",\r\n        \"maxSnapElementGuidelineDistance\",\r\n        \"maxSnapElementGapDistance\",\r\n    ] as const,\r\n    events: [\"snap\", \"bound\"] as const,\r\n    css: [\r\n        `:host {\r\n--bounds-color: #d66;\r\n}\r\n.guideline {\r\npointer-events: none;\r\nz-index: 2;\r\n}\r\n.guideline.bounds {\r\nbackground: #d66;\r\nbackground: var(--bounds-color);\r\n}\r\n.guideline-group {\r\nposition: absolute;\r\ntop: 0;\r\nleft: 0;\r\n}\r\n.guideline-group .size-value {\r\nposition: absolute;\r\ncolor: #f55;\r\nfont-size: 12px;\r\nfont-size: calc(12px * var(--zoom));\r\nfont-weight: bold;\r\n}\r\n.guideline-group.horizontal .size-value {\r\ntransform-origin: 50% 100%;\r\ntransform: translateX(-50%);\r\nleft: 50%;\r\nbottom: 5px;\r\nbottom: calc(2px + 3px * var(--zoom));\r\n}\r\n.guideline-group.vertical .size-value {\r\ntransform-origin: 0% 50%;\r\ntop: 50%;\r\ntransform: translateY(-50%);\r\nleft: 5px;\r\nleft: calc(2px + 3px * var(--zoom));\r\n}\r\n.guideline.gap {\r\nbackground: #f55;\r\n}\r\n.size-value.gap {\r\ncolor: #f55;\r\n}\r\n`,\r\n    ],\r\n    render(\r\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\r\n        React: Renderer\r\n    ): any[] {\r\n        const state = moveable.state;\r\n        const {\r\n            top: targetTop,\r\n            left: targetLeft,\r\n            pos1,\r\n            pos2,\r\n            pos3,\r\n            pos4,\r\n            snapRenderInfo,\r\n        } = state;\r\n        const {\r\n            snapRenderThreshold = 1,\r\n        } = moveable.props;\r\n\r\n        if (!snapRenderInfo || !snapRenderInfo.render || !hasGuidelines(moveable, \"\")) {\r\n            // reset store\r\n            watchValue(\r\n                moveable,\r\n                \"boundMap\",\r\n                getInitialBounds(),\r\n                v => JSON.stringify(v),\r\n            );\r\n            watchValue(\r\n                moveable,\r\n                \"innerBoundMap\",\r\n                getInitialBounds(),\r\n                v => JSON.stringify(v),\r\n            );\r\n            return [];\r\n        }\r\n        state.guidelines = getTotalGuidelines(moveable);\r\n\r\n\r\n        const minLeft = Math.min(pos1[0], pos2[0], pos3[0], pos4[0]);\r\n        const minTop = Math.min(pos1[1], pos2[1], pos3[1], pos4[1]);\r\n        const externalPoses = snapRenderInfo.externalPoses || [];\r\n        const poses = getAbsolutePosesByState(moveable.state);\r\n        const verticalSnapPoses: SnappableRenderType[] = [];\r\n        const horizontalSnapPoses: SnappableRenderType[] = [];\r\n        const verticalGuidelines: SnapGuideline[] = [];\r\n        const horizontalGuidelines: SnapGuideline[] = [];\r\n        const snapInfos: Array<{\r\n            vertical: SnapDirectionInfo;\r\n            horizontal: SnapDirectionInfo;\r\n        }> = [];\r\n        const { width, height, top, left, bottom, right } = getRect(poses);\r\n        const targetRect = { left, right, top, bottom, center: (left + right) / 2, middle: (top + bottom) / 2 };\r\n        const hasExternalPoses = externalPoses.length > 0;\r\n        const externalRect = hasExternalPoses\r\n            ? getRect(externalPoses)\r\n            : ({} as ReturnType<typeof getRect>);\r\n\r\n        if (!snapRenderInfo.request) {\r\n            if (snapRenderInfo.direction) {\r\n                snapInfos.push(\r\n                    getSnapInfosByDirection(\r\n                        moveable,\r\n                        poses,\r\n                        snapRenderInfo.direction,\r\n                        snapRenderThreshold,\r\n                    )\r\n                );\r\n            }\r\n            if (snapRenderInfo.snap) {\r\n                const rect = getRect(poses);\r\n                if (snapRenderInfo.center) {\r\n                    (rect as any).middle = (rect.top + rect.bottom) / 2;\r\n                    (rect as any).center = (rect.left + rect.right) / 2;\r\n                }\r\n                snapInfos.push(checkSnaps(moveable, rect, snapRenderThreshold));\r\n            }\r\n            if (hasExternalPoses) {\r\n                if (snapRenderInfo.center) {\r\n                    (externalRect as any).middle =\r\n                        (externalRect.top + externalRect.bottom) / 2;\r\n                    (externalRect as any).center =\r\n                        (externalRect.left + externalRect.right) / 2;\r\n                }\r\n                snapInfos.push(checkSnaps(moveable, externalRect, snapRenderThreshold));\r\n            }\r\n            snapInfos.forEach((snapInfo) => {\r\n                const {\r\n                    vertical: { posInfos: verticalPosInfos },\r\n                    horizontal: { posInfos: horizontalPosInfos },\r\n                } = snapInfo;\r\n                verticalSnapPoses.push(\r\n                    ...verticalPosInfos.filter(({ guidelineInfos }) => {\r\n                        return guidelineInfos.some(({ guideline }) => !guideline.hide);\r\n                    }).map(\r\n                        (posInfo) => ({\r\n                            type: \"snap\",\r\n                            pos: posInfo.pos,\r\n                        } as const)\r\n                    )\r\n                );\r\n                horizontalSnapPoses.push(\r\n                    ...horizontalPosInfos.filter(({ guidelineInfos }) => {\r\n                        return guidelineInfos.some(({ guideline }) => !guideline.hide);\r\n                    }).map(\r\n                        (posInfo) => ({\r\n                            type: \"snap\",\r\n                            pos: posInfo.pos,\r\n                        } as const)\r\n                    )\r\n                );\r\n\r\n                verticalGuidelines.push(...getSnapGuidelines(verticalPosInfos));\r\n                horizontalGuidelines.push(...getSnapGuidelines(horizontalPosInfos));\r\n            });\r\n        }\r\n\r\n        const {\r\n            boundMap,\r\n            innerBoundMap,\r\n        } = addBoundGuidelines(\r\n            moveable,\r\n            [left, right],\r\n            [top, bottom],\r\n            verticalSnapPoses,\r\n            horizontalSnapPoses\r\n        );\r\n        if (hasExternalPoses) {\r\n            addBoundGuidelines(\r\n                moveable,\r\n                [externalRect.left, externalRect.right],\r\n                [externalRect.top, externalRect.bottom],\r\n                verticalSnapPoses,\r\n                horizontalSnapPoses,\r\n                snapRenderInfo.externalBounds\r\n            );\r\n        }\r\n        const allGuidelines = [...verticalGuidelines, ...horizontalGuidelines];\r\n        const elementGuidelines = allGuidelines.filter(guideline => guideline.element && !guideline.gapRects);\r\n        const gapGuidelines = allGuidelines.filter(guideline => guideline.gapRects).sort((a, b) => {\r\n            return a.gap! - b.gap!;\r\n        });\r\n\r\n        triggerEvent(\r\n            moveable,\r\n            \"onSnap\",\r\n            {\r\n                guidelines: allGuidelines.filter(({ element }) => !element),\r\n                elements: elementGuidelines,\r\n                gaps: gapGuidelines,\r\n            },\r\n            true\r\n        );\r\n\r\n        const nextBoundMap = watchValue(\r\n            moveable,\r\n            \"boundMap\",\r\n            boundMap,\r\n            v => JSON.stringify(v),\r\n            getInitialBounds(),\r\n        );\r\n        const nextInnerBoundMap = watchValue(\r\n            moveable,\r\n            \"innerBoundMap\",\r\n            innerBoundMap,\r\n            v => JSON.stringify(v),\r\n            getInitialBounds(),\r\n        );\r\n\r\n        if (boundMap === nextBoundMap || innerBoundMap === nextInnerBoundMap) {\r\n            triggerEvent(\r\n                moveable,\r\n                \"onBound\",\r\n                {\r\n                    bounds: boundMap,\r\n                    innerBounds: innerBoundMap,\r\n                },\r\n                true\r\n            );\r\n        }\r\n\r\n\r\n\r\n        // verticalSnapPoses.\r\n        return [\r\n            ...renderDashedGuidelines(\r\n                moveable,\r\n                elementGuidelines,\r\n                [minLeft, minTop],\r\n                targetRect,\r\n                React,\r\n            ),\r\n            ...renderGapGuidelines(\r\n                moveable,\r\n                gapGuidelines,\r\n                [minLeft, minTop],\r\n                targetRect,\r\n                React,\r\n            ),\r\n            ...renderGuidelines(\r\n                moveable,\r\n                \"horizontal\",\r\n                horizontalGuidelines,\r\n                [targetLeft, targetTop],\r\n                targetRect,\r\n                React\r\n            ),\r\n            ...renderGuidelines(\r\n                moveable,\r\n                \"vertical\",\r\n                verticalGuidelines,\r\n                [targetLeft, targetTop],\r\n                targetRect,\r\n                React\r\n            ),\r\n            ...renderSnapPoses(\r\n                moveable,\r\n                \"horizontal\",\r\n                horizontalSnapPoses,\r\n                minLeft,\r\n                targetTop,\r\n                width,\r\n                0,\r\n                React\r\n            ),\r\n            ...renderSnapPoses(\r\n                moveable,\r\n                \"vertical\",\r\n                verticalSnapPoses,\r\n                minTop,\r\n                targetLeft,\r\n                height,\r\n                1,\r\n                React\r\n            ),\r\n        ];\r\n    },\r\n    dragStart(\r\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\r\n        e: any\r\n    ) {\r\n        moveable.state.snapRenderInfo = {\r\n            request: e.isRequest,\r\n            snap: true,\r\n            center: true,\r\n        };\r\n        checkSnapInfo(moveable);\r\n    },\r\n    drag(\r\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\r\n    ) {\r\n        const state = moveable.state;\r\n        if (!checkSnapInfo(moveable)) {\r\n            state.guidelines = getTotalGuidelines(moveable);\r\n        }\r\n        if (state.snapRenderInfo) {\r\n            state.snapRenderInfo.render = true;\r\n        }\r\n    },\r\n    pinchStart(\r\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\r\n    ) {\r\n        this.unset(moveable);\r\n    },\r\n    dragEnd(\r\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\r\n    ) {\r\n        this.unset(moveable);\r\n    },\r\n    dragControlCondition(moveable: MoveableManagerInterface, e: any) {\r\n        if (directionCondition(moveable, e) || rotatableDragControlCondtion(moveable, e)) {\r\n            return true;\r\n        }\r\n        if (!e.isRequest && e.inputEvent) {\r\n            return hasClass(e.inputEvent.target, prefix(\"snap-control\"));\r\n        }\r\n    },\r\n    dragControlStart(\r\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\r\n    ) {\r\n        moveable.state.snapRenderInfo = null;\r\n        checkSnapInfo(moveable);\r\n    },\r\n    dragControl(\r\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\r\n    ) {\r\n        this.drag(moveable);\r\n    },\r\n    dragControlEnd(\r\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\r\n    ) {\r\n        this.unset(moveable);\r\n    },\r\n    dragGroupStart(moveable: any, e: any) {\r\n        this.dragStart(moveable, e);\r\n    },\r\n    dragGroup(\r\n        moveable: MoveableGroupInterface<SnappableProps, SnappableState>\r\n    ) {\r\n        this.drag(moveable);\r\n    },\r\n    dragGroupEnd(\r\n        moveable: MoveableGroupInterface<SnappableProps, SnappableState>\r\n    ) {\r\n        this.unset(moveable);\r\n    },\r\n    dragGroupControlStart(\r\n        moveable: MoveableGroupInterface<SnappableProps, SnappableState>\r\n    ) {\r\n        moveable.state.snapRenderInfo = null;\r\n        checkSnapInfo(moveable);\r\n    },\r\n    dragGroupControl(\r\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\r\n    ) {\r\n        this.drag(moveable);\r\n    },\r\n    dragGroupControlEnd(\r\n        moveable: MoveableGroupInterface<SnappableProps, SnappableState>\r\n    ) {\r\n        this.unset(moveable);\r\n    },\r\n    unset(moveable: any) {\r\n        const state = moveable.state;\r\n\r\n        state.enableSnap = false;\r\n        state.guidelines = [];\r\n        state.snapRenderInfo = null;\r\n        state.elementRects = [];\r\n    },\r\n};\r\n\r\n\r\n/**\r\n * Whether or not target can be snapped to the guideline. (default: false)\r\n * @name Moveable.Snappable#snappable\r\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body);\r\n *\r\n * moveable.snappable = true;\r\n */\r\n/**\r\n *  A snap container that is the basis for snap, bounds, and innerBounds. (default: null = container)\r\n * @name Moveable.Snappable#snapContainer\r\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.querySelector(\".container\"));\r\n *\r\n * moveable.snapContainer = document.body;\r\n */\r\n/**\r\n * You can specify the directions to snap to the target. (default: { left: true, top: true, right: true, bottom: true })\r\n * @name Moveable.Snappable#snapDirections\r\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *   snappable: true,\r\n *   snapDirections: true,\r\n * });\r\n * // snap center\r\n * moveable.snapDirections = { left: true, top: true, right: true, bottom: true, center: true, middle: true };\r\n */\r\n\r\n/**\r\n * You can specify the snap directions of elements. (default: { left: true, ftrue, right: true, bottom: true })\r\n * @name Moveable.Snappable#elementSnapDirections\r\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *   snappable: true,\r\n *   elementSnapDirections: true,\r\n * });\r\n * // snap center\r\n * moveable.elementSnapDirections = { left: true, top: true, right: true, bottom: true, center: true, middle: true };\r\n */\r\n/**\r\n * When you drag, make the gap snap in the element guidelines. (default: true)\r\n * @name Moveable.Snappable#snapGap\r\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *   snappable: true,\r\n *   snapElement: true,\r\n *   snapGap: true,\r\n * });\r\n *\r\n * moveable.snapGap = false;\r\n */\r\n/**\r\n * Distance value that can snap to guidelines. (default: 5)\r\n * @name Moveable.Snappable#snapThreshold\r\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body);\r\n *\r\n * moveable.snapThreshold = 5;\r\n */\r\n\r\n/**\r\n * Add guidelines in the horizontal direction. (default: [])\r\n * @name Moveable.Snappable#horizontalGuidelines\r\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body);\r\n *\r\n * moveable.horizontalGuidelines = [100, 200, 500];\r\n */\r\n\r\n/**\r\n * Add guidelines in the vertical direction. (default: [])\r\n * @name Moveable.Snappable#verticalGuidelines\r\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body);\r\n *\r\n * moveable.verticalGuidelines = [100, 200, 500];\r\n */\r\n/**\r\n * Add guidelines for the element. (default: [])\r\n * @name Moveable.Snappable#elementGuidelines\r\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body);\r\n *\r\n * moveable.elementGuidelines = [\r\n *   document.querySelector(\".element\"),\r\n * ];\r\n */\r\n/**\r\n * You can set up boundaries.\r\n * @name Moveable.Snappable#bounds\r\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\r\n * @default null\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body);\r\n *\r\n * moveable.bounds = { left: 0, right: 1000, top: 0, bottom: 1000};\r\n */\r\n/**\r\n * You can set up inner boundaries.\r\n * @name Moveable.Snappable#innerBounds\r\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\r\n * @default null\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body);\r\n *\r\n * moveable.innerBounds = { left: 500, top: 500, width: 100, height: 100};\r\n */\r\n/**\r\n * snap distance digits (default: 0)\r\n * @name Moveable.Snappable#snapDigit\r\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body);\r\n *\r\n * moveable.snapDigit = 0\r\n */\r\n\r\n/**\r\n * If width size is greater than 0, you can vertical snap to the grid. (default: 0)\r\n * @name Moveable.Snappable#snapGridWidth\r\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body);\r\n *\r\n * moveable.snapGridWidth = 5;\r\n */\r\n\r\n/**\r\n * If height size is greater than 0, you can horizontal snap to the grid. (default: 0)\r\n * @name Moveable.Snappable#snapGridHeight\r\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body);\r\n *\r\n * moveable.snapGridHeight = 5;\r\n */\r\n/**\r\n * Whether to show snap distance (default: true)\r\n * @name Moveable.Snappable#isDisplaySnapDigit\r\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body);\r\n *\r\n * moveable.isDisplaySnapDigit = true;\r\n */\r\n\r\n/**\r\n * Whether to show element inner snap distance (default: false)\r\n * @name Moveable.Snappable#isDisplayInnerSnapDigit\r\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body);\r\n *\r\n * moveable.isDisplayInnerSnapDigit = true;\r\n */\r\n\r\n\r\n/**\r\n * You can set the text format of the distance shown in the guidelines. (default: self)\r\n * @name Moveable.Snappable#snapDistFormat\r\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *  snappable: true,\r\n *  snapDistFormat: (v, type) => v,\r\n * });\r\n * moveable.snapDistFormat = (v, type) => `${v}px`;\r\n */\r\n\r\n/**\r\n * When you drag or dragControl, the `snap` event is called.\r\n * @memberof Moveable.Snappable\r\n * @event snap\r\n * @param {Moveable.Snappable.OnSnap} - Parameters for the `snap` event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     snappable: true\r\n * });\r\n * moveable.on(\"snap\", e => {\r\n *     console.log(\"onSnap\", e);\r\n * });\r\n */\r\n","import { PREFIX, IS_WEBKIT605, TINY_NUM } from \"./consts\";\r\nimport { prefixNames } from \"framework-utils\";\r\nimport {\r\n    isUndefined, isObject, splitUnit,\r\n    IObject, hasClass, isArray, isString, getRad,\r\n    isFunction, convertUnitSize, between, getKeys, decamelize, isNumber,\r\n    getDocumentBody,\r\n    getDocumentElement,\r\n    getWindow,\r\n    isNode,\r\n    isWindow,\r\n    counter,\r\n} from \"@daybrush/utils\";\r\nimport {\r\n    multiply, invert,\r\n    convertDimension, createIdentityMatrix,\r\n    createOriginMatrix, convertPositionMatrix, calculate,\r\n    multiplies,\r\n    minus,\r\n    createScaleMatrix,\r\n    plus,\r\n    convertMatrixtoCSS,\r\n    rotate,\r\n} from \"@scena/matrix\";\r\nimport {\r\n    MoveableManagerState, Able, MoveableClientRect,\r\n    MoveableProps, ArrayFormat, MoveableRefType,\r\n    MatrixInfo, ExcludeEndParams, ExcludeParams,\r\n    ElementSizes, TransformObject,\r\n    MoveableRefTargetsResultType, MoveableRefTargetType, MoveableManagerInterface, CSSObject, PaddingBox,\r\n} from \"./types\";\r\nimport { parse, toMat, calculateMatrixDist, parseMat } from \"css-to-mat\";\r\nimport { getBeforeRenderableDatas, getDragDist } from \"./gesto/GestoUtils\";\r\nimport { getGestoData } from \"./gesto/GestoData\";\r\nimport { GetStyle, getCachedStyle } from \"./store/Store\";\r\nimport { normalized } from \"./ables/Snappable\";\r\n\r\nexport function round(num: number) {\r\n    return Math.round(num);\r\n}\r\nexport function multiply2(pos1: number[], pos2: number[]) {\r\n    return [\r\n        pos1[0] * pos2[0],\r\n        pos1[1] * pos2[1],\r\n    ];\r\n}\r\nexport function prefix(...classNames: string[]) {\r\n    return prefixNames(PREFIX, ...classNames);\r\n}\r\n\r\nexport function defaultSync(fn: () => void) {\r\n    fn();\r\n}\r\n\r\nexport function createIdentityMatrix3() {\r\n    return createIdentityMatrix(3);\r\n}\r\n\r\nexport function getTransformMatrix(transform: string | number[]) {\r\n    if (!transform || transform === \"none\") {\r\n        return [1, 0, 0, 1, 0, 0];\r\n\r\n    }\r\n    if (isObject(transform)) {\r\n        return transform;\r\n    }\r\n    return parseMat(transform);\r\n}\r\nexport function getAbsoluteMatrix(matrix: number[], n: number, origin: number[]) {\r\n    return multiplies(\r\n        n,\r\n        createOriginMatrix(origin, n),\r\n        matrix,\r\n        createOriginMatrix(origin.map(a => -a), n),\r\n    );\r\n}\r\nexport function measureSVGSize(el: SVGElement, unit: string, isHorizontal: boolean) {\r\n    if (unit === \"%\") {\r\n        const viewBox = getSVGViewBox(el.ownerSVGElement!);\r\n\r\n        return viewBox[isHorizontal ? \"width\" : \"height\"] / 100;\r\n    }\r\n    return 1;\r\n}\r\nexport function getBeforeTransformOrigin(el: SVGElement) {\r\n    const relativeOrigin = getTransformOrigin(getComputedStyle(el, \":before\"));\r\n\r\n    return relativeOrigin.map((o, i) => {\r\n        const { value, unit } = splitUnit(o);\r\n\r\n        return value * measureSVGSize(el, unit, i === 0);\r\n    });\r\n}\r\nexport function getTransformOriginArray(transformOrigin: string) {\r\n    return transformOrigin ? transformOrigin.split(\" \") : [\"0\", \"0\"];\r\n}\r\nexport function getTransformOrigin(style: CSSStyleDeclaration) {\r\n    return getTransformOriginArray(style.transformOrigin);\r\n}\r\nexport function getElementTransform(\r\n    target: HTMLElement | SVGElement,\r\n): string {\r\n    const getStyle = getCachedStyle(target);\r\n    const computedTransform = getStyle(\"transform\");\r\n\r\n    if (computedTransform && computedTransform !== \"none\") {\r\n        return computedTransform;\r\n    }\r\n    if (\"transform\" in target) {\r\n        const list = (target as any).transform as SVGAnimatedTransformList;\r\n        const baseVal = list.baseVal;\r\n\r\n        if (!baseVal) {\r\n            return \"\";\r\n        }\r\n        const length = baseVal.length;\r\n\r\n        if (!length) {\r\n            return \"\";\r\n        }\r\n\r\n        const matrixes: string[] = [];\r\n\r\n        for (let i = 0; i < length; ++i) {\r\n            const matrix = baseVal[i].matrix;\r\n\r\n            matrixes.push(`matrix(${([\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"] as const).map(chr => matrix[chr]).join(\", \")})`);\r\n        }\r\n        return matrixes.join(\" \");\r\n\r\n    }\r\n    return \"\";\r\n}\r\n\r\nexport function getOffsetInfo(\r\n    el: SVGElement | HTMLElement | null | undefined,\r\n    lastParent: SVGElement | HTMLElement | null | undefined,\r\n    isParent?: boolean,\r\n    checkZoom?: boolean,\r\n    getTargetStyle?: GetStyle,\r\n) {\r\n\r\n    const documentElement = getDocumentElement(el!) || getDocumentBody(el!);\r\n    let hasSlot = false;\r\n    let target: HTMLElement | SVGElement | null | undefined;\r\n    let parentSlotElement: HTMLElement | null | undefined;\r\n\r\n    if (!el || isParent) {\r\n        target = el;\r\n    } else {\r\n        const assignedSlotParentElement = el?.assignedSlot?.parentElement;\r\n        const parentElement = el.parentElement;\r\n\r\n        if (assignedSlotParentElement) {\r\n            hasSlot = true;\r\n            parentSlotElement = parentElement;\r\n            target = assignedSlotParentElement;\r\n        } else {\r\n            target = parentElement;\r\n        }\r\n    }\r\n\r\n    let isCustomElement = false;\r\n    let isEnd = el === lastParent || target === lastParent;\r\n    let position = \"relative\";\r\n    let offsetZoom = 1;\r\n\r\n\r\n    const targetZoom = parseFloat(getTargetStyle?.(\"zoom\")) || 1;\r\n    const targetPosition = getTargetStyle?.(\"position\");\r\n\r\n\r\n\r\n    while (target && target !== documentElement) {\r\n        if (lastParent === target) {\r\n            isEnd = true;\r\n        }\r\n        const getStyle = getCachedStyle(target);\r\n        const tagName = target.tagName.toLowerCase();\r\n        const transform = getElementTransform(target as SVGElement);\r\n        const willChange = getStyle(\"willChange\");\r\n        const zoom = parseFloat(getStyle(\"zoom\")) || 1;\r\n\r\n        position = getStyle(\"position\");\r\n        if (checkZoom && zoom !== 1) {\r\n            offsetZoom = zoom;\r\n            break;\r\n        }\r\n        if (\r\n            // offsetParent is the parentElement if the target's zoom is not 1 and not absolute.\r\n            !isParent && checkZoom && targetZoom !== 1 && targetPosition && targetPosition !== \"absolute\"\r\n            || tagName === \"svg\"\r\n            || position !== \"static\"\r\n            || (transform && transform !== \"none\")\r\n            || willChange === \"transform\"\r\n        ) {\r\n            break;\r\n        }\r\n        const slotParentNode = el?.assignedSlot?.parentNode;\r\n        const targetParentNode = target.parentNode;\r\n\r\n        if (slotParentNode) {\r\n            hasSlot = true;\r\n            parentSlotElement = targetParentNode as HTMLElement;\r\n        }\r\n        const parentNode = targetParentNode;\r\n\r\n        if (parentNode && parentNode.nodeType === 11) {\r\n            // Shadow Root\r\n            target = (parentNode as ShadowRoot).host as HTMLElement;\r\n            isCustomElement = true;\r\n            position = getCachedStyle(target)(\"position\");\r\n            break;\r\n        }\r\n        target = parentNode as HTMLElement | SVGElement;\r\n        position = \"relative\";\r\n    }\r\n    return {\r\n        offsetZoom,\r\n        hasSlot,\r\n        parentSlotElement,\r\n        isCustomElement,\r\n        isStatic: position === \"static\",\r\n        isEnd: isEnd || !target || target === documentElement,\r\n        offsetParent: target as HTMLElement || documentElement,\r\n    };\r\n}\r\n\r\nexport function getOffsetPosInfo(\r\n    el: HTMLElement | SVGElement,\r\n    target: HTMLElement | SVGElement,\r\n) {\r\n    const tagName = el.tagName.toLowerCase();\r\n    let offsetLeft = (el as HTMLElement).offsetLeft;\r\n    let offsetTop = (el as HTMLElement).offsetTop;\r\n    const getStyle = getCachedStyle(el);\r\n    // svg\r\n    const isSVG = isUndefined(offsetLeft);\r\n    let hasOffset = !isSVG;\r\n    let origin: number[];\r\n    let targetOrigin: number[];\r\n    // inner svg element\r\n    if (!hasOffset && (tagName !== \"svg\" || (target as SVGElement).ownerSVGElement)) {\r\n        origin = IS_WEBKIT605\r\n            ? getBeforeTransformOrigin(el as SVGElement)\r\n            : getTransformOriginArray(getStyle(\"transformOrigin\")).map(pos => parseFloat(pos));\r\n\r\n        targetOrigin = origin.slice();\r\n        hasOffset = true;\r\n\r\n        if (tagName === \"svg\") {\r\n            offsetLeft = 0;\r\n            offsetTop = 0;\r\n        } else {\r\n            [\r\n                offsetLeft, offsetTop, origin[0], origin[1],\r\n            ] = getSVGGraphicsOffset(\r\n                el as SVGGraphicsElement,\r\n                origin,\r\n                el === target && target.tagName.toLowerCase() === \"g\",\r\n            );\r\n        }\r\n    } else {\r\n        origin = getTransformOriginArray(getStyle(\"transformOrigin\")).map(pos => parseFloat(pos));\r\n        targetOrigin = origin.slice();\r\n    }\r\n    return {\r\n        tagName,\r\n        isSVG,\r\n        hasOffset,\r\n        offset: [offsetLeft || 0, offsetTop || 0],\r\n        origin,\r\n        targetOrigin,\r\n    };\r\n}\r\nexport function getBodyOffset(\r\n    el: HTMLElement | SVGElement,\r\n    isSVG: boolean,\r\n) {\r\n    const getStyle = getCachedStyle(el);\r\n    const getBodyStyle = getCachedStyle(getDocumentBody(el));\r\n    const bodyPosition = getBodyStyle(\"position\");\r\n    if (!isSVG && (!bodyPosition || bodyPosition === \"static\")) {\r\n        return [0, 0];\r\n    }\r\n\r\n    let marginLeft = parseInt(getBodyStyle(\"marginLeft\"), 10);\r\n    let marginTop = parseInt(getBodyStyle(\"marginTop\"), 10);\r\n\r\n    if (getStyle(\"position\") === \"absolute\") {\r\n        if (getStyle(\"top\") !== \"auto\" || getStyle(\"bottom\") !== \"auto\") {\r\n            marginTop = 0;\r\n        }\r\n        if (getStyle(\"left\") !== \"auto\" || getStyle(\"right\") !== \"auto\") {\r\n            marginLeft = 0;\r\n        }\r\n    }\r\n\r\n    return [marginLeft, marginTop];\r\n}\r\nexport function convert3DMatrixes(matrixes: MatrixInfo[]) {\r\n    matrixes.forEach(info => {\r\n        const matrix = info.matrix;\r\n\r\n        if (matrix) {\r\n            info.matrix = convertDimension(matrix, 3, 4);\r\n        }\r\n    });\r\n}\r\n\r\nexport function getPositionFixedInfo(el: HTMLElement | SVGElement) {\r\n    let fixedContainer = el.parentElement;\r\n    let hasTransform = false;\r\n    const body = getDocumentBody(el);\r\n\r\n    while (fixedContainer) {\r\n        const transform = getComputedStyle(fixedContainer).transform;\r\n\r\n\r\n        if (transform && transform !== \"none\") {\r\n            hasTransform = true;\r\n            break;\r\n        }\r\n        if (fixedContainer === body) {\r\n            break;\r\n        }\r\n        fixedContainer = fixedContainer.parentElement;\r\n    }\r\n\r\n    return {\r\n        fixedContainer: fixedContainer || body,\r\n        hasTransform,\r\n    };\r\n}\r\n\r\nexport function makeMatrixCSS(matrix: number[], is3d: boolean = matrix.length > 9) {\r\n    return `${is3d ? \"matrix3d\" : \"matrix\"}(${convertMatrixtoCSS(matrix, !is3d).join(\",\")})`;\r\n}\r\nexport function getSVGViewBox(el: SVGSVGElement) {\r\n    const clientWidth = el.clientWidth;\r\n    const clientHeight = el.clientHeight;\r\n\r\n    if (!el) {\r\n        return { x: 0, y: 0, width: 0, height: 0, clientWidth, clientHeight };\r\n    }\r\n    const viewBox = el.viewBox;\r\n    const baseVal = (viewBox && viewBox.baseVal) || { x: 0, y: 0, width: 0, height: 0 };\r\n\r\n    return {\r\n        x: baseVal.x,\r\n        y: baseVal.y,\r\n        width: baseVal.width || clientWidth,\r\n        height: baseVal.height || clientHeight,\r\n        clientWidth,\r\n        clientHeight,\r\n    };\r\n}\r\nexport function getSVGMatrix(\r\n    el: SVGSVGElement,\r\n    n: number,\r\n) {\r\n    const {\r\n        width: viewBoxWidth,\r\n        height: viewBoxHeight,\r\n        clientWidth,\r\n        clientHeight,\r\n    } = getSVGViewBox(el);\r\n    const scaleX = clientWidth / viewBoxWidth;\r\n    const scaleY = clientHeight / viewBoxHeight;\r\n\r\n    const preserveAspectRatio = el.preserveAspectRatio.baseVal;\r\n    // https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/preserveAspectRatio\r\n    const align = preserveAspectRatio.align;\r\n    // 1 : meet 2: slice\r\n    const meetOrSlice = preserveAspectRatio.meetOrSlice;\r\n    const svgOrigin = [0, 0];\r\n    const scale = [scaleX, scaleY];\r\n    const translate = [0, 0];\r\n\r\n    if (align !== 1) {\r\n        const xAlign = (align - 2) % 3;\r\n        const yAlign = Math.floor((align - 2) / 3);\r\n\r\n        svgOrigin[0] = viewBoxWidth * xAlign / 2;\r\n        svgOrigin[1] = viewBoxHeight * yAlign / 2;\r\n\r\n        const scaleDimension = meetOrSlice === 2 ? Math.max(scaleY, scaleX) : Math.min(scaleX, scaleY);\r\n\r\n        scale[0] = scaleDimension;\r\n        scale[1] = scaleDimension;\r\n\r\n        translate[0] = (clientWidth - viewBoxWidth) / 2 * xAlign;\r\n        translate[1] = (clientHeight - viewBoxHeight) / 2 * yAlign;\r\n    }\r\n    const scaleMatrix = createScaleMatrix(scale, n);\r\n    [\r\n        scaleMatrix[n * (n - 1)],\r\n        scaleMatrix[n * (n - 1) + 1],\r\n    ] = translate;\r\n\r\n    return getAbsoluteMatrix(\r\n        scaleMatrix,\r\n        n,\r\n        svgOrigin,\r\n    );\r\n}\r\nexport function getSVGGraphicsOffset(\r\n    el: SVGGraphicsElement,\r\n    origin: number[],\r\n    isGTarget?: boolean,\r\n) {\r\n    if (!el.getBBox || !isGTarget && el.tagName.toLowerCase() === \"g\") {\r\n        return [0, 0, 0, 0];\r\n    }\r\n    const getStyle = getCachedStyle(el);\r\n    const isFillBox = getStyle(\"transform-box\") === \"fill-box\";\r\n\r\n    const bbox = el.getBBox();\r\n    const viewBox = getSVGViewBox(el.ownerSVGElement!);\r\n    const left = bbox.x - viewBox.x;\r\n    const top = bbox.y - viewBox.y;\r\n    const originX = isFillBox ? origin[0] : origin[0] - left;\r\n    const originY = isFillBox ? origin[1] : origin[1] - top;\r\n\r\n    return [left, top, originX, originY];\r\n}\r\nexport function calculatePosition(matrix: number[], pos: number[], n: number) {\r\n    return calculate(matrix, convertPositionMatrix(pos, n), n);\r\n}\r\nexport function calculatePoses(matrix: number[], width: number, height: number, n: number) {\r\n    return [[0, 0], [width, 0], [0, height], [width, height]].map(pos => calculatePosition(matrix, pos, n));\r\n}\r\nexport function getRect(poses: number[][]) {\r\n    const posesX = poses.map(pos => pos[0]);\r\n    const posesY = poses.map(pos => pos[1]);\r\n    const left = Math.min(...posesX);\r\n    const top = Math.min(...posesY);\r\n    const right = Math.max(...posesX);\r\n    const bottom = Math.max(...posesY);\r\n    const rectWidth = right - left;\r\n    const rectHeight = bottom - top;\r\n\r\n    return {\r\n        left, top,\r\n        right, bottom,\r\n        width: rectWidth,\r\n        height: rectHeight,\r\n    };\r\n}\r\nexport function calculateRect(matrix: number[], width: number, height: number, n: number) {\r\n    const poses = calculatePoses(matrix, width, height, n);\r\n\r\n    return getRect(poses);\r\n}\r\nexport function getSVGOffset(\r\n    offsetInfo: MatrixInfo,\r\n    targetInfo: MatrixInfo,\r\n    container: HTMLElement | SVGElement,\r\n    n: number,\r\n    beforeMatrix: number[],\r\n) {\r\n    const target = offsetInfo.target;\r\n    const origin = offsetInfo.origin!;\r\n    const targetMatrix = targetInfo.matrix!;\r\n    const {\r\n        offsetWidth: width,\r\n        offsetHeight: height,\r\n    } = getSize(target);\r\n    const containerClientRect = container.getBoundingClientRect();\r\n    let margin = [0, 0];\r\n\r\n    if (container === getDocumentBody(container)) {\r\n        margin = getBodyOffset(target, true);\r\n    }\r\n\r\n    const rect = target.getBoundingClientRect();\r\n    const rectLeft\r\n        = rect.left - containerClientRect.left + container.scrollLeft\r\n        - (container.clientLeft || 0) + margin[0];\r\n    const rectTop\r\n        = rect.top - containerClientRect.top + container.scrollTop\r\n        - (container.clientTop || 0) + margin[1];\r\n    const rectWidth = rect.width;\r\n    const rectHeight = rect.height;\r\n\r\n    const mat = multiplies(\r\n        n,\r\n        beforeMatrix,\r\n        targetMatrix,\r\n    );\r\n    const {\r\n        left: prevLeft,\r\n        top: prevTop,\r\n        width: prevWidth,\r\n        height: prevHeight,\r\n    } = calculateRect(mat, width, height, n);\r\n    const posOrigin = calculatePosition(mat, origin, n);\r\n    const prevOrigin = minus(posOrigin, [prevLeft, prevTop]);\r\n    const rectOrigin = [\r\n        rectLeft + prevOrigin[0] * rectWidth / prevWidth,\r\n        rectTop + prevOrigin[1] * rectHeight / prevHeight,\r\n    ];\r\n    const offset = [0, 0];\r\n    let count = 0;\r\n\r\n    while (++count < 10) {\r\n        const inverseBeforeMatrix = invert(beforeMatrix, n);\r\n        [offset[0], offset[1]] = minus(\r\n            calculatePosition(inverseBeforeMatrix, rectOrigin, n),\r\n            calculatePosition(inverseBeforeMatrix, posOrigin, n),\r\n        );\r\n        const mat2 = multiplies(\r\n            n,\r\n            beforeMatrix,\r\n            createOriginMatrix(offset, n),\r\n            targetMatrix,\r\n        );\r\n        const {\r\n            left: nextLeft,\r\n            top: nextTop,\r\n        } = calculateRect(mat2, width, height, n);\r\n        const distLeft = nextLeft - rectLeft;\r\n        const distTop = nextTop - rectTop;\r\n\r\n        if (abs(distLeft) < 2 && abs(distTop) < 2) {\r\n            break;\r\n        }\r\n        rectOrigin[0] -= distLeft;\r\n        rectOrigin[1] -= distTop;\r\n    }\r\n    return offset.map(p => Math.round(p));\r\n}\r\n\r\nexport function calculateMoveableClientPositions(\r\n    rootMatrix: number[],\r\n    poses: number[][],\r\n    rootClientRect: MoveableClientRect,\r\n) {\r\n    const is3d = rootMatrix.length === 16;\r\n    const n = is3d ? 4 : 3;\r\n    const rootPoses = poses.map(pos => calculatePosition(rootMatrix, pos, n));\r\n    const { left, top } = rootClientRect;\r\n\r\n    return rootPoses.map(pos => {\r\n        return [pos[0] + left, pos[1] + top];\r\n    });\r\n\r\n}\r\n\r\nexport function getDistSize(vec: number[]) {\r\n    return Math.sqrt(vec[0] * vec[0] + vec[1] * vec[1]);\r\n}\r\nexport function getDiagonalSize(pos1: number[], pos2: number[]) {\r\n    return getDistSize([\r\n        pos2[0] - pos1[0],\r\n        pos2[1] - pos1[1],\r\n    ]);\r\n}\r\nexport function getLineStyle(pos1: number[], pos2: number[], zoom = 1, rad: number = getRad(pos1, pos2)) {\r\n    const width = getDiagonalSize(pos1, pos2);\r\n\r\n    return {\r\n        transform: `translateY(-50%) translate(${pos1[0]}px, ${pos1[1]}px) rotate(${rad}rad) scaleY(${zoom})`,\r\n        width: `${width}px`,\r\n    };\r\n}\r\nexport function getControlTransform(rotation: number, zoom: number, ...poses: number[][]) {\r\n    const length = poses.length;\r\n\r\n    const x = poses.reduce((prev, pos) => prev + pos[0], 0) / length;\r\n    const y = poses.reduce((prev, pos) => prev + pos[1], 0) / length;\r\n    return {\r\n        transform: `translateZ(0px) translate(${x}px, ${y}px) rotate(${rotation}rad) scale(${zoom})`,\r\n    };\r\n}\r\n\r\nexport function getProps<Props>(props: Props, ableName: keyof Props): Props {\r\n    const self = props[ableName];\r\n\r\n    if (isObject(self)) {\r\n        return {\r\n            ...props,\r\n            ...self,\r\n        };\r\n    }\r\n    return props;\r\n}\r\n\r\nexport function getSize(\r\n    target?: SVGElement | HTMLElement | null,\r\n): ElementSizes {\r\n    const hasOffset = target && !isUndefined((target as any).offsetWidth);\r\n\r\n    let offsetWidth = 0;\r\n    let offsetHeight = 0;\r\n    let clientWidth = 0;\r\n    let clientHeight = 0;\r\n    let cssWidth = 0;\r\n    let cssHeight = 0;\r\n    let contentWidth = 0;\r\n    let contentHeight = 0;\r\n\r\n    let minWidth = 0;\r\n    let minHeight = 0;\r\n    let minOffsetWidth = 0;\r\n    let minOffsetHeight = 0;\r\n\r\n    let maxWidth = Infinity;\r\n    let maxHeight = Infinity;\r\n    let maxOffsetWidth = Infinity;\r\n    let maxOffsetHeight = Infinity;\r\n    let inlineCSSWidth = 0;\r\n    let inlineCSSHeight = 0;\r\n    let svg = false;\r\n\r\n    if (target) {\r\n        if (!hasOffset && (target as SVGElement).ownerSVGElement) {\r\n            // check svg elements\r\n            const bbox = (target as SVGGraphicsElement).getBBox();\r\n\r\n            svg = true;\r\n            offsetWidth = bbox.width;\r\n            offsetHeight = bbox.height;\r\n            cssWidth = offsetWidth;\r\n            cssHeight = offsetHeight;\r\n            contentWidth = offsetWidth;\r\n            contentHeight = offsetHeight;\r\n            clientWidth = offsetWidth;\r\n            clientHeight = offsetHeight;\r\n        } else {\r\n            // check html elements\r\n            const getStyle = getCachedStyle(target);\r\n            const targetStyle = target.style;\r\n            const boxSizing = getStyle(\"boxSizing\") === \"border-box\";\r\n            const borderLeft = parseFloat(getStyle(\"borderLeftWidth\")) || 0;\r\n            const borderRight = parseFloat(getStyle(\"borderRightWidth\")) || 0;\r\n            const borderTop = parseFloat(getStyle(\"borderTopWidth\")) || 0;\r\n            const borderBottom = parseFloat(getStyle(\"borderBottomWidth\")) || 0;\r\n            const paddingLeft = parseFloat(getStyle(\"paddingLeft\")) || 0;\r\n            const paddingRight = parseFloat(getStyle(\"paddingRight\")) || 0;\r\n            const paddingTop = parseFloat(getStyle(\"paddingTop\")) || 0;\r\n            const paddingBottom = parseFloat(getStyle(\"paddingBottom\")) || 0;\r\n\r\n            const horizontalPadding = paddingLeft + paddingRight;\r\n            const verticalPadding = paddingTop + paddingBottom;\r\n            const horizontalBorder = borderLeft + borderRight;\r\n            const verticalBorder = borderTop + borderBottom;\r\n            const horizontalOffset = horizontalPadding + horizontalBorder;\r\n            const verticalOffset = verticalPadding + verticalBorder;\r\n            const position = getStyle(\"position\");\r\n\r\n            let containerWidth = 0;\r\n            let containerHeight = 0;\r\n\r\n            // SVGSVGElement, HTMLElement\r\n            if (\"clientLeft\" in target) {\r\n                let parentElement: HTMLElement | null = null;\r\n\r\n                if (position === \"absolute\") {\r\n                    const offsetInfo = getOffsetInfo(target, getDocumentBody(target));\r\n                    parentElement = offsetInfo.offsetParent;\r\n\r\n                } else {\r\n                    parentElement = target.parentElement;\r\n                }\r\n                if (parentElement) {\r\n                    const getParentStyle = getCachedStyle(parentElement);\r\n\r\n                    containerWidth = parseFloat(getParentStyle(\"width\"));\r\n                    containerHeight = parseFloat(getParentStyle(\"height\"));\r\n                }\r\n            }\r\n            minWidth = Math.max(\r\n                horizontalPadding,\r\n                convertUnitSize(getStyle(\"minWidth\"), containerWidth) || 0,\r\n            );\r\n            minHeight = Math.max(\r\n                verticalPadding,\r\n                convertUnitSize(getStyle(\"minHeight\"), containerHeight) || 0,\r\n            );\r\n            maxWidth = convertUnitSize(getStyle(\"maxWidth\"), containerWidth);\r\n            maxHeight = convertUnitSize(getStyle(\"maxHeight\"), containerHeight);\r\n\r\n            if (isNaN(maxWidth)) {\r\n                maxWidth = Infinity;\r\n            }\r\n            if (isNaN(maxHeight)) {\r\n                maxHeight = Infinity;\r\n            }\r\n            inlineCSSWidth = convertUnitSize(targetStyle.width, 0) || 0;\r\n            inlineCSSHeight = convertUnitSize(targetStyle.height, 0) || 0;\r\n            cssWidth = parseFloat(getStyle(\"width\")) || 0;\r\n            cssHeight = parseFloat(getStyle(\"height\")) || 0;\r\n\r\n\r\n            contentWidth = abs(cssWidth - inlineCSSWidth) < 1\r\n                ? between(minWidth, inlineCSSWidth || cssWidth, maxWidth)\r\n                : cssWidth;\r\n            contentHeight = abs(cssHeight - inlineCSSHeight) < 1\r\n                ? between(minHeight, inlineCSSHeight || cssHeight, maxHeight)\r\n                : cssHeight;\r\n\r\n            offsetWidth = contentWidth;\r\n            offsetHeight = contentHeight;\r\n            clientWidth = contentWidth;\r\n            clientHeight = contentHeight;\r\n\r\n            if (boxSizing) {\r\n                maxOffsetWidth = maxWidth;\r\n                maxOffsetHeight = maxHeight;\r\n                minOffsetWidth = minWidth;\r\n                minOffsetHeight = minHeight;\r\n                contentWidth = offsetWidth - horizontalOffset;\r\n                contentHeight = offsetHeight - verticalOffset;\r\n            } else {\r\n                maxOffsetWidth = maxWidth + horizontalOffset;\r\n                maxOffsetHeight = maxHeight + verticalOffset;\r\n                minOffsetWidth = minWidth + horizontalOffset;\r\n                minOffsetHeight = minHeight + verticalOffset;\r\n                offsetWidth = contentWidth + horizontalOffset;\r\n                offsetHeight = contentHeight + verticalOffset;\r\n            }\r\n            clientWidth = contentWidth + horizontalPadding;\r\n            clientHeight = contentHeight + verticalPadding;\r\n        }\r\n    }\r\n\r\n    return {\r\n        svg,\r\n        offsetWidth,\r\n        offsetHeight,\r\n        clientWidth,\r\n        clientHeight,\r\n        contentWidth,\r\n        contentHeight,\r\n        inlineCSSWidth,\r\n        inlineCSSHeight,\r\n        cssWidth,\r\n        cssHeight,\r\n        minWidth,\r\n        minHeight,\r\n        maxWidth,\r\n        maxHeight,\r\n        minOffsetWidth,\r\n        minOffsetHeight,\r\n        maxOffsetWidth,\r\n        maxOffsetHeight,\r\n    };\r\n}\r\nexport function getRotationRad(\r\n    poses: number[][],\r\n    direction: number,\r\n) {\r\n    return getRad(direction > 0 ? poses[0] : poses[1], direction > 0 ? poses[1] : poses[0]);\r\n}\r\n\r\nexport function resetClientRect(): MoveableClientRect {\r\n    return {\r\n        left: 0, top: 0,\r\n        width: 0, height: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        clientLeft: 0, clientTop: 0,\r\n        clientWidth: 0, clientHeight: 0,\r\n        scrollWidth: 0, scrollHeight: 0,\r\n    };\r\n}\r\n\r\nexport function getExtendsRect(\r\n    el: HTMLElement | SVGElement,\r\n    rect: MoveableClientRect,\r\n): MoveableClientRect {\r\n    const isRoot = el === getDocumentBody(el) || el === getDocumentElement(el);\r\n\r\n\r\n    const extendsRect = {\r\n        clientLeft: el.clientLeft,\r\n        clientTop: el.clientTop,\r\n        clientWidth: el.clientWidth,\r\n        clientHeight: el.clientHeight,\r\n        scrollWidth: el.scrollWidth,\r\n        scrollHeight: el.scrollHeight,\r\n        overflow: false,\r\n    };\r\n\r\n    if (isRoot) {\r\n        extendsRect.clientHeight = Math.max(rect.height, extendsRect.clientHeight);\r\n        extendsRect.scrollHeight = Math.max(rect.height, extendsRect.scrollHeight);\r\n    }\r\n\r\n    extendsRect.overflow = getCachedStyle(el)(\"overflow\") !== \"visible\";\r\n\r\n    return {\r\n        ...rect,\r\n        ...extendsRect,\r\n    };\r\n}\r\n\r\nexport function getClientRectByPosition(\r\n    position: { left: number, right: number, top: number, bottom: number },\r\n    base: MoveableClientRect,\r\n    el?: HTMLElement | SVGElement, isExtends?: boolean,\r\n) {\r\n    const {\r\n        left,\r\n        right,\r\n        top,\r\n        bottom,\r\n    } = position;\r\n    const baseTop = base.top;\r\n    const baseLeft = base.left;\r\n\r\n    const rect: MoveableClientRect = {\r\n        left: baseLeft + left,\r\n        top: baseTop + top,\r\n        right: baseLeft + right,\r\n        bottom: baseTop + bottom,\r\n        width: right - left,\r\n        height: bottom - top,\r\n    };\r\n\r\n\r\n    if (el && isExtends) {\r\n        return getExtendsRect(el, rect);\r\n    }\r\n    return rect;\r\n}\r\nexport function getClientRect(el: HTMLElement | SVGElement, isExtends?: boolean): MoveableClientRect {\r\n    let left = 0;\r\n    let top = 0;\r\n    let width = 0;\r\n    let height = 0;\r\n    // let isRoot = false;\r\n\r\n    if (el) {\r\n        const clientRect = el.getBoundingClientRect();\r\n\r\n        left = clientRect.left;\r\n        top = clientRect.top;\r\n        width = clientRect.width;\r\n        height = clientRect.height;\r\n    }\r\n\r\n    const rect: MoveableClientRect = {\r\n        left,\r\n        top,\r\n        width,\r\n        height,\r\n        right: left + width,\r\n        bottom: top + height,\r\n    };\r\n\r\n    if (el && isExtends) {\r\n        return getExtendsRect(el, rect);\r\n    }\r\n    return rect;\r\n}\r\n\r\n\r\nexport function getTotalOrigin(moveable: MoveableManagerInterface<any>) {\r\n    const {\r\n        groupable,\r\n        svgOrigin,\r\n    } = moveable.props;\r\n    const {\r\n        offsetWidth,\r\n        offsetHeight,\r\n        svg,\r\n        transformOrigin,\r\n    } = moveable.getState();\r\n\r\n    if (!groupable && svg && svgOrigin) {\r\n        return convertTransformOriginArray(svgOrigin, offsetWidth, offsetHeight);\r\n    }\r\n\r\n    return transformOrigin;\r\n}\r\n\r\n\r\nexport function getTotalDirection(\r\n    parentDirection: number[],\r\n    isPinch: boolean,\r\n    inputEvent: any,\r\n    datas: any,\r\n) {\r\n    let direction: number[] | undefined;\r\n\r\n    if (parentDirection) {\r\n        direction = parentDirection;\r\n    } else if (isPinch) {\r\n        direction = [0, 0];\r\n    } else {\r\n        const target = inputEvent.target;\r\n\r\n        direction = getDirection(target, datas);\r\n    }\r\n    return direction;\r\n}\r\nexport function getDirection(target: SVGElement | HTMLElement, datas: any) {\r\n    if (!target) {\r\n        return;\r\n    }\r\n    const deg = target.getAttribute(\"data-rotation\") || \"\";\r\n    const direciton = target.getAttribute(\"data-direction\")!;\r\n\r\n    datas.deg = deg;\r\n\r\n    if (!direciton) {\r\n        return;\r\n    }\r\n    const dir = [0, 0];\r\n\r\n    (direciton.indexOf(\"w\") > -1) && (dir[0] = -1);\r\n    (direciton.indexOf(\"e\") > -1) && (dir[0] = 1);\r\n    (direciton.indexOf(\"n\") > -1) && (dir[1] = -1);\r\n    (direciton.indexOf(\"s\") > -1) && (dir[1] = 1);\r\n\r\n    return dir;\r\n}\r\nexport function getAbsolutePoses(poses: number[][], dist: number[]) {\r\n    return [\r\n        plus(dist, poses[0]),\r\n        plus(dist, poses[1]),\r\n        plus(dist, poses[2]),\r\n        plus(dist, poses[3]),\r\n    ];\r\n}\r\nexport function getAbsolutePosesByState({\r\n    left,\r\n    top,\r\n    pos1,\r\n    pos2,\r\n    pos3,\r\n    pos4,\r\n}: {\r\n    left: number,\r\n    top: number,\r\n    pos1: number[],\r\n    pos2: number[],\r\n    pos3: number[],\r\n    pos4: number[],\r\n}) {\r\n    return getAbsolutePoses([pos1, pos2, pos3, pos4], [left, top]);\r\n}\r\n\r\nexport function roundSign(num: number) {\r\n    return Math.round(num % 1 === -0.5 ? num - 1 : num);\r\n}\r\n\r\nexport function unsetAbles(self: MoveableManagerInterface, isControl: boolean) {\r\n    self[isControl ? \"controlAbles\" : \"targetAbles\"].forEach(able => {\r\n        able.unset && able.unset(self);\r\n    });\r\n}\r\nexport function unsetGesto(self: MoveableManagerInterface, isControl: boolean) {\r\n    const gestoName = isControl ? \"controlGesto\" : \"targetGesto\";\r\n    const gesto = self[gestoName];\r\n\r\n    if (gesto?.isIdle() === false) {\r\n        unsetAbles(self, isControl);\r\n    }\r\n    gesto?.unset();\r\n    self[gestoName] = null as any;\r\n}\r\n\r\nexport function fillCSSObject(style: Record<string, any>, resolvedEvent?: any): CSSObject {\r\n    if (resolvedEvent) {\r\n        const originalDatas = getBeforeRenderableDatas(resolvedEvent);\r\n\r\n        originalDatas.nextStyle = {\r\n            ...originalDatas.nextStyle,\r\n            ...style,\r\n        };\r\n    }\r\n    return {\r\n        style,\r\n        cssText: getKeys(style).map(name => `${decamelize(name, \"-\")}: ${style[name]};`).join(\"\"),\r\n    };\r\n}\r\n\r\nexport function fillAfterTransform(\r\n    prevEvent: { style: Record<string, string>, transform: string },\r\n    nextEvent: { style: Record<string, string>, transform: string, afterTransform?: string },\r\n    resolvedEvent?: any\r\n): TransformObject {\r\n    const afterTransform = nextEvent.afterTransform || nextEvent.transform;\r\n\r\n    return {\r\n        ...fillCSSObject({\r\n            ...prevEvent.style,\r\n            ...nextEvent.style,\r\n            transform: afterTransform,\r\n        }, resolvedEvent),\r\n        afterTransform,\r\n        transform: prevEvent.transform,\r\n    };\r\n}\r\n\r\nexport function fillParams<T extends IObject<any>>(\r\n    moveable: any,\r\n    e: any,\r\n    params: ExcludeParams<T>,\r\n    isBeforeEvent?: boolean,\r\n): T {\r\n    const datas = e.datas;\r\n\r\n    if (!datas.datas) {\r\n        datas.datas = {};\r\n    }\r\n    const nextParams = {\r\n        ...params,\r\n        target: moveable.state.target,\r\n        clientX: e.clientX,\r\n        clientY: e.clientY,\r\n        inputEvent: e.inputEvent,\r\n        currentTarget: moveable,\r\n        moveable,\r\n        datas: datas.datas,\r\n        isRequest: e.isRequest,\r\n        isRequestChild: e.isRequestChild,\r\n        isFirstDrag: !!e.isFirstDrag,\r\n        isTrusted: e.isTrusted !== false,\r\n        stopAble() {\r\n            datas.isEventStart = false;\r\n        },\r\n        stopDrag() {\r\n            e.stop?.();\r\n        },\r\n    } as any;\r\n\r\n    if (!datas.isStartEvent) {\r\n        datas.isStartEvent = true;\r\n    } else if (!isBeforeEvent) {\r\n        datas.lastEvent = nextParams;\r\n    }\r\n    return nextParams;\r\n}\r\nexport function fillEndParams<T extends IObject<any>>(\r\n    moveable: any,\r\n    e: any,\r\n    params: ExcludeEndParams<T> & { isDrag?: boolean },\r\n): T {\r\n    const datas = e.datas;\r\n    const isDrag = \"isDrag\" in params ? params.isDrag : e.isDrag;\r\n\r\n    if (!datas.datas) {\r\n        datas.datas = {};\r\n    }\r\n\r\n    return {\r\n        isDrag,\r\n        ...params,\r\n        moveable,\r\n        target: moveable.state.target,\r\n        clientX: e.clientX,\r\n        clientY: e.clientY,\r\n        inputEvent: e.inputEvent,\r\n        currentTarget: moveable,\r\n        lastEvent: datas.lastEvent,\r\n        isDouble: e.isDouble,\r\n        datas: datas.datas,\r\n        isFirstDrag: !!e.isFirstDrag,\r\n    } as any;\r\n}\r\nexport function catchEvent<EventName extends keyof Props, Props extends IObject<any> = MoveableProps>(\r\n    moveable: any,\r\n    name: EventName,\r\n    callback: (e: Props[EventName] extends ((e: infer P) => any) | undefined ? P : IObject<any>) => void,\r\n): any {\r\n    moveable._emitter.on(name, callback);\r\n}\r\n\r\nexport function triggerEvent<EventName extends keyof Props, Props extends IObject<any> = MoveableProps>(\r\n    moveable: any,\r\n    name: EventName,\r\n    params: Props[EventName] extends ((e: infer P) => any) | undefined ? P : IObject<any>,\r\n    isManager?: boolean,\r\n    isRequest?: boolean,\r\n): any {\r\n    return moveable.triggerEvent(\r\n        name,\r\n        params,\r\n        isManager,\r\n        isRequest,\r\n    );\r\n}\r\n\r\nexport function getComputedStyle(el: Element, pseudoElt?: string | null) {\r\n    return getWindow(el).getComputedStyle(el, pseudoElt);\r\n}\r\n\r\nexport function filterAbles(\r\n    ables: Able[], methods: Array<keyof Able>,\r\n    triggerAblesSimultaneously?: boolean,\r\n) {\r\n    const enabledAbles: IObject<boolean> = {};\r\n    const ableGroups: IObject<boolean> = {};\r\n\r\n    return ables.filter(able => {\r\n        const name = able.name;\r\n\r\n        if (enabledAbles[name] || !methods.some(method => able[method])) {\r\n            return false;\r\n        }\r\n        if (!triggerAblesSimultaneously && able.ableGroup) {\r\n            if (ableGroups[able.ableGroup]) {\r\n                return false;\r\n            }\r\n            ableGroups[able.ableGroup] = true;\r\n        }\r\n        enabledAbles[name] = true;\r\n        return true;\r\n    });\r\n}\r\n\r\nexport function equals(a1: any, a2: any) {\r\n    return a1 === a2 || (a1 == null && a2 == null);\r\n}\r\n\r\nexport function selectValue<T = any>(...values: any[]): T {\r\n    const length = values.length - 1;\r\n    for (let i = 0; i < length; ++i) {\r\n        const value = values[i];\r\n\r\n        if (!isUndefined(value)) {\r\n            return value;\r\n        }\r\n    }\r\n\r\n    return values[length];\r\n}\r\n\r\nexport function groupBy<T>(arr: T[], func: (el: T, index: number, arr: T[]) => any) {\r\n    const groups: T[][] = [];\r\n    const groupKeys: any[] = [];\r\n\r\n    arr.forEach((el, index) => {\r\n        const groupKey = func(el, index, arr);\r\n        const keyIndex = groupKeys.indexOf(groupKey);\r\n        const group = groups[keyIndex] || [];\r\n\r\n        if (keyIndex === -1) {\r\n            groupKeys.push(groupKey);\r\n            groups.push(group);\r\n        }\r\n        group.push(el);\r\n    });\r\n    return groups;\r\n}\r\nexport function groupByMap<T>(arr: T[], func: (el: T, index: number, arr: T[]) => string | number) {\r\n    const groups: T[][] = [];\r\n    const groupKeys: IObject<T[]> = {};\r\n\r\n    arr.forEach((el, index) => {\r\n        const groupKey = func(el, index, arr);\r\n        let group = groupKeys[groupKey];\r\n\r\n        if (!group) {\r\n            group = [];\r\n            groupKeys[groupKey] = group;\r\n            groups.push(group);\r\n        }\r\n        group.push(el);\r\n    });\r\n    return groups;\r\n}\r\nexport function flat<T>(arr: T[][]): T[] {\r\n    return arr.reduce((prev, cur) => {\r\n        return prev.concat(cur);\r\n    }, []);\r\n}\r\n\r\nexport function equalSign(a: number, b: number) {\r\n    return (a >= 0 && b >= 0) || (a < 0 && b < 0);\r\n}\r\n\r\nexport function maxOffset(...args: number[]) {\r\n    args.sort((a, b) => abs(b) - abs(a));\r\n\r\n    return args[0];\r\n}\r\nexport function minOffset(...args: number[]) {\r\n    args.sort((a, b) => abs(a) - abs(b));\r\n\r\n    return args[0];\r\n}\r\n\r\nexport function calculateInversePosition(matrix: number[], pos: number[], n: number) {\r\n    return calculate(\r\n        invert(matrix, n),\r\n        convertPositionMatrix(pos, n),\r\n        n,\r\n    );\r\n}\r\nexport function convertDragDist(state: MoveableManagerState, e: any) {\r\n    const {\r\n        is3d,\r\n        rootMatrix,\r\n    } = state;\r\n    const n = is3d ? 4 : 3;\r\n    [\r\n        e.distX, e.distY,\r\n    ] = calculateInversePosition(rootMatrix, [e.distX, e.distY], n);\r\n\r\n    return e;\r\n}\r\n\r\nexport function calculatePadding(\r\n    matrix: number[],\r\n    pos: number[],\r\n    added: number[],\r\n    n: number,\r\n) {\r\n    if (!added[0] && !added[1]) {\r\n        return pos;\r\n    }\r\n\r\n    const xAdded = calculatePosition(matrix, [normalized(added[0] || 1), 0], n);\r\n    const yAdded = calculatePosition(matrix, [0, normalized(added[1] || 1)], n);\r\n    const nextAdded = calculatePosition(matrix, [\r\n        added[0] / getDistSize(xAdded),\r\n        added[1] / getDistSize(yAdded),\r\n    ], n);\r\n\r\n    return plus(pos, nextAdded);\r\n}\r\n\r\nexport function convertCSSSize(value: number, size: number, isRelative?: boolean) {\r\n    return isRelative ? `${value / size * 100}%` : `${value}px`;\r\n}\r\n\r\nexport function getTinyDist(v: number) {\r\n    return abs(v) <= TINY_NUM ? 0 : v;\r\n}\r\n\r\nexport function viewDraggingPrefix(ableName: string) {\r\n    return prefix(`${ableName}-view-dragging`);\r\n}\r\nexport function getDirectionViewClassName(ableName: string) {\r\n    return (moveable: MoveableManagerInterface) => {\r\n        if (!moveable.isDragging(ableName)) {\r\n            return \"\";\r\n        }\r\n        const data = getGestoData(moveable, ableName);\r\n        const deg = data.deg;\r\n        if (!deg) {\r\n            return \"\";\r\n        }\r\n        return prefix(`view-control-rotation${deg}`);\r\n    };\r\n}\r\nexport function getDirectionCondition(ableName: string, checkAbles: string[] = [ableName]) {\r\n    return (moveable: any, e: any) => {\r\n        if (e.isRequest) {\r\n            if (checkAbles.some(name => e.requestAble === name)) {\r\n                return e.parentDirection!;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n        const target = e.inputEvent.target;\r\n\r\n        return hasClass(target, prefix(\"direction\")) && (!ableName || hasClass(target, prefix(ableName)));\r\n    };\r\n}\r\n\r\nexport function convertTransformInfo(transforms: string[], state: MoveableManagerState, index: number) {\r\n    const matrixInfos = parse(transforms, {\r\n        \"x%\": v => v / 100 * state.offsetWidth,\r\n        \"y%\": v => v / 100 * state.offsetHeight,\r\n    });\r\n\r\n    const beforeFunctionTexts = transforms.slice(0, index < 0 ? undefined : index);\r\n    const beforeFunctionTexts2 = transforms.slice(0, index < 0 ? undefined : index + 1);\r\n    const targetFunctionText = transforms[index] || \"\";\r\n    const afterFunctionTexts = index < 0 ? [] : transforms.slice(index);\r\n    const afterFunctionTexts2 = index < 0 ? [] : transforms.slice(index + 1);\r\n\r\n    const beforeFunctions = matrixInfos.slice(0, index < 0 ? undefined : index);\r\n    const beforeFunctions2 = matrixInfos.slice(0, index < 0 ? undefined : index + 1);\r\n    const targetFunction = matrixInfos[index] ?? parse([\"\"])[0];\r\n    const afterFunctions = index < 0 ? [] : matrixInfos.slice(index);\r\n    const afterFunctions2 = index < 0 ? [] : matrixInfos.slice(index + 1);\r\n    const targetFunctions = targetFunction ? [targetFunction] : [];\r\n\r\n\r\n    const beforeFunctionMatrix = toMat(beforeFunctions);\r\n    const beforeFunctionMatrix2 = toMat(beforeFunctions2);\r\n    const afterFunctionMatrix = toMat(afterFunctions);\r\n    const afterFunctionMatrix2 = toMat(afterFunctions2);\r\n    const allFunctionMatrix = multiply(\r\n        beforeFunctionMatrix,\r\n        afterFunctionMatrix,\r\n        4,\r\n    );\r\n    return {\r\n        transforms,\r\n        beforeFunctionMatrix,\r\n        beforeFunctionMatrix2,\r\n        targetFunctionMatrix: toMat(targetFunctions),\r\n        afterFunctionMatrix,\r\n        afterFunctionMatrix2,\r\n        allFunctionMatrix,\r\n        beforeFunctions,\r\n        beforeFunctions2,\r\n        targetFunction: targetFunctions[0],\r\n        afterFunctions,\r\n        afterFunctions2,\r\n        beforeFunctionTexts,\r\n        beforeFunctionTexts2,\r\n        targetFunctionText,\r\n        afterFunctionTexts,\r\n        afterFunctionTexts2,\r\n    };\r\n}\r\n\r\nexport function isArrayFormat<T = any>(arr: any): arr is ArrayFormat<T> {\r\n    if (!arr || !isObject(arr)) {\r\n        return false;\r\n    }\r\n    if (isNode(arr)) {\r\n        return false;\r\n    }\r\n    return isArray(arr) || \"length\" in arr;\r\n}\r\n\r\nexport function getRefTarget<T extends Element = HTMLElement | SVGElement>(\r\n    target: MoveableRefType<T> | Window, isSelector: true): T | null;\r\nexport function getRefTarget<T extends Element = HTMLElement | SVGElement>(\r\n    target: MoveableRefType<T> | Window, isSelector?: boolean): T | string | null;\r\nexport function getRefTarget<T extends Element = HTMLElement | SVGElement>(\r\n    target: MoveableRefType<T> | Window,\r\n    isSelector?: boolean,\r\n): any {\r\n    if (!target) {\r\n        return null;\r\n    }\r\n    if (isNode(target)) {\r\n        return target;\r\n    }\r\n    if (isString(target)) {\r\n        if (isSelector) {\r\n            return document.querySelector(target);\r\n        }\r\n        return target;\r\n    }\r\n    if (isFunction(target)) {\r\n        return target();\r\n    }\r\n    if (isWindow(target)) {\r\n        return target;\r\n    }\r\n    if (\"current\" in target) {\r\n        return target.current;\r\n    }\r\n    return target;\r\n}\r\n\r\nexport function getRefTargets(\r\n    targets: MoveableRefTargetType,\r\n    isSelector: true): Array<HTMLElement | SVGElement | null>;\r\nexport function getRefTargets(\r\n    targets: MoveableRefTargetType,\r\n    isSelector?: boolean): MoveableRefTargetsResultType;\r\nexport function getRefTargets(targets: MoveableRefTargetType, isSelector?: boolean): any[] {\r\n    if (!targets) {\r\n        return [];\r\n    }\r\n    const userTargets = isArrayFormat(targets) ? [].slice.call(targets) : [targets];\r\n\r\n    return userTargets.reduce((prev, target) => {\r\n        if (isString(target) && isSelector) {\r\n            return [...prev, ...[].slice.call(document.querySelectorAll<HTMLElement>(target))];\r\n        }\r\n        if (isArray(target)) {\r\n            prev.push(getRefTargets(target, isSelector));\r\n        } else {\r\n            prev.push(getRefTarget(target, isSelector));\r\n        }\r\n        return prev;\r\n    }, [] as MoveableRefTargetsResultType);\r\n}\r\n\r\nexport function minmax(...values: number[]) {\r\n    return [Math.min(...values), Math.max(...values)];\r\n}\r\n\r\n\r\nexport function getAbsoluteRotation(pos1: number[], pos2: number[], direction: number) {\r\n    let deg = getRad(pos1, pos2) / Math.PI * 180;\r\n\r\n    deg = direction >= 0 ? deg : 180 - deg;\r\n    deg = deg >= 0 ? deg : 360 + deg;\r\n\r\n    return deg;\r\n}\r\n\r\n\r\nexport function getDragDistByState(state: MoveableManagerState, dist: number[]) {\r\n    const {\r\n        rootMatrix,\r\n        is3d,\r\n    } = state;\r\n    const n = is3d ? 4 : 3;\r\n\r\n    let inverseMatrix = invert(rootMatrix, n);\r\n\r\n    if (!is3d) {\r\n        inverseMatrix = convertDimension(inverseMatrix, 3, 4);\r\n    }\r\n    inverseMatrix[12] = 0;\r\n    inverseMatrix[13] = 0;\r\n    inverseMatrix[14] = 0;\r\n\r\n    return calculateMatrixDist(inverseMatrix, dist);\r\n}\r\n\r\nexport function getSizeDistByDist(\r\n    startSize: number[],\r\n    dist: number[],\r\n    ratio: number,\r\n    direction: number[],\r\n    keepRatio?: boolean,\r\n) {\r\n    const [startOffsetWidth, startOffsetHeight] = startSize;\r\n    let distWidth = 0;\r\n    let distHeight = 0;\r\n\r\n    if (keepRatio && startOffsetWidth && startOffsetHeight) {\r\n        const rad = getRad([0, 0], dist);\r\n        const standardRad = getRad([0, 0], direction);\r\n        const size = getDistSize(dist);\r\n        const signSize = Math.cos(rad - standardRad) * size;\r\n\r\n        if (!direction[0]) {\r\n            // top, bottom\r\n            distHeight = signSize;\r\n            distWidth = distHeight * ratio;\r\n        } else if (!direction[1]) {\r\n            // left, right\r\n            distWidth = signSize;\r\n            distHeight = distWidth / ratio;\r\n        } else {\r\n            // two-way\r\n            const startWidthSize = direction[0] * startOffsetWidth;\r\n            const startHeightSize = direction[1] * startOffsetHeight;\r\n\r\n            let secondRad = Math.atan2(startWidthSize + dist[0], startHeightSize + dist[1]);\r\n            let firstRad = Math.atan2(startWidthSize, startHeightSize);\r\n\r\n            if (secondRad < 0) {\r\n                secondRad += Math.PI * 2;\r\n            }\r\n            if (firstRad < 0) {\r\n                firstRad += Math.PI * 2;\r\n            }\r\n            let rad = 0;\r\n\r\n            if (abs(secondRad - firstRad) < Math.PI / 2 || abs(secondRad - firstRad) > Math.PI / 2 * 3) {\r\n                rad = secondRad - firstRad;\r\n            } else {\r\n                firstRad += Math.PI;\r\n                rad = secondRad - firstRad;\r\n            }\r\n            if (rad > Math.PI * 2) {\r\n                rad -= Math.PI * 2;\r\n            } else if (rad > Math.PI) {\r\n                rad = 2 * Math.PI - rad;\r\n            } else if (rad < -Math.PI) {\r\n                rad = -2 * Math.PI - rad;\r\n            }\r\n            //       180\r\n            // -1, -1,  // 1, -1\r\n            // 270            90\r\n            // -1, 1    // 1, 1\r\n            //       0\r\n            const distSize = getDistSize([startWidthSize + dist[0], startHeightSize + dist[1]]) * Math.cos(rad);\r\n\r\n            distWidth = distSize * Math.sin(firstRad) - startWidthSize;\r\n            distHeight = distSize * Math.cos(firstRad) - startHeightSize;\r\n\r\n            if (direction[0] < 0) {\r\n                distWidth *= -1;\r\n            }\r\n            if (direction[1] < 0) {\r\n                distHeight *= -1;\r\n            }\r\n        }\r\n    } else {\r\n        distWidth = direction[0] * dist[0];\r\n        distHeight = direction[1] * dist[1];\r\n    }\r\n\r\n    return [distWidth, distHeight];\r\n}\r\nexport function getOffsetSizeDist(\r\n    sizeDirection: number[],\r\n    keepRatio: boolean,\r\n    datas: any,\r\n    e: any,\r\n) {\r\n    const {\r\n        ratio,\r\n        startOffsetWidth,\r\n        startOffsetHeight,\r\n    } = datas;\r\n    let distWidth = 0;\r\n    let distHeight = 0;\r\n    const {\r\n        distX,\r\n        distY,\r\n        pinchScale,\r\n        parentDistance,\r\n        parentDist,\r\n        parentScale,\r\n    } = e;\r\n    const startFixedDirection = datas.fixedDirection;\r\n    const directionsDists = [0, 1].map(index => {\r\n        return abs(sizeDirection[index] - startFixedDirection[index]);\r\n    });\r\n    const directionRatios = [0, 1].map(index => {\r\n        let dist = directionsDists[index];\r\n\r\n        if (dist !== 0) {\r\n            dist = 2 / dist;\r\n        }\r\n        return dist;\r\n    });\r\n    if (parentDist) {\r\n        distWidth = parentDist[0];\r\n        distHeight = parentDist[1];\r\n\r\n        if (keepRatio) {\r\n            if (!distWidth) {\r\n                distWidth = distHeight * ratio;\r\n            } else if (!distHeight) {\r\n                distHeight = distWidth / ratio;\r\n            }\r\n        }\r\n    } else if (isNumber(pinchScale)) {\r\n        distWidth = (pinchScale - 1) * startOffsetWidth;\r\n        distHeight = (pinchScale - 1) * startOffsetHeight;\r\n    } else if (parentScale) {\r\n        distWidth = (parentScale[0] - 1) * startOffsetWidth;\r\n        distHeight = (parentScale[1] - 1) * startOffsetHeight;\r\n    } else if (parentDistance) {\r\n        const scaleX = startOffsetWidth * directionsDists[0];\r\n        const scaleY = startOffsetHeight * directionsDists[1];\r\n        const ratioDistance = getDistSize([scaleX, scaleY]);\r\n\r\n        distWidth = parentDistance / ratioDistance * scaleX * directionRatios[0];\r\n        distHeight = parentDistance / ratioDistance * scaleY * directionRatios[1];\r\n    } else {\r\n        let dist = getDragDist({ datas, distX, distY });\r\n\r\n        dist = directionRatios.map((ratio, i) => {\r\n            return dist[i] * ratio;\r\n        });\r\n\r\n        [distWidth, distHeight] = getSizeDistByDist(\r\n            [startOffsetWidth, startOffsetHeight],\r\n            dist,\r\n            ratio,\r\n            sizeDirection,\r\n            keepRatio,\r\n        );\r\n    }\r\n    return {\r\n        // direction,\r\n        // sizeDirection,\r\n        distWidth,\r\n        distHeight,\r\n    };\r\n}\r\n\r\nexport function convertTransformUnit(\r\n    origin: string,\r\n    xy?: boolean,\r\n): { x?: string; y?: string; value?: string; } {\r\n    if (xy) {\r\n        if (origin === \"left\") {\r\n            return { x: \"0%\", y: \"50%\" };\r\n        } else if (origin === \"top\") {\r\n            return { x: \"50%\", y: \"50%\" };\r\n        } else if (origin === \"center\") {\r\n            return { x: \"50%\", y: \"50%\" };\r\n        } else if (origin === \"right\") {\r\n            return { x: \"100%\", y: \"50%\" };\r\n        } else if (origin === \"bottom\") {\r\n            return { x: \"50%\", y: \"100%\" };\r\n        }\r\n        const [left, right] = origin.split(\" \");\r\n        const leftOrigin = convertTransformUnit(left || \"\");\r\n        const rightOrigin = convertTransformUnit(right || \"\");\r\n        const originObject = {\r\n            ...leftOrigin,\r\n            ...rightOrigin,\r\n        };\r\n\r\n        const nextOriginObject = {\r\n            x: \"50%\",\r\n            y: \"50%\",\r\n        };\r\n        if (originObject.x) {\r\n            nextOriginObject.x = originObject.x;\r\n        }\r\n        if (originObject.y) {\r\n            nextOriginObject.y = originObject.y;\r\n        }\r\n        if (originObject.value) {\r\n            if (originObject.x && !originObject.y) {\r\n                nextOriginObject.y = originObject.value;\r\n            }\r\n            if (!originObject.x && originObject.y) {\r\n                nextOriginObject.x = originObject.value;\r\n            }\r\n        }\r\n        return nextOriginObject;\r\n    }\r\n    if (origin === \"left\") {\r\n        return { x: \"0%\" };\r\n    }\r\n    if (origin === \"right\") {\r\n        return { x: \"100%\" };\r\n    }\r\n    if (origin === \"top\") {\r\n        return { y: \"0%\" };\r\n    }\r\n    if (origin === \"bottom\") {\r\n        return { y: \"100%\" };\r\n    }\r\n    if (!origin) {\r\n        return {};\r\n    }\r\n    if (origin === \"center\") {\r\n        return { value: \"50%\" };\r\n    }\r\n    return { value: origin };\r\n}\r\nexport function convertTransformOriginArray(transformOrigin: string, width: number, height: number) {\r\n    const { x, y } = convertTransformUnit(transformOrigin, true);\r\n\r\n    return [\r\n        convertUnitSize(x!, width) || 0,\r\n        convertUnitSize(y!, height) || 0,\r\n    ];\r\n}\r\n\r\nexport function rotatePosesInfo(poses: number[][], origin: number[], rad: number) {\r\n    const prevPoses = poses.map((pos) => minus(pos, origin));\r\n    const nextPoses = prevPoses.map((pos) => rotate(pos, rad));\r\n\r\n    return {\r\n        prev: prevPoses,\r\n        next: nextPoses,\r\n        result: nextPoses.map(pos => plus(pos, origin)),\r\n    };\r\n}\r\n\r\n\r\n\r\nexport function isDeepArrayEquals(arr1: any[], arr2: any[]): boolean {\r\n    return arr1.length === arr2.length && arr1.every((value1, i) => {\r\n        const value2 = arr2[i];\r\n        const isArray1 = isArray(value1);\r\n        const isArray2 = isArray(value2);\r\n        if (isArray1 && isArray2) {\r\n            return isDeepArrayEquals(value1, value2);\r\n        } else if (!isArray1 && !isArray2) {\r\n            return value1 === value2;\r\n        }\r\n        return false;\r\n    });\r\n}\r\n\r\n\r\nexport function watchValue<T>(\r\n    moveable: any,\r\n    property: string,\r\n    nextValue: T,\r\n    valueKey: (value: T) => string | number,\r\n    defaultValue?: T,\r\n): T {\r\n    const store = (moveable as any)._store;\r\n    let prevValue = store[property];\r\n\r\n    if (!(property in store)) {\r\n        if (defaultValue != null) {\r\n            store[property] = defaultValue;\r\n            prevValue = defaultValue;\r\n        } else {\r\n            store[property] = nextValue;\r\n            return nextValue;\r\n        }\r\n    }\r\n    if (prevValue === nextValue || valueKey(prevValue) === valueKey(nextValue)) {\r\n        return prevValue;\r\n    }\r\n\r\n    store[property] = nextValue;\r\n    return nextValue;\r\n}\r\n\r\n\r\nexport function sign(value: number) {\r\n    return value >= 0 ? 1 : -1;\r\n}\r\n\r\n\r\nexport function abs(value: number) {\r\n    return Math.abs(value);\r\n}\r\n\r\n\r\nexport function countEach<T>(count: number, callback: (index: number) => T): T[] {\r\n    return counter(count).map(index => callback(index));\r\n}\r\n\r\n\r\nexport function getPaddingBox(padding: PaddingBox | number) {\r\n    if (isNumber(padding)) {\r\n        return {\r\n            top: padding,\r\n            left: padding,\r\n            right: padding,\r\n            bottom: padding,\r\n        };\r\n    }\r\n\r\n    return {\r\n        left: padding.left || 0,\r\n        top: padding.top || 0,\r\n        right: padding.right || 0,\r\n        bottom: padding.bottom || 0,\r\n    };\r\n}\r\n","import { makeAble } from \"./AbleManager\";\r\nimport { triggerEvent, fillParams, fillEndParams } from \"../utils\";\r\nimport {\r\n    PinchableProps, Able, SnappableState,\r\n    OnPinchStart, OnPinch, OnPinchEnd, MoveableManagerInterface, MoveableGroupInterface,\r\n} from \"../types\";\r\n\r\n/**\r\n * @namespace Moveable.Pinchable\r\n * @description Whether or not target can be pinched with draggable, resizable, scalable, rotatable (default: false)\r\n */\r\nexport default makeAble(\"pinchable\", {\r\n    props: [\r\n        \"pinchable\",\r\n    ] as const,\r\n    events: [\r\n        \"pinchStart\",\r\n        \"pinch\",\r\n        \"pinchEnd\",\r\n        \"pinchGroupStart\",\r\n        \"pinchGroup\",\r\n        \"pinchGroupEnd\",\r\n    ] as const,\r\n    dragStart() {\r\n        return true;\r\n    },\r\n    pinchStart(\r\n        moveable: MoveableManagerInterface<PinchableProps, SnappableState>,\r\n        e: any,\r\n    ) {\r\n        const { datas, targets, angle, originalDatas } = e;\r\n        const { pinchable, ables } = moveable.props;\r\n\r\n        if (!pinchable) {\r\n            return false;\r\n        }\r\n        const eventName = `onPinch${targets ? \"Group\" : \"\"}Start` as \"onPinchStart\";\r\n        const controlEventName = `drag${targets ? \"Group\" : \"\"}ControlStart` as \"dragControlStart\";\r\n\r\n        const pinchAbles = (pinchable === true ? moveable.controlAbles : ables!.filter(able => {\r\n            return pinchable.indexOf(able.name as any) > -1;\r\n        })).filter(able => able.canPinch && able[controlEventName]);\r\n\r\n        const params = fillParams<OnPinchStart>(moveable, e, {}) as any;\r\n\r\n        if (targets) {\r\n            params.targets = targets;\r\n        }\r\n        const result = triggerEvent(moveable, eventName, params);\r\n\r\n        datas.isPinch = result !== false;\r\n        datas.ables = pinchAbles;\r\n\r\n        const isPinch = datas.isPinch;\r\n\r\n        if (!isPinch) {\r\n            return false;\r\n        }\r\n        pinchAbles.forEach(able => {\r\n            originalDatas[able.name] = originalDatas[able.name] || {};\r\n\r\n            if (!able[controlEventName]) {\r\n                return;\r\n            }\r\n            const ableEvent: any = {\r\n                ...e,\r\n                datas: originalDatas[able.name],\r\n                parentRotate: angle,\r\n                isPinch: true,\r\n            };\r\n            able[controlEventName]!(moveable, ableEvent);\r\n        });\r\n\r\n        moveable.state.snapRenderInfo = {\r\n            request: e.isRequest,\r\n            direction: [0, 0],\r\n        };\r\n        return isPinch;\r\n    },\r\n    pinch(\r\n        moveable: MoveableManagerInterface<PinchableProps>,\r\n        e: any,\r\n    ) {\r\n        const {\r\n            datas, scale: pinchScale, distance,\r\n            originalDatas,\r\n            inputEvent, targets,\r\n            angle,\r\n        } = e;\r\n        if (!datas.isPinch) {\r\n            return;\r\n        }\r\n        const parentDistance = distance * (1 - 1 / pinchScale);\r\n        const params = fillParams<OnPinch>(moveable, e, {}) as any;\r\n\r\n        if (targets) {\r\n            params.targets = targets;\r\n        }\r\n        const eventName = `onPinch${targets ? \"Group\" : \"\"}` as \"onPinch\";\r\n        triggerEvent(moveable, eventName, params);\r\n\r\n        const ables: Able[] = datas.ables;\r\n        const controlEventName = `drag${targets ? \"Group\" : \"\"}Control` as \"dragControl\";\r\n\r\n        ables.forEach(able => {\r\n            if (!able[controlEventName]) {\r\n                return;\r\n            }\r\n            able[controlEventName]!(moveable, {\r\n                ...e,\r\n                datas: originalDatas[able.name],\r\n                inputEvent,\r\n                resolveMatrix: true,\r\n                pinchScale: pinchScale,\r\n                parentDistance,\r\n                parentRotate: angle,\r\n                isPinch: true,\r\n            } as any);\r\n        });\r\n        return params;\r\n    },\r\n    pinchEnd(\r\n        moveable: MoveableManagerInterface<PinchableProps>,\r\n        e: any,\r\n    ) {\r\n        const { datas, isPinch, inputEvent, targets, originalDatas } = e;\r\n        if (!datas.isPinch) {\r\n            return;\r\n        }\r\n        const eventName = `onPinch${targets ? \"Group\" : \"\"}End` as \"onPinchEnd\";\r\n\r\n        const params = fillEndParams<OnPinchEnd>(moveable, e, { isDrag: isPinch }) as any;\r\n\r\n        if (targets) {\r\n            params.targets = targets;\r\n        }\r\n        triggerEvent(moveable, eventName, params);\r\n        const ables: Able[] = datas.ables;\r\n        const controlEventName = `drag${targets ? \"Group\" : \"\"}ControlEnd` as \"dragControlEnd\";\r\n\r\n        ables.forEach(able => {\r\n            if (!able[controlEventName]) {\r\n                return;\r\n            }\r\n            able[controlEventName]!(moveable, {\r\n                ...e,\r\n                isDrag: isPinch,\r\n                datas: originalDatas[able.name],\r\n                inputEvent,\r\n                isPinch: true,\r\n            } as any);\r\n        });\r\n        return isPinch;\r\n    },\r\n    pinchGroupStart(moveable: MoveableGroupInterface<any, any>, e: any) {\r\n        return this.pinchStart!(moveable, { ...e, targets: moveable.props.targets });\r\n    },\r\n    pinchGroup(moveable: MoveableGroupInterface, e: any) {\r\n        return this.pinch!(moveable, { ...e, targets: moveable.props.targets });\r\n    },\r\n    pinchGroupEnd(moveable: MoveableGroupInterface, e: any) {\r\n        return this.pinchEnd!(moveable, { ...e, targets: moveable.props.targets });\r\n    },\r\n});\r\n\r\n/**\r\n * Whether or not target can be pinched with draggable, resizable, scalable, rotatable (default: false)\r\n * @name Moveable.Pinchable#pinchable\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body);\r\n *\r\n * moveable.pinchable = true;\r\n */\r\n\r\n/**\r\n * When the pinch starts, the pinchStart event is called with part of scaleStart, rotateStart, resizeStart\r\n * @memberof Moveable.Pinchable\r\n * @event pinchStart\r\n * @param {Moveable.Pinchable.OnPinchStart} - Parameters for the pinchStart event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     rotatable: true,\r\n *     scalable: true,\r\n *     pinchable: true, // [\"rotatable\", \"scalable\"]\r\n * });\r\n * moveable.on(\"pinchStart\", ({ target }) => {\r\n *     console.log(target);\r\n * });\r\n * moveable.on(\"rotateStart\", ({ target }) => {\r\n *     console.log(target);\r\n * });\r\n * moveable.on(\"scaleStart\", ({ target }) => {\r\n *     console.log(target);\r\n * });\r\n */\r\n/**\r\n * When pinching, the pinch event is called with part of scale, rotate, resize\r\n * @memberof Moveable.Pinchable\r\n * @event pinch\r\n * @param {Moveable.Pinchable.OnPinch} - Parameters for the pinch event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     rotatable: true,\r\n *     scalable: true,\r\n *     pinchable: true, // [\"rotatable\", \"scalable\"]\r\n * });\r\n * moveable.on(\"pinch\", ({ target }) => {\r\n *     console.log(target);\r\n * });\r\n * moveable.on(\"rotate\", ({ target }) => {\r\n *     console.log(target);\r\n * });\r\n * moveable.on(\"scale\", ({ target }) => {\r\n *     console.log(target);\r\n * });\r\n */\r\n/**\r\n * When the pinch finishes, the pinchEnd event is called.\r\n * @memberof Moveable.Pinchable\r\n * @event pinchEnd\r\n * @param {Moveable.Pinchable.OnPinchEnd} - Parameters for the pinchEnd event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     rotatable: true,\r\n *     scalable: true,\r\n *     pinchable: true, // [\"rotatable\", \"scalable\"]\r\n * });\r\n * moveable.on(\"pinchEnd\", ({ target }) => {\r\n *     console.log(target);\r\n * });\r\n * moveable.on(\"rotateEnd\", ({ target }) => {\r\n *     console.log(target);\r\n * });\r\n * moveable.on(\"scaleEnd\", ({ target }) => {\r\n *     console.log(target);\r\n * });\r\n */\r\n\r\n/**\r\n * When the group pinch starts, the `pinchGroupStart` event is called.\r\n * @memberof Moveable.Pinchable\r\n * @event pinchGroupStart\r\n * @param {Moveable.Pinchable.OnPinchGroupStart} - Parameters for the `pinchGroupStart` event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\r\n *     pinchable: true\r\n * });\r\n * moveable.on(\"pinchGroupStart\", ({ targets }) => {\r\n *     console.log(\"onPinchGroupStart\", targets);\r\n * });\r\n */\r\n\r\n/**\r\n * When the group pinch, the `pinchGroup` event is called.\r\n * @memberof Moveable.Pinchable\r\n * @event pinchGroup\r\n * @param {Moveable.Pinchable.OnPinchGroup} - Parameters for the `pinchGroup` event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\r\n *     pinchable: true\r\n * });\r\n * moveable.on(\"pinchGroup\", ({ targets, events }) => {\r\n *     console.log(\"onPinchGroup\", targets);\r\n * });\r\n */\r\n\r\n/**\r\n * When the group pinch finishes, the `pinchGroupEnd` event is called.\r\n * @memberof Moveable.Pinchable\r\n * @event pinchGroupEnd\r\n * @param {Moveable.Pinchable.OnPinchGroupEnd} - Parameters for the `pinchGroupEnd` event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\r\n *     pinchable: true\r\n * });\r\n * moveable.on(\"pinchGroupEnd\", ({ targets, isDrag }) => {\r\n *     console.log(\"onPinchGroupEnd\", targets, isDrag);\r\n * });\r\n */\r\n","import {\r\n    triggerEvent, multiply2,\r\n    fillParams, fillEndParams, getAbsolutePosesByState,\r\n    catchEvent, getOffsetSizeDist, getDirectionCondition,\r\n    getDirectionViewClassName, getTotalDirection, sign, countEach, abs,\r\n} from \"../utils\";\r\nimport { MIN_SCALE } from \"../consts\";\r\nimport {\r\n    setDragStart, resolveTransformEvent,\r\n    convertTransformFormat,\r\n    getScaleDist,\r\n    fillTransformStartEvent,\r\n    fillTransformEvent,\r\n    setDefaultTransformIndex,\r\n    getTranslateFixedPosition,\r\n} from \"../gesto/GestoUtils\";\r\nimport { getRenderDirections } from \"../renderDirections\";\r\nimport {\r\n    ScalableProps, OnScaleGroup, OnScaleGroupEnd,\r\n    OnScaleGroupStart, DraggableProps, OnDragStart,\r\n    SnappableState, GroupableProps, OnScaleStart,\r\n    OnScale, OnScaleEnd, MoveableManagerInterface, MoveableGroupInterface,\r\n    OnBeforeScaleGroup,\r\n    OnBeforeScale,\r\n} from \"../types\";\r\nimport {\r\n    fillChildEvents,\r\n    startChildDist,\r\n    triggerChildAbles,\r\n} from \"../groupUtils\";\r\nimport Draggable from \"./Draggable\";\r\nimport { calculate, createRotateMatrix, plus, minus } from \"@scena/matrix\";\r\nimport CustomGesto from \"../gesto/CustomGesto\";\r\nimport { checkSnapScale } from \"./Snappable\";\r\nimport {\r\n    isArray, IObject, getDist,\r\n    throttle,\r\n    calculateBoundSize,\r\n} from \"@daybrush/utils\";\r\nimport { getFixedDirectionInfo } from \"../utils/getFixedDirection\";\r\n\r\nconst directionCondition = getDirectionCondition(\"scalable\");\r\n\r\n/**\r\n * @namespace Scalable\r\n * @memberof Moveable\r\n * @description Scalable indicates whether the target's x and y can be scale of transform.\r\n */\r\nexport default {\r\n    name: \"scalable\",\r\n    ableGroup: \"size\",\r\n    canPinch: true,\r\n    props: [\r\n        \"scalable\",\r\n        \"throttleScale\",\r\n        \"renderDirections\",\r\n        \"keepRatio\",\r\n        \"edge\",\r\n        \"displayAroundControls\",\r\n    ] as const,\r\n    events: [\r\n        \"scaleStart\",\r\n        \"beforeScale\",\r\n        \"scale\",\r\n        \"scaleEnd\",\r\n        \"scaleGroupStart\",\r\n        \"beforeScaleGroup\",\r\n        \"scaleGroup\",\r\n        \"scaleGroupEnd\",\r\n    ] as const,\r\n    render: getRenderDirections(\"scalable\"),\r\n    dragControlCondition: directionCondition,\r\n    viewClassName: getDirectionViewClassName(\"scalable\"),\r\n    dragControlStart(\r\n        moveable: MoveableManagerInterface<ScalableProps & DraggableProps, SnappableState>,\r\n        e: any) {\r\n        const { datas, isPinch, inputEvent, parentDirection } = e;\r\n\r\n        const direction = getTotalDirection(\r\n            parentDirection,\r\n            isPinch,\r\n            inputEvent,\r\n            datas,\r\n        );\r\n        const {\r\n            width,\r\n            height,\r\n            targetTransform,\r\n            target,\r\n            pos1,\r\n            pos2,\r\n            pos4,\r\n        } = moveable.state;\r\n\r\n        if (!direction || !target) {\r\n            return false;\r\n        }\r\n        if (!isPinch) {\r\n            setDragStart(moveable, e);\r\n        }\r\n        datas.datas = {};\r\n        datas.transform = targetTransform;\r\n        datas.prevDist = [1, 1];\r\n        datas.direction = direction;\r\n        datas.startOffsetWidth = width;\r\n        datas.startOffsetHeight = height;\r\n        datas.startValue = [1, 1];\r\n\r\n        // const scaleWidth = getDist(pos1, pos2);\r\n        // const scaleHeight = getDist(pos2, pos4);\r\n        const isWidth = (!direction[0] && !direction[1]) || direction[0] || !direction[1];\r\n\r\n        // datas.scaleWidth = scaleWidth;\r\n        // datas.scaleHeight = scaleHeight;\r\n        // datas.scaleXRatio = scaleWidth / width;\r\n        // datas.scaleYRatio = scaleHeight / height;\r\n\r\n        setDefaultTransformIndex(moveable, e, \"scale\");\r\n\r\n        datas.isWidth = isWidth;\r\n\r\n\r\n        function setRatio(ratio: number) {\r\n            datas.ratio = ratio && isFinite(ratio) ? ratio : 0;\r\n        }\r\n\r\n        datas.startPositions = getAbsolutePosesByState(moveable.state);\r\n        function setFixedDirection(fixedDirection: number[]) {\r\n            const result = getFixedDirectionInfo(datas.startPositions, fixedDirection);\r\n\r\n            datas.fixedDirection = result.fixedDirection;\r\n            datas.fixedPosition = result.fixedPosition;\r\n            datas.fixedOffset = result.fixedOffset;\r\n        }\r\n\r\n        datas.setFixedDirection = setFixedDirection;\r\n        setRatio(getDist(pos1, pos2) / getDist(pos2, pos4));\r\n        setFixedDirection([-direction[0], -direction[1]]);\r\n\r\n        const setMinScaleSize = (min: number[]) => {\r\n            datas.minScaleSize = min;\r\n        };\r\n        const setMaxScaleSize = (max: number[]) => {\r\n            datas.maxScaleSize = max;\r\n        };\r\n        // const setMinScale = (min: number[]) => {\r\n        // };\r\n        // const setMaxScale = (max: number[]) => {\r\n        // };\r\n\r\n        setMinScaleSize([-Infinity, -Infinity]);\r\n        setMaxScaleSize([Infinity, Infinity]);\r\n        const params = fillParams<OnScaleStart>(moveable, e, {\r\n            direction,\r\n            set: (scale: number[]) => {\r\n                datas.startValue = scale;\r\n            },\r\n            setRatio,\r\n            setFixedDirection,\r\n            setMinScaleSize,\r\n            setMaxScaleSize,\r\n            ...fillTransformStartEvent(moveable, e),\r\n            dragStart: Draggable.dragStart(\r\n                moveable,\r\n                new CustomGesto().dragStart([0, 0], e),\r\n            ) as OnDragStart,\r\n        });\r\n        const result = triggerEvent(moveable, \"onScaleStart\", params);\r\n\r\n        datas.startFixedDirection = datas.fixedDirection;\r\n\r\n        if (result !== false) {\r\n            datas.isScale = true;\r\n            moveable.state.snapRenderInfo = {\r\n                request: e.isRequest,\r\n                direction,\r\n            };\r\n\r\n        }\r\n        return datas.isScale ? params : false;\r\n    },\r\n    dragControl(\r\n        moveable: MoveableManagerInterface<ScalableProps & DraggableProps & GroupableProps, SnappableState>,\r\n        e: any) {\r\n        resolveTransformEvent(moveable, e, \"scale\");\r\n        const {\r\n            datas,\r\n            parentKeepRatio,\r\n            parentFlag,\r\n            isPinch,\r\n            dragClient,\r\n            isRequest,\r\n            useSnap,\r\n            resolveMatrix,\r\n        } = e;\r\n        const {\r\n            prevDist,\r\n            direction,\r\n            startOffsetWidth,\r\n            startOffsetHeight,\r\n            isScale,\r\n            startValue,\r\n            isWidth,\r\n            ratio,\r\n        } = datas;\r\n\r\n        if (!isScale) {\r\n            return false;\r\n        }\r\n\r\n        const props = moveable.props;\r\n        const {\r\n            throttleScale,\r\n            parentMoveable,\r\n        } = props;\r\n        let sizeDirection = direction;\r\n\r\n        if (!direction[0] && !direction[1]) {\r\n            sizeDirection = [1, 1];\r\n        }\r\n        const keepRatio = (ratio && (parentKeepRatio != null ? parentKeepRatio : props.keepRatio)) || false;\r\n        const state = moveable.state;\r\n\r\n        const tempScaleValue = [\r\n            startValue[0],\r\n            startValue[1],\r\n        ];\r\n\r\n        function getNextScale() {\r\n            const {\r\n                distWidth,\r\n                distHeight,\r\n            } = getOffsetSizeDist(sizeDirection, keepRatio, datas, e);\r\n\r\n\r\n            const distX = startOffsetWidth ? (startOffsetWidth + distWidth) / startOffsetWidth : 1;\r\n            const distY = startOffsetHeight ? (startOffsetHeight + distHeight) / startOffsetHeight : 1;\r\n\r\n            if (!startValue[0]) {\r\n                tempScaleValue[0] = distWidth / startOffsetWidth;\r\n            }\r\n            if (!startValue[1]) {\r\n                tempScaleValue[1] = distHeight / startOffsetHeight;\r\n            }\r\n            let scaleX = (sizeDirection[0] || keepRatio ? distX : 1) * tempScaleValue[0];\r\n            let scaleY = (sizeDirection[1] || keepRatio ? distY : 1) * tempScaleValue[1];\r\n\r\n            if (scaleX === 0) {\r\n                scaleX = sign(prevDist[0]) * MIN_SCALE;\r\n            }\r\n            if (scaleY === 0) {\r\n                scaleY = sign(prevDist[1]) * MIN_SCALE;\r\n            }\r\n            return [scaleX, scaleY];\r\n        }\r\n\r\n\r\n        let scale = getNextScale();\r\n\r\n        if (!isPinch && moveable.props.groupable) {\r\n            const snapRenderInfo = state.snapRenderInfo || {};\r\n            const stateDirection = snapRenderInfo.direction;\r\n\r\n            if (isArray(stateDirection) && (stateDirection[0] || stateDirection[1])) {\r\n                state.snapRenderInfo = { direction, request: e.isRequest };\r\n            }\r\n        }\r\n\r\n        triggerEvent(moveable, \"onBeforeScale\", fillParams<OnBeforeScale>(moveable, e, {\r\n            scale,\r\n            setFixedDirection(nextFixedDirection: number[]) {\r\n                datas.setFixedDirection(nextFixedDirection);\r\n\r\n                scale = getNextScale();\r\n                return scale;\r\n            },\r\n            startFixedDirection: datas.startFixedDirection,\r\n            setScale(nextScale: number[]) {\r\n                scale = nextScale;\r\n            },\r\n        }, true));\r\n\r\n        let dist = [\r\n            scale[0] / tempScaleValue[0],\r\n            scale[1] / tempScaleValue[1],\r\n        ];\r\n        let fixedPosition = dragClient;\r\n        let snapDist = [0, 0];\r\n\r\n        const distSign = sign(dist[0] * dist[1]);\r\n        const isSelfPinch = !dragClient && !parentFlag && isPinch;\r\n\r\n        if (isSelfPinch || resolveMatrix) {\r\n            fixedPosition = getTranslateFixedPosition(\r\n                moveable,\r\n                datas.targetAllTransform,\r\n                [0, 0],\r\n                [0, 0],\r\n                datas,\r\n            );\r\n        } else if (!dragClient) {\r\n            fixedPosition = datas.fixedPosition;\r\n        }\r\n        if (!isPinch) {\r\n            snapDist = checkSnapScale(\r\n                moveable,\r\n                dist,\r\n                direction,\r\n                !useSnap && isRequest,\r\n                datas,\r\n            );\r\n        }\r\n\r\n        if (keepRatio) {\r\n            if (sizeDirection[0] && sizeDirection[1] && snapDist[0] && snapDist[1]) {\r\n                if (Math.abs(snapDist[0] * startOffsetWidth) > Math.abs(snapDist[1] * startOffsetHeight)) {\r\n                    snapDist[1] = 0;\r\n                } else {\r\n                    snapDist[0] = 0;\r\n                }\r\n            }\r\n\r\n            const isNoSnap = !snapDist[0] && !snapDist[1];\r\n\r\n            if (isNoSnap) {\r\n\r\n                // throttle scale value (not absolute scale size)\r\n                if (isWidth) {\r\n                    dist[0] = throttle(dist[0] * tempScaleValue[0], throttleScale!) / tempScaleValue[0];\r\n                } else {\r\n                    dist[1] = throttle(dist[1] * tempScaleValue[1], throttleScale!) / tempScaleValue[1];\r\n                }\r\n            }\r\n            if (\r\n                (sizeDirection[0] && !sizeDirection[1])\r\n                || (snapDist[0] && !snapDist[1])\r\n                || (isNoSnap && isWidth)\r\n            ) {\r\n                dist[0] += snapDist[0];\r\n                const snapHeight = startOffsetWidth * dist[0] * tempScaleValue[0] / ratio;\r\n\r\n                dist[1] = sign(distSign * dist[0]) * abs(snapHeight / startOffsetHeight / tempScaleValue[1]);\r\n            } else if (\r\n                (!sizeDirection[0] && sizeDirection[1])\r\n                || (!snapDist[0] && snapDist[1])\r\n                || (isNoSnap && !isWidth)\r\n            ) {\r\n                dist[1] += snapDist[1];\r\n                const snapWidth = startOffsetHeight * dist[1] * tempScaleValue[1] * ratio;\r\n\r\n                dist[0] = sign(distSign * dist[1]) * abs(snapWidth / startOffsetWidth / tempScaleValue[0]);\r\n            }\r\n        } else {\r\n            dist[0] += snapDist[0];\r\n            dist[1] += snapDist[1];\r\n\r\n            if (!snapDist[0]) {\r\n                dist[0] = throttle(dist[0] * tempScaleValue[0], throttleScale!) / tempScaleValue[0];\r\n            }\r\n            if (!snapDist[1]) {\r\n                dist[1] = throttle(dist[1] * tempScaleValue[1], throttleScale!) / tempScaleValue[1];\r\n            }\r\n        }\r\n\r\n        if (dist[0] === 0) {\r\n            dist[0] = sign(prevDist[0]) * MIN_SCALE;\r\n        }\r\n        if (dist[1] === 0) {\r\n            dist[1] = sign(prevDist[1]) * MIN_SCALE;\r\n        }\r\n        scale = multiply2(dist, [tempScaleValue[0], tempScaleValue[1]]);\r\n\r\n\r\n        const startOffsetSize = [\r\n            startOffsetWidth,\r\n            startOffsetHeight,\r\n        ];\r\n        let scaleSize = [\r\n            startOffsetWidth * scale[0],\r\n            startOffsetHeight * scale[1],\r\n        ];\r\n\r\n        scaleSize = calculateBoundSize(\r\n            scaleSize,\r\n            datas.minScaleSize,\r\n            datas.maxScaleSize,\r\n            keepRatio ? ratio : false,\r\n        );\r\n\r\n        // if (keepRatio && (isGroup || keepRatioFinally)) {\r\n        //     if (isWidth) {\r\n        //         boundingHeight = boundingWidth / ratio;\r\n        //     } else {\r\n        //         boundingWidth = boundingHeight * ratio;\r\n        //     }\r\n        // }\r\n        scale = countEach(2, i => {\r\n            return startOffsetSize[i] ? scaleSize[i] / startOffsetSize[i] : scaleSize[i];\r\n        });\r\n        dist = countEach(2, i => {\r\n            return scale[i] / tempScaleValue[i];\r\n        });\r\n\r\n        const delta = countEach(2, i => prevDist[i] ? dist[i] / prevDist[i] : dist[i]);\r\n\r\n\r\n        const distText = `scale(${dist.join(\", \")})`;\r\n        const scaleText = `scale(${scale.join(\", \")})`;\r\n        const nextTransform = convertTransformFormat(\r\n            datas, scaleText, distText);\r\n        const isZeroScale = !startValue[0] || !startValue[1];\r\n\r\n        const inverseDist = getScaleDist(\r\n            moveable,\r\n            isZeroScale ? scaleText : distText,\r\n            datas.fixedDirection,\r\n            fixedPosition,\r\n            datas.fixedOffset,\r\n            datas,\r\n            isZeroScale,\r\n        );\r\n        const inverseDelta = isSelfPinch ? inverseDist : minus(inverseDist, datas.prevInverseDist || [0, 0]);\r\n\r\n        datas.prevDist = dist;\r\n        datas.prevInverseDist = inverseDist;\r\n        if (\r\n            scale[0] === prevDist[0] && scale[1] === prevDist[1]\r\n            && inverseDelta.every(num => !num)\r\n            && !parentMoveable\r\n            && !isSelfPinch\r\n        ) {\r\n            return false;\r\n        }\r\n\r\n\r\n        const params = fillParams<OnScale>(moveable, e, {\r\n            offsetWidth: startOffsetWidth,\r\n            offsetHeight: startOffsetHeight,\r\n            direction,\r\n\r\n            scale,\r\n            dist,\r\n            delta,\r\n\r\n            isPinch: !!isPinch,\r\n            ...fillTransformEvent(\r\n                moveable,\r\n                nextTransform,\r\n                inverseDelta,\r\n                isPinch,\r\n                e,\r\n            ),\r\n        });\r\n        triggerEvent(moveable, \"onScale\", params);\r\n\r\n        return params;\r\n    },\r\n    dragControlEnd(moveable: MoveableManagerInterface<ScalableProps>, e: any) {\r\n        const { datas } = e;\r\n        if (!datas.isScale) {\r\n            return false;\r\n        }\r\n\r\n        datas.isScale = false;\r\n\r\n        const scaleEndParam = fillEndParams<OnScaleEnd>(moveable, e, {});\r\n        triggerEvent(moveable, \"onScaleEnd\", scaleEndParam);\r\n        return scaleEndParam;\r\n    },\r\n    dragGroupControlCondition: directionCondition,\r\n    dragGroupControlStart(moveable: MoveableGroupInterface<any, any>, e: any) {\r\n        const { datas } = e;\r\n\r\n        const params = this.dragControlStart(moveable, e);\r\n\r\n        if (!params) {\r\n            return false;\r\n        }\r\n        const originalEvents = fillChildEvents(moveable, \"resizable\", e);\r\n\r\n\r\n        datas.moveableScale = moveable.scale;\r\n\r\n        const events = triggerChildAbles(\r\n            moveable,\r\n            this,\r\n            \"dragControlStart\",\r\n            e,\r\n            (child, ev) => {\r\n                return startChildDist(moveable, child, datas, ev);\r\n            },\r\n        );\r\n\r\n        const setFixedDirection = (fixedDirection: number[]) => {\r\n            params.setFixedDirection(fixedDirection);\r\n            events.forEach((ev, i) => {\r\n                ev.setFixedDirection(fixedDirection);\r\n                startChildDist(moveable, ev.moveable, datas, originalEvents[i]);\r\n            });\r\n        };\r\n\r\n        datas.setFixedDirection = setFixedDirection;\r\n        const nextParams: OnScaleGroupStart = {\r\n            ...params,\r\n            targets: moveable.props.targets!,\r\n            events,\r\n            setFixedDirection,\r\n        };\r\n        const result = triggerEvent(moveable, \"onScaleGroupStart\", nextParams);\r\n\r\n        datas.isScale = result !== false;\r\n        return datas.isScale ? nextParams : false;\r\n    },\r\n    dragGroupControl(moveable: MoveableGroupInterface<any, any>, e: any) {\r\n        const { datas } = e;\r\n        if (!datas.isScale) {\r\n            return;\r\n        }\r\n\r\n        catchEvent(moveable, \"onBeforeScale\", parentEvent => {\r\n            triggerEvent(moveable, \"onBeforeScaleGroup\", fillParams<OnBeforeScaleGroup>(moveable, e, {\r\n                ...parentEvent,\r\n                targets: moveable.props.targets!,\r\n            }, true));\r\n        });\r\n\r\n        const params = this.dragControl(moveable, e);\r\n        if (!params) {\r\n            return;\r\n        }\r\n        const { dist } = params;\r\n        const moveableScale = datas.moveableScale;\r\n        moveable.scale = [\r\n            dist[0] * moveableScale[0],\r\n            dist[1] * moveableScale[1],\r\n        ];\r\n        const keepRatio = moveable.props.keepRatio;\r\n\r\n\r\n        const fixedPosition = datas.fixedPosition;\r\n        const events = triggerChildAbles(\r\n            moveable,\r\n            this,\r\n            \"dragControl\",\r\n            e,\r\n            (_, ev) => {\r\n                const [clientX, clientY] = calculate(\r\n                    createRotateMatrix(moveable.rotation / 180 * Math.PI, 3),\r\n                    [\r\n                        ev.datas.originalX * dist[0],\r\n                        ev.datas.originalY * dist[1],\r\n                        1,\r\n                    ],\r\n                    3,\r\n                );\r\n\r\n                return {\r\n                    ...ev,\r\n                    parentDist: null,\r\n                    parentScale: dist,\r\n                    parentKeepRatio: keepRatio,\r\n                    // recalculate child fixed position for parent group's dragging.\r\n                    dragClient: plus(fixedPosition, [clientX, clientY]),\r\n                };\r\n            },\r\n        );\r\n        const nextParams: OnScaleGroup = {\r\n            targets: moveable.props.targets!,\r\n            events,\r\n            ...params,\r\n        };\r\n\r\n        triggerEvent(moveable, \"onScaleGroup\", nextParams);\r\n        return nextParams;\r\n    },\r\n    dragGroupControlEnd(moveable: MoveableGroupInterface<any, any>, e: any) {\r\n        const { isDrag, datas } = e;\r\n\r\n        if (!datas.isScale) {\r\n            return;\r\n        }\r\n        this.dragControlEnd(moveable, e);\r\n        const events = triggerChildAbles(moveable, this, \"dragControlEnd\", e);\r\n\r\n        const nextParams = fillEndParams<OnScaleGroupEnd>(moveable, e, {\r\n            targets: moveable.props.targets!,\r\n            events,\r\n        });\r\n\r\n        triggerEvent(moveable, \"onScaleGroupEnd\", nextParams);\r\n        return isDrag;\r\n    },\r\n    /**\r\n     * @method Moveable.Scalable#request\r\n     * @param {Moveable.Scalable.ScalableRequestParam} e - the Scalable's request parameter\r\n     * @return {Moveable.Requester} Moveable Requester\r\n     * @example\r\n\r\n     * // Instantly Request (requestStart - request - requestEnd)\r\n     * moveable.request(\"scalable\", { deltaWidth: 10, deltaHeight: 10 }, true);\r\n     *\r\n     * // requestStart\r\n     * const requester = moveable.request(\"scalable\");\r\n     *\r\n     * // request\r\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\r\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\r\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\r\n     *\r\n     * // requestEnd\r\n     * requester.requestEnd();\r\n     */\r\n    request() {\r\n        const datas = {};\r\n        let distWidth = 0;\r\n        let distHeight = 0;\r\n        let useSnap = false;\r\n\r\n        return {\r\n            isControl: true,\r\n            requestStart(e: IObject<any>) {\r\n                useSnap = e.useSnap;\r\n\r\n                return {\r\n                    datas,\r\n                    parentDirection: e.direction || [1, 1],\r\n                    useSnap,\r\n                };\r\n            },\r\n            request(e: IObject<any>) {\r\n                distWidth += e.deltaWidth;\r\n                distHeight += e.deltaHeight;\r\n\r\n                return {\r\n                    datas,\r\n                    parentDist: [distWidth, distHeight],\r\n                    parentKeepRatio: e.keepRatio,\r\n                    useSnap,\r\n                };\r\n            },\r\n            requestEnd() {\r\n                return { datas, isDrag: true, useSnap };\r\n            },\r\n        };\r\n    },\r\n};\r\n\r\n/**\r\n * Whether or not target can scaled.\r\n *\r\n * @name Moveable.Scalable#scalable\r\n * @default false\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body);\r\n *\r\n * moveable.scalable = true;\r\n */\r\n\r\n/**\r\n * throttle of scaleX, scaleY when scale.\r\n * @name Moveable.Scalable#throttleScale\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body);\r\n *\r\n * moveable.throttleScale = 0.1;\r\n */\r\n/**\r\n * Set directions to show the control box. (default: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"])\r\n * @name Moveable.Scalable#renderDirections\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     scalable: true,\r\n *   renderDirections: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"],\r\n * });\r\n *\r\n * moveable.renderDirections = [\"nw\", \"ne\", \"sw\", \"se\"];\r\n */\r\n/**\r\n * When resize or scale, keeps a ratio of the width, height. (default: false)\r\n * @name Moveable.Scalable#keepRatio\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     scalable: true,\r\n * });\r\n *\r\n * moveable.keepRatio = true;\r\n */\r\n/**\r\n * When the scale starts, the scaleStart event is called.\r\n * @memberof Moveable.Scalable\r\n * @event scaleStart\r\n * @param {Moveable.Scalable.OnScaleStart} - Parameters for the scaleStart event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, { scalable: true });\r\n * moveable.on(\"scaleStart\", ({ target }) => {\r\n *     console.log(target);\r\n * });\r\n */\r\n/**\r\n * When scaling, `beforeScale` is called before `scale` occurs. In `beforeScale`, you can get and set the pre-value before scaling.\r\n * @memberof Moveable.Scalable\r\n * @event beforeScale\r\n * @param {Moveable.Scalable.OnBeforeScale} - Parameters for the `beforeScale` event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, { scalable: true });\r\n * moveable.on(\"beforeScale\", ({ setFixedDirection }) => {\r\n *     if (shiftKey) {\r\n *        setFixedDirection([0, 0]);\r\n *     }\r\n * });\r\n * moveable.on(\"scale\", ({ target, transform, dist }) => {\r\n *     target.style.transform = transform;\r\n * });\r\n */\r\n\r\n/**\r\n * When scaling, the `scale` event is called.\r\n * @memberof Moveable.Scalable\r\n * @event scale\r\n * @param {Moveable.Scalable.OnScale} - Parameters for the `scale` event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, { scalable: true });\r\n * moveable.on(\"scale\", ({ target, transform, dist }) => {\r\n *     target.style.transform = transform;\r\n * });\r\n */\r\n/**\r\n * When the scale finishes, the `scaleEnd` event is called.\r\n * @memberof Moveable.Scalable\r\n * @event scaleEnd\r\n * @param {Moveable.Scalable.OnScaleEnd} - Parameters for the `scaleEnd` event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, { scalable: true });\r\n * moveable.on(\"scaleEnd\", ({ target, isDrag }) => {\r\n *     console.log(target, isDrag);\r\n * });\r\n */\r\n\r\n/**\r\n* When the group scale starts, the `scaleGroupStart` event is called.\r\n* @memberof Moveable.Scalable\r\n* @event scaleGroupStart\r\n* @param {Moveable.Scalable.OnScaleGroupStart} - Parameters for the `scaleGroupStart` event\r\n* @example\r\n* import Moveable from \"moveable\";\r\n*\r\n* const moveable = new Moveable(document.body, {\r\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\r\n*     scalable: true\r\n* });\r\n* moveable.on(\"scaleGroupStart\", ({ targets }) => {\r\n*     console.log(\"onScaleGroupStart\", targets);\r\n* });\r\n*/\r\n\r\n/**\r\n* When the group scale, the `scaleGroup` event is called.\r\n* @memberof Moveable.Scalable\r\n* @event scaleGroup\r\n* @param {Moveable.Scalable.OnScaleGroup} - Parameters for the `scaleGroup` event\r\n* @example\r\n* import Moveable from \"moveable\";\r\n*\r\n* const moveable = new Moveable(document.body, {\r\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\r\n*     scalable: true\r\n* });\r\n* moveable.on(\"scaleGroup\", ({ targets, events }) => {\r\n*     console.log(\"onScaleGroup\", targets);\r\n*     events.forEach(ev => {\r\n*         const target = ev.target;\r\n*         // ev.drag is a drag event that occurs when the group scale.\r\n*         const left = ev.drag.beforeDist[0];\r\n*         const top = ev.drag.beforeDist[1];\r\n*         const scaleX = ev.scale[0];\r\n*         const scaleY = ev.scale[1];\r\n*     });\r\n* });\r\n*/\r\n\r\n/**\r\n * When the group scale finishes, the `scaleGroupEnd` event is called.\r\n * @memberof Moveable.Scalable\r\n * @event scaleGroupEnd\r\n * @param {Moveable.Scalable.OnScaleGroupEnd} - Parameters for the `scaleGroupEnd` event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\r\n *     scalable: true\r\n * });\r\n * moveable.on(\"scaleGroupEnd\", ({ targets, isDrag }) => {\r\n *     console.log(\"onScaleGroupEnd\", targets, isDrag);\r\n * });\r\n */\r\n","import {\r\n    prefix, getLineStyle, getDirection, getAbsolutePosesByState,\r\n    triggerEvent, fillParams, fillEndParams, getDirectionViewClassName, fillCSSObject,\r\n} from \"../utils\";\r\nimport {\r\n    convertDimension, invert, multiply,\r\n    calculate,\r\n    createIdentityMatrix,\r\n    ignoreDimension,\r\n    minus,\r\n    createWarpMatrix,\r\n    plus,\r\n} from \"@scena/matrix\";\r\nimport { NEARBY_POS } from \"../consts\";\r\nimport {\r\n    setDragStart, getDragDist, getPosIndexesByDirection, setDefaultTransformIndex,\r\n    fillTransformStartEvent, resolveTransformEvent,\r\n    convertTransformFormat, fillOriginalTransform, getTransfromMatrix,\r\n} from \"../gesto/GestoUtils\";\r\nimport {\r\n    WarpableProps, ScalableProps, ResizableProps,\r\n    Renderer, SnappableProps, SnappableState,\r\n    OnWarpStart, OnWarp, OnWarpEnd, MoveableManagerInterface,\r\n} from \"../types\";\r\nimport { hasClass, dot, getRad } from \"@daybrush/utils\";\r\nimport { renderAllDirections } from \"../renderDirections\";\r\nimport { hasGuidelines } from \"./snappable/utils\";\r\nimport { checkMoveableSnapBounds } from \"./snappable/snapBounds\";\r\n\r\nfunction getMiddleLinePos(pos1: number[], pos2: number[]) {\r\n    return pos1.map((pos, i) => dot(pos, pos2[i], 1, 2));\r\n}\r\n\r\nfunction getTriangleRad(pos1: number[], pos2: number[], pos3: number[]) {\r\n    // pos1 Rad\r\n    const rad1 = getRad(pos1, pos2);\r\n    const rad2 = getRad(pos1, pos3);\r\n\r\n    const rad = rad2 - rad1;\r\n\r\n    return rad >= 0 ? rad : rad + 2 * Math.PI;\r\n}\r\n\r\nfunction isValidPos(poses1: number[][], poses2: number[][]) {\r\n    const rad1 = getTriangleRad(poses1[0], poses1[1], poses1[2]);\r\n    const rad2 = getTriangleRad(poses2[0], poses2[1], poses2[2]);\r\n    const pi = Math.PI;\r\n\r\n    if ((rad1 >= pi && rad2 <= pi) || (rad1 <= pi && rad2 >= pi)) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n\r\n/**\r\n * @namespace Moveable.Warpable\r\n * @description Warpable indicates whether the target can be warped(distorted, bented).\r\n */\r\nexport default {\r\n    name: \"warpable\",\r\n    ableGroup: \"size\",\r\n    props: [\r\n        \"warpable\",\r\n        \"renderDirections\",\r\n        \"edge\",\r\n        \"displayAroundControls\",\r\n    ] as const,\r\n    events: [\r\n        \"warpStart\",\r\n        \"warp\",\r\n        \"warpEnd\",\r\n    ] as const,\r\n    viewClassName: getDirectionViewClassName(\"warpable\"),\r\n    render(moveable: MoveableManagerInterface<ResizableProps & ScalableProps & WarpableProps>, React: Renderer): any[] {\r\n        const { resizable, scalable, warpable, zoom } = moveable.props;\r\n\r\n        if (resizable || scalable || !warpable) {\r\n            return [];\r\n        }\r\n        const { pos1, pos2, pos3, pos4 } = moveable.state;\r\n\r\n        const linePosFrom1 = getMiddleLinePos(pos1, pos2);\r\n        const linePosFrom2 = getMiddleLinePos(pos2, pos1);\r\n        const linePosFrom3 = getMiddleLinePos(pos1, pos3);\r\n        const linePosFrom4 = getMiddleLinePos(pos3, pos1);\r\n        const linePosTo1 = getMiddleLinePos(pos3, pos4);\r\n        const linePosTo2 = getMiddleLinePos(pos4, pos3);\r\n        const linePosTo3 = getMiddleLinePos(pos2, pos4);\r\n        const linePosTo4 = getMiddleLinePos(pos4, pos2);\r\n\r\n        return [\r\n            <div className={prefix(\"line\")}\r\n                key=\"middeLine1\" style={getLineStyle(linePosFrom1, linePosTo1, zoom)}></div>,\r\n            <div className={prefix(\"line\")}\r\n                key=\"middeLine2\" style={getLineStyle(linePosFrom2, linePosTo2, zoom)}></div>,\r\n            <div className={prefix(\"line\")}\r\n                key=\"middeLine3\" style={getLineStyle(linePosFrom3, linePosTo3, zoom)}></div>,\r\n            <div className={prefix(\"line\")}\r\n                key=\"middeLine4\" style={getLineStyle(linePosFrom4, linePosTo4, zoom)}></div>,\r\n            ...renderAllDirections(moveable, \"warpable\", React),\r\n        ];\r\n    },\r\n    dragControlCondition(moveable: any, e: any) {\r\n        if (e.isRequest) {\r\n            return false;\r\n        }\r\n        const target = e.inputEvent.target;\r\n\r\n        return hasClass(target, prefix(\"direction\")) && hasClass(target, prefix(\"warpable\"));\r\n    },\r\n    dragControlStart(\r\n        moveable: MoveableManagerInterface<WarpableProps, SnappableState>,\r\n        e: any,\r\n    ) {\r\n        const { datas, inputEvent } = e;\r\n        const { target } = moveable.props;\r\n        const { target: inputTarget } = inputEvent;\r\n        const direction = getDirection(inputTarget, datas);\r\n\r\n        if (!direction || !target) {\r\n            return false;\r\n        }\r\n        const state = moveable.state;\r\n        const {\r\n            transformOrigin, is3d,\r\n            targetTransform, targetMatrix,\r\n            width, height,\r\n            left, top,\r\n        } = state;\r\n\r\n        datas.datas = {};\r\n        datas.targetTransform = targetTransform;\r\n        datas.warpTargetMatrix = is3d ? targetMatrix : convertDimension(targetMatrix, 3, 4);\r\n        datas.targetInverseMatrix = ignoreDimension(invert(datas.warpTargetMatrix, 4), 3, 4);\r\n        datas.direction = direction;\r\n        datas.left = left;\r\n        datas.top = top;\r\n        datas.poses = [\r\n            [0, 0],\r\n            [width, 0],\r\n            [0, height],\r\n            [width, height],\r\n        ].map(p => minus(p, transformOrigin));\r\n\r\n        datas.nextPoses = datas.poses.map(([x, y]: number[]) => calculate(datas.warpTargetMatrix, [x, y, 0, 1], 4));\r\n        datas.startValue = createIdentityMatrix(4);\r\n        datas.prevMatrix = createIdentityMatrix(4);\r\n        datas.absolutePoses = getAbsolutePosesByState(state);\r\n        datas.posIndexes = getPosIndexesByDirection(direction);\r\n\r\n        setDragStart(moveable, e);\r\n        setDefaultTransformIndex(moveable, e, \"matrix3d\");\r\n\r\n        state.snapRenderInfo = {\r\n            request: e.isRequest,\r\n            direction,\r\n        };\r\n\r\n        const params = fillParams<OnWarpStart>(moveable, e, {\r\n            set: (matrix: number[]) => {\r\n                datas.startValue = matrix;\r\n            },\r\n            ...fillTransformStartEvent(moveable, e),\r\n        });\r\n        const result = triggerEvent(moveable, \"onWarpStart\", params);\r\n        if (result !== false) {\r\n            datas.isWarp = true;\r\n        }\r\n        return datas.isWarp;\r\n    },\r\n    dragControl(\r\n        moveable: MoveableManagerInterface<WarpableProps & SnappableProps, SnappableState>,\r\n        e: any,\r\n    ) {\r\n        const { datas, isRequest } = e;\r\n        let { distX, distY } = e;\r\n        const {\r\n            targetInverseMatrix, prevMatrix, isWarp, startValue,\r\n            poses,\r\n            posIndexes,\r\n            absolutePoses,\r\n        } = datas;\r\n\r\n        if (!isWarp) {\r\n            return false;\r\n        }\r\n        resolveTransformEvent(moveable, e, \"matrix3d\");\r\n        if (hasGuidelines(moveable, \"warpable\")) {\r\n            const selectedPoses: number[][] = posIndexes.map((index: number) => absolutePoses[index]);\r\n\r\n            if (selectedPoses.length > 1) {\r\n                selectedPoses.push([\r\n                    (selectedPoses[0][0] + selectedPoses[1][0]) / 2,\r\n                    (selectedPoses[0][1] + selectedPoses[1][1]) / 2,\r\n                ]);\r\n            }\r\n\r\n            const {\r\n                horizontal: horizontalSnapInfo,\r\n                vertical: verticalSnapInfo,\r\n            } = checkMoveableSnapBounds(\r\n                moveable,\r\n                isRequest,\r\n                {\r\n                    horizontal: selectedPoses.map(pos => pos[1] + distY),\r\n                    vertical: selectedPoses.map(pos => pos[0] + distX),\r\n                },\r\n            );\r\n\r\n            distY -= horizontalSnapInfo.offset;\r\n            distX -= verticalSnapInfo.offset;\r\n        }\r\n\r\n        const dist = getDragDist({ datas, distX, distY }, true);\r\n        const nextPoses = datas.nextPoses.slice();\r\n\r\n        posIndexes.forEach((index: number) => {\r\n            nextPoses[index] = plus(nextPoses[index], dist);\r\n        });\r\n\r\n        if (!NEARBY_POS.every(\r\n            nearByPoses => isValidPos(nearByPoses.map(i => poses[i]), nearByPoses.map(i => nextPoses[i])),\r\n        )) {\r\n            return false;\r\n        }\r\n        const h = createWarpMatrix(\r\n            poses[0],\r\n            poses[2],\r\n            poses[1],\r\n            poses[3],\r\n            nextPoses[0],\r\n            nextPoses[2],\r\n            nextPoses[1],\r\n            nextPoses[3],\r\n        );\r\n\r\n        if (!h.length) {\r\n            return false;\r\n        }\r\n        // B * A * M\r\n        const afterMatrix = multiply(targetInverseMatrix, h, 4);\r\n\r\n        // B * M * A\r\n        const matrix = getTransfromMatrix(datas, afterMatrix, true);\r\n\r\n        const delta = multiply(invert(prevMatrix, 4), matrix, 4);\r\n\r\n        datas.prevMatrix = matrix;\r\n        const totalMatrix = multiply(startValue, matrix, 4);\r\n        const nextTransform = convertTransformFormat(\r\n            datas, `matrix3d(${totalMatrix.join(\", \")})`, `matrix3d(${matrix.join(\", \")})`);\r\n\r\n        fillOriginalTransform(e, nextTransform);\r\n        triggerEvent(moveable, \"onWarp\", fillParams<OnWarp>(moveable, e, {\r\n            delta,\r\n            matrix: totalMatrix,\r\n            dist: matrix,\r\n            multiply,\r\n            transform: nextTransform,\r\n            ...fillCSSObject({\r\n                transform: nextTransform,\r\n            }, e),\r\n        }));\r\n        return true;\r\n    },\r\n    dragControlEnd(\r\n        moveable: MoveableManagerInterface<WarpableProps>,\r\n        e: any,\r\n    ) {\r\n        const { datas, isDrag } = e;\r\n        if (!datas.isWarp) {\r\n            return false;\r\n        }\r\n        datas.isWarp = false;\r\n\r\n        triggerEvent(moveable, \"onWarpEnd\", fillEndParams<OnWarpEnd>(moveable, e, {}));\r\n        return isDrag;\r\n    },\r\n};\r\n\r\n/**\r\n * Whether or not target can be warped. (default: false)\r\n * @name Moveable.Warpable#warpable\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body);\r\n *\r\n * moveable.warpable = true;\r\n */\r\n\r\n/**\r\n* Set directions to show the control box. (default: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"])\r\n* @name Moveable.Warpable#renderDirections\r\n* @example\r\n* import Moveable from \"moveable\";\r\n*\r\n* const moveable = new Moveable(document.body, {\r\n*     warpable: true,\r\n*     renderDirections: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"],\r\n* });\r\n*\r\n* moveable.renderDirections = [\"nw\", \"ne\", \"sw\", \"se\"];\r\n*/\r\n/**\r\n* When the warp starts, the warpStart event is called.\r\n* @memberof Moveable.Warpable\r\n* @event warpStart\r\n* @param {Moveable.Warpable.OnWarpStart} - Parameters for the warpStart event\r\n* @example\r\n* import Moveable from \"moveable\";\r\n*\r\n* const moveable = new Moveable(document.body, { warpable: true });\r\n* moveable.on(\"warpStart\", ({ target }) => {\r\n*     console.log(target);\r\n* });\r\n*/\r\n/**\r\n * When warping, the warp event is called.\r\n * @memberof Moveable.Warpable\r\n * @event warp\r\n * @param {Moveable.Warpable.OnWarp} - Parameters for the warp event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n * let matrix = [\r\n *  1, 0, 0, 0,\r\n *  0, 1, 0, 0,\r\n *  0, 0, 1, 0,\r\n *  0, 0, 0, 1,\r\n * ];\r\n * const moveable = new Moveable(document.body, { warpable: true });\r\n * moveable.on(\"warp\", ({ target, transform, delta, multiply }) => {\r\n *    // target.style.transform = transform;\r\n *    matrix = multiply(matrix, delta);\r\n *    target.style.transform = `matrix3d(${matrix.join(\",\")})`;\r\n * });\r\n */\r\n/**\r\n * When the warp finishes, the warpEnd event is called.\r\n * @memberof Moveable.Warpable\r\n * @event warpEnd\r\n * @param {Moveable.Warpable.OnWarpEnd} - Parameters for the warpEnd event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, { warpable: true });\r\n * moveable.on(\"warpEnd\", ({ target, isDrag }) => {\r\n *     console.log(target, isDrag);\r\n * });\r\n */\r\n","import { prefix } from \"./utils\";\r\n\r\nexport const AREA_PIECES = /*#__PURE__*/prefix(\"area-pieces\");\r\nexport const AREA_PIECE = /*#__PURE__*/prefix(\"area-piece\");\r\nexport const AVOID = /*#__PURE__*/prefix(\"avoid\");\r\nexport const VIEW_DRAGGING = prefix(\"view-dragging\");\r\n","import {\r\n    createWarpMatrix,\r\n} from \"@scena/matrix\";\r\nimport { ref } from \"framework-utils\";\r\nimport { getRect, calculateInversePosition, makeMatrixCSS, prefix } from \"../utils\";\r\nimport {\r\n    Renderer, GroupableProps, DragAreaProps, MoveableManagerInterface, MoveableGroupInterface,\r\n} from \"../types\";\r\nimport { AREA_PIECE, AVOID, AREA_PIECES } from \"../classNames\";\r\nimport { addClass, removeClass, requestAnimationFrame } from \"@daybrush/utils\";\r\n\r\nfunction restoreStyle(moveable: MoveableManagerInterface) {\r\n    const el = moveable.areaElement;\r\n\r\n    if (!el) {\r\n        return;\r\n    }\r\n    const { width, height } = moveable.state;\r\n\r\n    removeClass(el, AVOID);\r\n\r\n    el.style.cssText += `left: 0px; top: 0px; width: ${width}px; height: ${height}px`;\r\n}\r\n\r\nfunction renderPieces(React: Renderer): any {\r\n    return (<div key=\"area_pieces\" className={AREA_PIECES}>\r\n        <div className={AREA_PIECE}></div>\r\n        <div className={AREA_PIECE}></div>\r\n        <div className={AREA_PIECE}></div>\r\n        <div className={AREA_PIECE}></div>\r\n    </div>);\r\n}\r\nexport default {\r\n    name: \"dragArea\",\r\n    props: [\r\n        \"dragArea\",\r\n        \"passDragArea\",\r\n    ] as const,\r\n    events: [\r\n        \"click\",\r\n        \"clickGroup\",\r\n    ] as const,\r\n    render(moveable: MoveableManagerInterface<GroupableProps>, React: Renderer): any[] {\r\n        const { target, dragArea, groupable, passDragArea } = moveable.props;\r\n        const { width, height, renderPoses } = moveable.getState();\r\n\r\n        const className = passDragArea ? prefix(\"area\", \"pass\") : prefix(\"area\");\r\n        if (groupable) {\r\n            return [\r\n                <div key=\"area\" ref={ref(moveable, \"areaElement\")} className={className}></div>,\r\n                renderPieces(React),\r\n            ];\r\n        }\r\n        if (!target || !dragArea) {\r\n            return [];\r\n        }\r\n        const h = createWarpMatrix(\r\n            [0, 0],\r\n            [width, 0],\r\n            [0, height],\r\n            [width, height],\r\n            renderPoses[0],\r\n            renderPoses[1],\r\n            renderPoses[2],\r\n            renderPoses[3],\r\n        );\r\n        const transform = h.length ? makeMatrixCSS(h, true) : \"none\";\r\n\r\n        return [\r\n            <div key=\"area\" ref={ref(moveable, \"areaElement\")} className={className} style={{\r\n                top: \"0px\",\r\n                left: \"0px\",\r\n                width: `${width}px`,\r\n                height: `${height}px`,\r\n                transformOrigin: \"0 0\",\r\n                transform,\r\n            }}></div>,\r\n            renderPieces(React),\r\n        ];\r\n    },\r\n    dragStart(moveable: MoveableManagerInterface, { datas, clientX, clientY, inputEvent }: any) {\r\n        if (!inputEvent) {\r\n            return false;\r\n        }\r\n        datas.isDragArea = false;\r\n        const areaElement = moveable.areaElement;\r\n        const state = moveable.state;\r\n        const {\r\n            moveableClientRect,\r\n            renderPoses,\r\n            rootMatrix,\r\n            is3d,\r\n        } = state;\r\n        const { left, top } = moveableClientRect;\r\n        const {\r\n            left: relativeLeft,\r\n            top: relativeTop,\r\n            width,\r\n            height,\r\n        } = getRect(renderPoses);\r\n        const n = is3d ? 4 : 3;\r\n        let [posX, posY] = calculateInversePosition(rootMatrix, [clientX - left, clientY - top], n);\r\n\r\n        posX -= relativeLeft;\r\n        posY -= relativeTop;\r\n        const rects = [\r\n            { left: relativeLeft, top: relativeTop, width, height: posY - 10 },\r\n            { left: relativeLeft, top: relativeTop, width: posX - 10, height },\r\n            { left: relativeLeft, top: relativeTop + posY + 10, width, height: height - posY - 10 },\r\n            { left: relativeLeft + posX + 10, top: relativeTop, width: width - posX - 10, height },\r\n        ];\r\n\r\n        const children = [].slice.call(areaElement.nextElementSibling!.children) as HTMLElement[];\r\n        rects.forEach((rect, i) => {\r\n            children[i].style.cssText\r\n                = `left: ${rect.left}px;top: ${rect.top}px; width: ${rect.width}px; height: ${rect.height}px;`;\r\n        });\r\n        addClass(areaElement, AVOID);\r\n        state.disableNativeEvent = true;\r\n        return;\r\n    },\r\n    drag(moveable: MoveableManagerInterface, { datas, inputEvent }: any) {\r\n        this.enableNativeEvent(moveable);\r\n        if (!inputEvent) {\r\n            return false;\r\n        }\r\n        if (!datas.isDragArea) {\r\n            datas.isDragArea = true;\r\n            restoreStyle(moveable);\r\n        }\r\n    },\r\n    dragEnd(moveable: MoveableManagerInterface<DragAreaProps>, e: any) {\r\n        this.enableNativeEvent(moveable);\r\n        const { inputEvent, datas } = e;\r\n        if (!inputEvent) {\r\n            return false;\r\n        }\r\n        if (!datas.isDragArea) {\r\n            restoreStyle(moveable);\r\n        }\r\n    },\r\n    dragGroupStart(moveable: MoveableGroupInterface, e: any) {\r\n        return this.dragStart(moveable, e);\r\n    },\r\n    dragGroup(moveable: MoveableGroupInterface, e: any) {\r\n        return this.drag(moveable, e);\r\n    },\r\n    dragGroupEnd(\r\n        moveable: MoveableGroupInterface<DragAreaProps>,\r\n        e: any,\r\n    ) {\r\n        return this.dragEnd(moveable, e);\r\n    },\r\n    unset(moveable: MoveableManagerInterface<DragAreaProps>) {\r\n        restoreStyle(moveable);\r\n        moveable.state.disableNativeEvent = false;\r\n    },\r\n    enableNativeEvent(moveable: MoveableManagerInterface<DragAreaProps>) {\r\n        const state = moveable.state;\r\n        if (state.disableNativeEvent) {\r\n            requestAnimationFrame(() => {\r\n                state.disableNativeEvent = false;\r\n            });\r\n        }\r\n    },\r\n};\r\n\r\n/**\r\n * Add an event to the moveable area instead of the target for stopPropagation. (default: false, true in group)\r\n * @name Moveable#dragArea\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *  dragArea: false,\r\n * });\r\n */\r\n/**\r\n * Set `pointerEvents: none;` css to pass events in dragArea. (default: false)\r\n * @name Moveable#passDragArea\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *  dragArea: false,\r\n * });\r\n */\r\n","import { prefix, getControlTransform, calculatePosition, convertTransformOriginArray } from \"../utils\";\r\nimport { Renderer, OriginOptions, MoveableManagerInterface } from \"../types\";\r\nimport { makeAble } from \"./AbleManager\";\r\nimport { minus } from \"@scena/matrix\";\r\n\r\nexport default makeAble(\"origin\", {\r\n    props: [\"origin\", \"svgOrigin\"] as const,\r\n    render(moveable: MoveableManagerInterface<OriginOptions>, React: Renderer): any[] {\r\n        const { zoom, svgOrigin, groupable } = moveable.props;\r\n        const {\r\n            beforeOrigin, rotation, svg, allMatrix, is3d,\r\n            left, top, offsetWidth, offsetHeight,\r\n        } = moveable.getState();\r\n\r\n        let originStyle!: Record<string, any>;\r\n\r\n        if (!groupable && svg && svgOrigin) {\r\n            const [originX, originY] = convertTransformOriginArray(svgOrigin, offsetWidth, offsetHeight);\r\n            const n = is3d ? 4 : 3;\r\n            const result = calculatePosition(\r\n                allMatrix,\r\n                [originX, originY],\r\n                n,\r\n            );\r\n            originStyle = getControlTransform(rotation, zoom!, minus(result, [left, top]));\r\n        } else {\r\n            originStyle = getControlTransform(rotation, zoom!, beforeOrigin);\r\n        }\r\n        return [\r\n            <div className={prefix(\"control\", \"origin\")} style={originStyle} key=\"beforeOrigin\"></div>,\r\n        ];\r\n    },\r\n});\r\n\r\n/**\r\n * Whether or not the origin controlbox will be visible or not (default: true)\r\n * @name Moveable#origin\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body);\r\n *\r\n * moveable.origin = true;\r\n */\r\n","\r\nimport {\r\n    ScrollableProps, OnScroll, MoveableManagerInterface,\r\n    MoveableGroupInterface, MoveableRefType,\r\n} from \"../types\";\r\nimport { triggerEvent, fillParams, getRefTarget } from \"../utils\";\r\nimport DragScroll from \"@scena/dragscroll\";\r\n\r\nfunction getDefaultScrollPosition(e: { scrollContainer: HTMLElement, direction: number[] }) {\r\n    const scrollContainer = e.scrollContainer;\r\n\r\n    return [\r\n        scrollContainer.scrollLeft,\r\n        scrollContainer.scrollTop,\r\n    ];\r\n}\r\n/**\r\n * @namespace Moveable.Scrollable\r\n * @description Whether or not target can be scrolled to the scroll container (default: false)\r\n */\r\nexport default {\r\n    name: \"scrollable\",\r\n    canPinch: true,\r\n    props: [\r\n        \"scrollable\",\r\n        \"scrollContainer\",\r\n        \"scrollThreshold\",\r\n        \"scrollThrottleTime\",\r\n        \"getScrollPosition\",\r\n        \"scrollOptions\",\r\n    ] as const,\r\n    events: [\r\n        \"scroll\",\r\n        \"scrollGroup\",\r\n    ] as const,\r\n    dragRelation: \"strong\",\r\n    dragStart(moveable: MoveableManagerInterface<ScrollableProps, Record<string, any>>, e: any) {\r\n        const props = moveable.props;\r\n        const {\r\n            scrollContainer = moveable.getContainer() as HTMLElement,\r\n            scrollOptions,\r\n        } = props;\r\n\r\n        const dragScroll = new DragScroll();\r\n        const scrollContainerElement = getRefTarget<HTMLElement>(scrollContainer, true);\r\n\r\n        e.datas.dragScroll = dragScroll;\r\n        moveable.state.dragScroll = dragScroll;\r\n\r\n        const gestoName = e.isControl ? \"controlGesto\" : \"targetGesto\";\r\n        const targets = e.targets;\r\n\r\n        dragScroll.on(\"scroll\", ({ container, direction }) => {\r\n            const params = fillParams<OnScroll>(moveable, e, {\r\n                scrollContainer: container,\r\n                direction,\r\n            }) as any;\r\n\r\n            const eventName = targets ? \"onScrollGroup\" : \"onScroll\" as any;\r\n            if (targets) {\r\n                params.targets = targets;\r\n            }\r\n            triggerEvent(moveable, eventName, params);\r\n        }).on(\"move\", ({ offsetX, offsetY, inputEvent }) => {\r\n            moveable[gestoName].scrollBy(offsetX, offsetY, inputEvent.inputEvent, false);\r\n        }).on(\"scrollDrag\", ({ next }) => {\r\n            next(moveable[gestoName].getCurrentEvent());\r\n        });\r\n        dragScroll.dragStart(e, {\r\n            container: scrollContainerElement!,\r\n            ...scrollOptions,\r\n        });\r\n    },\r\n    checkScroll(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\r\n        const dragScroll = e.datas.dragScroll as DragScroll;\r\n\r\n        if (!dragScroll) {\r\n            return;\r\n        }\r\n        const {\r\n            scrollContainer = moveable.getContainer() as MoveableRefType<HTMLElement>,\r\n            scrollThreshold = 0,\r\n            scrollThrottleTime = 0,\r\n            getScrollPosition = getDefaultScrollPosition,\r\n            scrollOptions,\r\n        } = moveable.props;\r\n\r\n        dragScroll.drag(e, {\r\n            container: scrollContainer!,\r\n            threshold: scrollThreshold,\r\n            throttleTime: scrollThrottleTime,\r\n            getScrollPosition: (ev: any) => {\r\n                return getScrollPosition({ scrollContainer: ev.container, direction: ev.direction });\r\n            },\r\n            ...scrollOptions,\r\n        });\r\n\r\n        return true;\r\n    },\r\n    drag(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\r\n        return this.checkScroll(moveable, e);\r\n    },\r\n    dragEnd(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\r\n        e.datas.dragScroll.dragEnd();\r\n        e.datas.dragScroll = null;\r\n    },\r\n    dragControlStart(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\r\n        return this.dragStart(moveable, { ...e, isControl: true });\r\n    },\r\n    dragControl(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\r\n        return this.drag(moveable, e);\r\n    },\r\n    dragControlEnd(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\r\n        return this.dragEnd(moveable, e);\r\n    },\r\n    dragGroupStart(moveable: MoveableGroupInterface, e: any) {\r\n        return this.dragStart(moveable, { ...e, targets: moveable.props.targets });\r\n    },\r\n    dragGroup(moveable: MoveableGroupInterface, e: any) {\r\n        return this.drag(moveable, { ...e, targets: moveable.props.targets });\r\n    },\r\n    dragGroupEnd(moveable: MoveableGroupInterface, e: any) {\r\n        return this.dragEnd(moveable, { ...e, targets: moveable.props.targets });\r\n    },\r\n    dragGroupControlStart(moveable: MoveableGroupInterface, e: any) {\r\n        return this.dragStart(moveable, { ...e, targets: moveable.props.targets, isControl: true });\r\n    },\r\n    dragGroupControl(moveable: MoveableGroupInterface, e: any) {\r\n        return this.drag(moveable, { ...e, targets: moveable.props.targets });\r\n    },\r\n    dragGroupControEnd(moveable: MoveableGroupInterface, e: any) {\r\n        return this.dragEnd(moveable, { ...e, targets: moveable.props.targets });\r\n    },\r\n    unset(moveable: MoveableManagerInterface<ScrollableProps, Record<string, any>>) {\r\n        const state = moveable.state;\r\n\r\n        state.dragScroll?.dragEnd();\r\n        state.dragScroll = null;\r\n    },\r\n};\r\n\r\n/**\r\n * When the drag cursor leaves the scrollContainer, the `scroll` event occur to scroll.\r\n * @memberof Moveable.Scrollable\r\n * @event scroll\r\n * @param {Moveable.Scrollable.OnScroll} - Parameters for the `scroll` event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     target: document.querySelector(\".target\"),\r\n * });\r\n * moveable.on(\"scroll\", ({ scrollContainer, direction }) => {\r\n *   scrollContainer.scrollLeft += direction[0] * 10;\r\n *   scrollContainer.scrollTop += direction[1] * 10;\r\n * });\r\n */\r\n\r\n/**\r\n * When the drag cursor leaves the scrollContainer, the `scrollGroup` event occur to scroll in group.\r\n * @memberof Moveable.Scrollable\r\n * @event scrollGroup\r\n * @param {Moveable.Scrollable.OnScrollGroup} - Parameters for the `scrollGroup` event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\r\n * });\r\n * moveable.on(\"scroll\", ({ scrollContainer, direction }) => {\r\n *   scrollContainer.scrollLeft += direction[0] * 10;\r\n *   scrollContainer.scrollTop += direction[1] * 10;\r\n * });\r\n */\r\n","export default {\r\n    name: \"\",\r\n    props: [\r\n        \"target\",\r\n        \"dragTargetSelf\",\r\n        \"dragTarget\",\r\n        \"dragContainer\",\r\n        \"container\",\r\n        \"warpSelf\",\r\n        \"rootContainer\",\r\n        \"useResizeObserver\",\r\n        \"useMutationObserver\",\r\n        \"zoom\",\r\n        \"dragFocusedInput\",\r\n        \"transformOrigin\",\r\n        \"ables\",\r\n        \"className\",\r\n        \"pinchThreshold\",\r\n        \"pinchOutside\",\r\n        \"triggerAblesSimultaneously\",\r\n        \"checkInput\",\r\n        \"cspNonce\",\r\n        \"translateZ\",\r\n        \"hideDefaultLines\",\r\n        \"props\",\r\n        \"flushSync\",\r\n        \"stopPropagation\",\r\n        \"preventClickEventOnDrag\",\r\n        \"preventClickDefault\",\r\n        \"viewContainer\",\r\n        \"persistData\",\r\n        \"useAccuratePosition\",\r\n        \"firstRenderState\",\r\n        \"linePadding\",\r\n        \"controlPadding\",\r\n        \"preventDefault\",\r\n        \"requestStyles\",\r\n    ] as const,\r\n    events: [\r\n        \"changeTargets\",\r\n    ] as const,\r\n};\r\n","import { prefix, makeMatrixCSS, getPaddingBox } from \"../utils\";\r\nimport { Renderer, MoveableManagerInterface } from \"../types\";\r\nimport { createWarpMatrix } from \"@scena/matrix\";\r\nimport { makeAble } from \"./AbleManager\";\r\n\r\nexport default makeAble(\"padding\", {\r\n    props: [\"padding\"] as const,\r\n    render(moveable: MoveableManagerInterface, React: Renderer): any[] {\r\n        const props = moveable.props;\r\n        if (props.dragArea) {\r\n            return [];\r\n        }\r\n        const {\r\n            left,\r\n            top,\r\n            right,\r\n            bottom,\r\n        } = getPaddingBox(props.padding || {});\r\n        const {\r\n            renderPoses,\r\n            pos1,\r\n            pos2,\r\n            pos3,\r\n            pos4,\r\n        } = moveable.getState();\r\n\r\n        const poses = [pos1, pos2, pos3, pos4];\r\n        const paddingDirections: number[][] = [];\r\n\r\n        if (left > 0) {\r\n            paddingDirections.push([0, 2]);\r\n        }\r\n        if (top > 0) {\r\n            paddingDirections.push([0, 1]);\r\n        }\r\n        if (right > 0) {\r\n            paddingDirections.push([1, 3]);\r\n        }\r\n        if (bottom > 0) {\r\n            paddingDirections.push([2, 3]);\r\n        }\r\n        return paddingDirections.map(([dir1, dir2], i) => {\r\n            const paddingPos1 = poses[dir1];\r\n            const paddingPos2 = poses[dir2];\r\n            const paddingPos3 = renderPoses[dir1];\r\n            const paddingPos4 = renderPoses[dir2];\r\n\r\n            const h = createWarpMatrix(\r\n                [0, 0],\r\n                [100, 0],\r\n                [0, 100],\r\n                [100, 100],\r\n                paddingPos1,\r\n                paddingPos2,\r\n                paddingPos3,\r\n                paddingPos4,\r\n            );\r\n            if (!h.length) {\r\n                return undefined;\r\n            }\r\n            return (<div key={`padding${i}`} className={prefix(\"padding\")} style={{\r\n                transform: makeMatrixCSS(h, true),\r\n            }}></div>);\r\n        });\r\n    },\r\n});\r\n\r\n/**\r\n * Add padding around the target to increase the drag area.\r\n * @name Moveable#padding\r\n * @default null\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *  target: document.querySelector(\".target\"),\r\n *  padding: { left: 0, top: 0, right: 0, bottom: 0 },\r\n * });\r\n * moveable.padding = { left: 10, top: 10, right: 10, bottom: 10 },\r\n * moveable.updateRect();\r\n */\r\n","import { convertCSSSize } from \"../../utils\";\r\nimport { ControlPose } from \"../../types\";\r\nimport { convertUnitSize } from \"@daybrush/utils\";\r\n\r\nconst RADIUS_DIRECTIONS = [\"nw\", \"ne\", \"se\", \"sw\"] as const;\r\n\r\nfunction calculateRatio(values: number[], size: number) {\r\n    const sumSize = values[0] + values[1];\r\n    const sumRatio = sumSize > size ? size / sumSize : 1;\r\n\r\n    values[0] *= sumRatio;\r\n    values[1] = size - values[1] * sumRatio;\r\n\r\n    return values;\r\n}\r\nexport const HORIZONTAL_RADIUS_ORDER = [1, 2, 5, 6];\r\nexport const VERTICAL_RADIUS_ORDER = [0, 3, 4, 7];\r\nexport const HORIZONTAL_RADIUS_DIRECTIONS = [1, -1, -1, 1] as const;\r\nexport const VERTICAL_RADIUS_DIRECTIONS = [1, 1, -1, -1] as const;\r\n\r\nexport function getRadiusStyles(\r\n    nextPoses: ControlPose[],\r\n    isRelative: boolean,\r\n    width: number,\r\n    height: number,\r\n    left = 0,\r\n    top = 0,\r\n    right: number = width,\r\n    bottom: number = height,\r\n) {\r\n    const clipStyles: string[] = [];\r\n    let isVertical = false;\r\n\r\n    const radiusPoses = nextPoses.filter(pos => !pos.virtual);\r\n    const raws = radiusPoses.map(posInfo => {\r\n        const { horizontal, vertical, pos } = posInfo;\r\n\r\n        if (vertical && !isVertical) {\r\n            isVertical = true;\r\n            clipStyles.push(\"/\");\r\n        }\r\n\r\n        if (isVertical) {\r\n            const rawPos = Math.max(0, vertical === 1 ? pos[1] - top : bottom - pos[1]);\r\n            clipStyles.push(convertCSSSize(rawPos, height, isRelative));\r\n\r\n            return rawPos;\r\n        } else {\r\n            const rawPos = Math.max(0, horizontal === 1 ? pos[0] - left : right - pos[0]);\r\n            clipStyles.push(convertCSSSize(rawPos, width, isRelative));\r\n\r\n            return rawPos;\r\n        }\r\n    });\r\n\r\n    return {\r\n        radiusPoses,\r\n        styles: clipStyles,\r\n        raws,\r\n    };\r\n}\r\nexport function getRadiusRange(controlPoses: ControlPose[]) {\r\n    // [start, length]\r\n    const horizontalRange = [0, 0];\r\n    const verticalRange = [0, 0];\r\n    const length = controlPoses.length;\r\n\r\n    for (let i = 0; i < length; ++i) {\r\n        const clipPose = controlPoses[i];\r\n\r\n        if (!clipPose.sub) {\r\n            continue;\r\n        }\r\n        if (clipPose.horizontal) {\r\n            if (horizontalRange[1] === 0) {\r\n                horizontalRange[0] = i;\r\n            }\r\n            horizontalRange[1] = i - horizontalRange[0] + 1;\r\n            verticalRange[0] = i + 1;\r\n        }\r\n        if (clipPose.vertical) {\r\n            if (verticalRange[1] === 0) {\r\n                verticalRange[0] = i;\r\n            }\r\n            verticalRange[1] = i - verticalRange[0] + 1;\r\n        }\r\n    }\r\n\r\n    return {\r\n        horizontalRange,\r\n        verticalRange,\r\n    };\r\n}\r\nexport function getRadiusValues(\r\n    values: string[],\r\n    width: number,\r\n    height: number,\r\n    left: number,\r\n    top: number,\r\n    minCounts: number[] = [0, 0],\r\n    full = false,\r\n): ControlPose[] {\r\n    const splitIndex = values.indexOf(\"/\");\r\n    const splitLength = (splitIndex > -1 ? values.slice(0, splitIndex) : values).length;\r\n    const horizontalValues = values.slice(0, splitLength);\r\n    const verticalValues = values.slice(splitLength + 1);\r\n    const horizontalValuesLength = horizontalValues.length;\r\n    const verticalValuesLength = verticalValues.length;\r\n    const hasVerticalValues = verticalValuesLength > 0;\r\n    const [\r\n        nwValue = \"0px\",\r\n        neValue = nwValue,\r\n        seValue = nwValue,\r\n        swValue = neValue,\r\n    ] = horizontalValues;\r\n    const [\r\n        wnValue = nwValue,\r\n        enValue = hasVerticalValues ? wnValue : neValue,\r\n        esValue = hasVerticalValues ? wnValue : seValue,\r\n        wsValue = hasVerticalValues ? enValue : swValue,\r\n    ] = verticalValues;\r\n\r\n    const horizontalRawPoses = [nwValue, neValue, seValue, swValue].map(pos => convertUnitSize(pos, width));\r\n    const verticalRawPoses = [wnValue, enValue, esValue, wsValue].map(pos => convertUnitSize(pos, height));\r\n    const horizontalPoses = horizontalRawPoses.slice();\r\n    const verticalPoses = verticalRawPoses.slice();\r\n\r\n    [horizontalPoses[0], horizontalPoses[1]] = calculateRatio(\r\n        [horizontalPoses[0], horizontalPoses[1]],\r\n        width,\r\n    );\r\n    [horizontalPoses[3], horizontalPoses[2]] = calculateRatio(\r\n        [horizontalPoses[3], horizontalPoses[2]],\r\n        width,\r\n    );\r\n    [verticalPoses[0], verticalPoses[3]] = calculateRatio(\r\n        [verticalPoses[0], verticalPoses[3]], height,\r\n    );\r\n    [verticalPoses[1], verticalPoses[2]] = calculateRatio(\r\n        [verticalPoses[1], verticalPoses[2]], height,\r\n    );\r\n\r\n    const nextHorizontalPoses = full\r\n        ? horizontalPoses\r\n        : horizontalPoses.slice(0, Math.max(minCounts[0], horizontalValuesLength));\r\n    const nextVerticalPoses = full\r\n        ? verticalPoses\r\n        : verticalPoses.slice(0, Math.max(minCounts[1], verticalValuesLength));\r\n\r\n    return [\r\n        ...nextHorizontalPoses.map((pos, i) => {\r\n            const direction = RADIUS_DIRECTIONS[i];\r\n\r\n            return {\r\n                virtual: i >= horizontalValuesLength,\r\n                horizontal: HORIZONTAL_RADIUS_DIRECTIONS[i],\r\n                vertical: 0,\r\n                pos: [left + pos, top + (VERTICAL_RADIUS_DIRECTIONS[i] === -1 ? height : 0)],\r\n                sub: true,\r\n                raw: horizontalRawPoses[i],\r\n                direction,\r\n            };\r\n        }),\r\n        ...nextVerticalPoses.map((pos, i) => {\r\n            const direction = RADIUS_DIRECTIONS[i];\r\n\r\n            return {\r\n                virtual: i >= verticalValuesLength,\r\n                horizontal: 0,\r\n                vertical: VERTICAL_RADIUS_DIRECTIONS[i],\r\n                pos: [left + (HORIZONTAL_RADIUS_DIRECTIONS[i] === -1 ? width : 0), top + pos],\r\n                sub: true,\r\n                raw: verticalRawPoses[i],\r\n                direction,\r\n            };\r\n        }),\r\n    ];\r\n}\r\nexport function removeRadiusPos(\r\n    controlPoses: ControlPose[],\r\n    poses: number[][],\r\n    index: number,\r\n    startIndex: number,\r\n    length: number = poses.length,\r\n) {\r\n    const {\r\n        horizontalRange,\r\n        verticalRange,\r\n    } = getRadiusRange(controlPoses.slice(startIndex));\r\n    const radiuslIndex = index - startIndex;\r\n    let deleteCount = 0;\r\n\r\n    if (radiuslIndex === 0) {\r\n        deleteCount = length;\r\n    } else if (radiuslIndex > 0 && radiuslIndex < horizontalRange[1]) {\r\n        deleteCount = horizontalRange[1] - radiuslIndex;\r\n    } else if (radiuslIndex >= verticalRange[0]) {\r\n        deleteCount = verticalRange[0] + verticalRange[1] - radiuslIndex;\r\n    } else {\r\n        return;\r\n    }\r\n    controlPoses.splice(index, deleteCount);\r\n    poses.splice(index, deleteCount);\r\n}\r\nexport function addRadiusPos(\r\n    controlPoses: ControlPose[],\r\n    poses: number[][],\r\n    startIndex: number,\r\n    horizontalIndex: number,\r\n    verticalIndex: number,\r\n    distX: number,\r\n    distY: number,\r\n    right: number,\r\n    bottom: number,\r\n    left = 0,\r\n    top = 0,\r\n) {\r\n    const {\r\n        horizontalRange,\r\n        verticalRange,\r\n    } = getRadiusRange(controlPoses.slice(startIndex));\r\n    if (horizontalIndex > -1) {\r\n        const radiusX = HORIZONTAL_RADIUS_DIRECTIONS[horizontalIndex] === 1\r\n            ? distX - left\r\n            : right - distX;\r\n        for (let i = horizontalRange[1]; i <= horizontalIndex; ++i) {\r\n            const y = VERTICAL_RADIUS_DIRECTIONS[i] === 1 ? top : bottom;\r\n            let x = 0;\r\n            if (horizontalIndex === i) {\r\n                x = distX;\r\n            } else if (i === 0) {\r\n                x = left + radiusX;\r\n            } else if (HORIZONTAL_RADIUS_DIRECTIONS[i] === -1) {\r\n                x = right - (poses[startIndex][0] - left);\r\n            }\r\n            controlPoses.splice(startIndex + i, 0, {\r\n                horizontal: HORIZONTAL_RADIUS_DIRECTIONS[i],\r\n                vertical: 0,\r\n                pos: [x, y],\r\n            });\r\n            poses.splice(startIndex + i, 0, [x, y]);\r\n\r\n            if (i === 0) {\r\n                break;\r\n            }\r\n        }\r\n    } else if (verticalIndex > - 1) {\r\n        const radiusY = VERTICAL_RADIUS_DIRECTIONS[verticalIndex] === 1\r\n            ? distY - top\r\n            : bottom - distY;\r\n        if (horizontalRange[1] === 0 && verticalRange[1] === 0) {\r\n            const pos = [\r\n                left + radiusY,\r\n                top,\r\n            ];\r\n            controlPoses.push({\r\n                horizontal: HORIZONTAL_RADIUS_DIRECTIONS[0],\r\n                vertical: 0,\r\n                pos,\r\n            });\r\n            poses.push(pos);\r\n        }\r\n\r\n        const startVerticalIndex = verticalRange[0];\r\n        for (let i = verticalRange[1]; i <= verticalIndex; ++i) {\r\n            const x = HORIZONTAL_RADIUS_DIRECTIONS[i] === 1 ? left : right;\r\n            let y = 0;\r\n            if (verticalIndex === i) {\r\n                y = distY;\r\n            } else if (i === 0) {\r\n                y = top + radiusY;\r\n            } else if (VERTICAL_RADIUS_DIRECTIONS[i] === 1) {\r\n                y = poses[startIndex + startVerticalIndex][1];\r\n            } else if (VERTICAL_RADIUS_DIRECTIONS[i] === -1) {\r\n                y = bottom - (poses[startIndex + startVerticalIndex][1] - top);\r\n            }\r\n            controlPoses.push({\r\n                horizontal: 0,\r\n                vertical: VERTICAL_RADIUS_DIRECTIONS[i],\r\n                pos: [x, y],\r\n            });\r\n            poses.push([x, y]);\r\n            if (i === 0) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\nexport function splitRadiusPoses(\r\n    controlPoses: ControlPose[],\r\n    raws: number[] = controlPoses.map(pos => pos.raw!),\r\n) {\r\n    const horizontals = controlPoses\r\n        .map((pos, i) => pos.horizontal ? raws[i] : null).filter(pos => pos != null) as number[];\r\n    const verticals = controlPoses\r\n        .map((pos, i) => pos.vertical ? raws[i] : null).filter(pos => pos != null) as number[];\r\n\r\n    return {\r\n        horizontals,\r\n        verticals,\r\n    };\r\n}\r\n","import { splitBracket, splitComma, convertUnitSize, splitSpace, splitUnit } from \"@daybrush/utils\";\r\nimport { minus } from \"@scena/matrix\";\r\nimport { abs, convertCSSSize } from \"../../utils\";\r\nimport { getRadiusStyles, getRadiusValues } from \"../roundable/borderRadius\";\r\nimport { MoveableManagerInterface, ClippableProps, ControlPose } from \"../../types\";\r\nimport { getMinMaxs } from \"overlap-area\";\r\nimport { getCachedStyle } from \"../../store/Store\";\r\n\r\n\r\nexport const CLIP_DIRECTIONS = [\r\n    [0, -1, \"n\"],\r\n    [1, 0, \"e\"],\r\n] as const;\r\n\r\nexport const CLIP_RECT_DIRECTIONS = [\r\n    [-1, -1, \"nw\"],\r\n    [0, -1, \"n\"],\r\n    [1, -1, \"ne\"],\r\n    [1, 0, \"e\"],\r\n    [1, 1, \"se\"],\r\n    [0, 1, \"s\"],\r\n    [-1, 1, \"sw\"],\r\n    [-1, 0, \"w\"],\r\n] as const;\r\n\r\n// 1 2 5 6 0 3 4 7\r\n// 0 1 2 3 4 5 6 7\r\n\r\nexport function getClipStyles(\r\n    moveable: MoveableManagerInterface<ClippableProps>,\r\n    clipPath: ReturnType<typeof getClipPath>,\r\n    poses: number[][],\r\n) {\r\n    const {\r\n        clipRelative,\r\n    } = moveable.props;\r\n    const {\r\n        width,\r\n        height,\r\n    } = moveable.state;\r\n    const {\r\n        type: clipType,\r\n        poses: clipPoses,\r\n    } = clipPath!;\r\n\r\n    const isRect = clipType === \"rect\";\r\n    const isCircle = clipType === \"circle\";\r\n    if (clipType === \"polygon\") {\r\n        return poses.map(pos => `${convertCSSSize(pos[0], width, clipRelative)} ${convertCSSSize(pos[1], height, clipRelative)}`);\r\n    } else if (isRect || clipType === \"inset\") {\r\n        const top = poses[1][1];\r\n        const right = poses[3][0];\r\n        const left = poses[7][0];\r\n        const bottom = poses[5][1];\r\n\r\n        if (isRect) {\r\n            return [\r\n                top,\r\n                right,\r\n                bottom,\r\n                left,\r\n            ].map(pos => `${pos}px`);\r\n        }\r\n        const clipStyles\r\n            = [top, width - right, height - bottom, left]\r\n                .map((pos, i) => convertCSSSize(pos, i % 2 ? width : height, clipRelative));\r\n\r\n        if (poses.length > 8) {\r\n            const [subWidth, subHeight] = minus(poses[4], poses[0]);\r\n\r\n            clipStyles.push(\"round\", ...getRadiusStyles(\r\n                clipPoses.slice(8).map((info, i) => {\r\n                    return {\r\n                        ...info,\r\n                        pos: poses[i],\r\n                    };\r\n                }),\r\n                clipRelative!,\r\n                subWidth,\r\n                subHeight,\r\n                left, top, right, bottom,\r\n            ).styles);\r\n        }\r\n        return clipStyles;\r\n    } else if (isCircle || clipType === \"ellipse\") {\r\n        const center = poses[0];\r\n        const ry = convertCSSSize(\r\n            abs(poses[1][1] - center[1]),\r\n            isCircle ? Math.sqrt((width * width + height * height) / 2) : height,\r\n            clipRelative,\r\n        );\r\n\r\n        const clipStyles = isCircle ? [ry]\r\n            : [convertCSSSize(abs(poses[2][0] - center[0]), width, clipRelative), ry];\r\n\r\n        clipStyles.push(\r\n            \"at\", convertCSSSize(center[0], width, clipRelative),\r\n            convertCSSSize(center[1], height, clipRelative));\r\n\r\n        return clipStyles;\r\n    }\r\n}\r\n\r\nexport function getRectPoses(top: number, right: number, bottom: number, left: number): ControlPose[] {\r\n    const xs = [left, (left + right) / 2, right];\r\n    const ys = [top, (top + bottom) / 2, bottom];\r\n\r\n    return CLIP_RECT_DIRECTIONS.map(([dirx, diry, dir]) => {\r\n        const x = xs[dirx + 1];\r\n        const y = ys[diry + 1];\r\n        return {\r\n            vertical: abs(diry),\r\n            horizontal: abs(dirx),\r\n            direction: dir,\r\n            pos: [x, y],\r\n        };\r\n    });\r\n}\r\n\r\nexport function getControlSize(\r\n    controlPoses: ControlPose[],\r\n) {\r\n    const xRange = [Infinity, -Infinity];\r\n    const yRange = [Infinity, -Infinity];\r\n\r\n    controlPoses.forEach(({ pos }) => {\r\n        xRange[0] = Math.min(xRange[0], pos[0]);\r\n        xRange[1] = Math.max(xRange[1], pos[0]);\r\n        yRange[0] = Math.min(yRange[0], pos[1]);\r\n        yRange[1] = Math.max(yRange[1], pos[1]);\r\n    });\r\n\r\n    return [\r\n        abs(xRange[1] - xRange[0]),\r\n        abs(yRange[1] - yRange[0]),\r\n    ];\r\n}\r\n\r\n\r\nexport function getClipPath(\r\n    target: HTMLElement | SVGElement | undefined | null,\r\n    width: number,\r\n    height: number,\r\n    defaultClip?: string,\r\n    customClip?: string,\r\n) {\r\n    if (!target) {\r\n        return;\r\n    }\r\n    let clipText: string | undefined = customClip;\r\n\r\n    if (!clipText) {\r\n        const getStyle = getCachedStyle(target!);\r\n        const clipPath = getStyle(\"clipPath\");\r\n\r\n        clipText = clipPath !== \"none\" ? clipPath : getStyle(\"clip\");\r\n    }\r\n    if (!clipText || clipText === \"none\" || clipText === \"auto\") {\r\n        clipText = defaultClip;\r\n\r\n        if (!clipText) {\r\n            return;\r\n        }\r\n    }\r\n    const {\r\n        prefix: clipPrefix = clipText,\r\n        value = \"\",\r\n    } = splitBracket(clipText);\r\n    const isCircle = clipPrefix === \"circle\";\r\n    let splitter = \" \";\r\n\r\n    if (clipPrefix === \"polygon\") {\r\n        const values = splitComma(value! || `0% 0%, 100% 0%, 100% 100%, 0% 100%`);\r\n        splitter = \",\";\r\n\r\n        const poses: ControlPose[] = values.map(pos => {\r\n            const [xPos, yPos] = pos.split(\" \");\r\n\r\n            return {\r\n                vertical: 1,\r\n                horizontal: 1,\r\n                pos: [\r\n                    convertUnitSize(xPos, width),\r\n                    convertUnitSize(yPos, height),\r\n                ],\r\n            };\r\n        });\r\n        const minMaxs = getMinMaxs(poses.map(pos => pos.pos));\r\n\r\n        return {\r\n            type: clipPrefix,\r\n            clipText,\r\n            poses,\r\n            splitter,\r\n            left: minMaxs.minX,\r\n            right: minMaxs.maxX,\r\n            top: minMaxs.minY,\r\n            bottom: minMaxs.maxY,\r\n        } as const;\r\n    } else if (isCircle || clipPrefix === \"ellipse\") {\r\n        let xPos = \"\";\r\n        let yPos = \"\";\r\n        let radiusX = 0;\r\n        let radiusY = 0;\r\n        const values = splitSpace(value!);\r\n\r\n        if (isCircle) {\r\n            let radius = \"\";\r\n            [radius = \"50%\", , xPos = \"50%\", yPos = \"50%\"] = values;\r\n\r\n            radiusX = convertUnitSize(radius, Math.sqrt((width * width + height * height) / 2));\r\n            radiusY = radiusX;\r\n        } else {\r\n            let xRadius = \"\";\r\n            let yRadius = \"\";\r\n            [xRadius = \"50%\", yRadius = \"50%\", , xPos = \"50%\", yPos = \"50%\"] = values;\r\n\r\n            radiusX = convertUnitSize(xRadius, width);\r\n            radiusY = convertUnitSize(yRadius, height);\r\n        }\r\n        const centerPos = [\r\n            convertUnitSize(xPos, width),\r\n            convertUnitSize(yPos, height),\r\n        ];\r\n        const poses: ControlPose[] = [\r\n            {\r\n                vertical: 1,\r\n                horizontal: 1,\r\n                pos: centerPos,\r\n                direction: \"nesw\",\r\n            },\r\n            ...CLIP_DIRECTIONS.slice(0, isCircle ? 1 : 2).map(dir => ({\r\n                vertical: abs(dir[1]),\r\n                horizontal: dir[0],\r\n                direction: dir[2],\r\n                sub: true,\r\n                pos: [\r\n                    centerPos[0] + dir[0] * radiusX,\r\n                    centerPos[1] + dir[1] * radiusY,\r\n                ],\r\n            })),\r\n        ];\r\n        return {\r\n            type: clipPrefix as \"circle\" | \"ellipse\",\r\n            clipText,\r\n            radiusX,\r\n            radiusY,\r\n            left: centerPos[0] - radiusX,\r\n            top: centerPos[1] - radiusY,\r\n            right: centerPos[0] + radiusX,\r\n            bottom: centerPos[1] + radiusY,\r\n            poses,\r\n            splitter,\r\n        } as const;\r\n    } else if (clipPrefix === \"inset\") {\r\n        const values = splitSpace(value! || \"0 0 0 0\");\r\n        const roundIndex = values.indexOf(\"round\");\r\n\r\n        const rectLength = (roundIndex > -1 ? values.slice(0, roundIndex) : values).length;\r\n        const radiusValues = values.slice(rectLength + 1);\r\n        const [\r\n            topValue,\r\n            rightValue = topValue,\r\n            bottomValue = topValue,\r\n            leftValue = rightValue,\r\n        ] = values.slice(0, rectLength);\r\n        const [top, bottom] = [topValue, bottomValue].map(pos => convertUnitSize(pos, height));\r\n        const [left, right] = [leftValue, rightValue].map(pos => convertUnitSize(pos, width));\r\n        const nextRight = width - right;\r\n        const nextBottom = height - bottom;\r\n        const radiusPoses = getRadiusValues(\r\n            radiusValues,\r\n            nextRight - left,\r\n            nextBottom - top,\r\n            left,\r\n            top,\r\n        );\r\n        const poses: ControlPose[] = [\r\n            ...getRectPoses(top, nextRight, nextBottom, left),\r\n            ...radiusPoses,\r\n        ];\r\n\r\n        return {\r\n            type: \"inset\",\r\n            clipText,\r\n            poses,\r\n            top,\r\n            left,\r\n            right: nextRight,\r\n            bottom: nextBottom,\r\n            radius: radiusValues,\r\n            splitter,\r\n        } as const;\r\n    } else if (clipPrefix === \"rect\") {\r\n        // top right bottom left\r\n        const values = splitComma(value! || `0px, ${width}px, ${height}px, 0px`);\r\n\r\n        splitter = \",\";\r\n        const [top, right, bottom, left] = values.map(pos => {\r\n            const { value: posValue } = splitUnit(pos);\r\n\r\n            return posValue;\r\n        });\r\n        const poses = getRectPoses(top, right, bottom, left);\r\n\r\n        return {\r\n            type: \"rect\",\r\n            clipText,\r\n            poses,\r\n            top,\r\n            right,\r\n            bottom,\r\n            left,\r\n            values,\r\n            splitter,\r\n        } as const;\r\n    }\r\n    return;\r\n}\r\n","import {\r\n    Renderer, ClippableProps, OnClip,\r\n    ClippableState, OnClipEnd, OnClipStart,\r\n    ControlPose, MoveableManagerInterface, DraggableProps,\r\n} from \"../types\";\r\nimport { convertUnitSize, getRad } from \"@daybrush/utils\";\r\nimport {\r\n    prefix, calculatePosition, getDiagonalSize,\r\n    fillParams, triggerEvent,\r\n    makeMatrixCSS, getRect, fillEndParams,\r\n    getSizeDistByDist,\r\n    getProps,\r\n    fillCSSObject,\r\n    abs,\r\n    sign,\r\n} from \"../utils\";\r\nimport { plus, minus, multiply } from \"@scena/matrix\";\r\nimport { getDragDist, calculatePointerDist, setDragStart } from \"../gesto/GestoUtils\";\r\nimport {\r\n    HORIZONTAL_RADIUS_ORDER, VERTICAL_RADIUS_ORDER, addRadiusPos, removeRadiusPos,\r\n} from \"./roundable/borderRadius\";\r\nimport { renderLine } from \"../renderDirections\";\r\nimport { checkSnapBoundPriority } from \"./snappable/snap\";\r\nimport { checkSnapBounds } from \"./snappable/snapBounds\";\r\nimport { getDefaultGuidelines } from \"./snappable/getTotalGuidelines\";\r\nimport {\r\n    getControlSize, getClipPath,\r\n    getClipStyles, getRectPoses,\r\n} from \"./clippable/utils\";\r\n\r\nexport function moveControlPos(\r\n    controlPoses: ControlPose[],\r\n    index: number,\r\n    dist: number[],\r\n    isRect?: boolean,\r\n    keepRatio?: boolean,\r\n) {\r\n    const { direction, sub } = controlPoses[index];\r\n    const dists = controlPoses.map(() => [0, 0]);\r\n    const directions = direction ? direction.split(\"\") : [];\r\n\r\n    if (isRect && index < 8) {\r\n        const verticalDirections = directions.filter(dir => dir === \"w\" || dir === \"e\");\r\n        const horizontalDirections = directions.filter(dir => dir === \"n\" || dir === \"s\");\r\n\r\n        const verticalDirection = verticalDirections[0];\r\n        const horizontalDirection = horizontalDirections[0];\r\n\r\n        dists[index] = dist;\r\n        const [width, height] = getControlSize(controlPoses);\r\n        const ratio = width && height ? width / height : 0;\r\n\r\n        if (ratio && keepRatio) {\r\n            // 0 1 2\r\n            // 7   3\r\n            // 6 5 4\r\n            const fixedIndex = (index + 4) % 8;\r\n            const fixedPosition = controlPoses[fixedIndex].pos;\r\n            const sizeDirection = [0, 0];\r\n\r\n            if (direction!.indexOf(\"w\") > -1) {\r\n                sizeDirection[0] = -1;\r\n            } else if (direction!.indexOf(\"e\") > -1) {\r\n                sizeDirection[0] = 1;\r\n            }\r\n            if (direction!.indexOf(\"n\") > -1) {\r\n                sizeDirection[1] = -1;\r\n            } else if (direction!.indexOf(\"s\") > -1) {\r\n                sizeDirection[1] = 1;\r\n            }\r\n\r\n\r\n            const nextDist = getSizeDistByDist(\r\n                [width, height],\r\n                dist,\r\n                ratio,\r\n                sizeDirection,\r\n                true,\r\n            );\r\n            const nextWidth = width + nextDist[0];\r\n            const nextHeight = height + nextDist[1];\r\n            let top = fixedPosition[1];\r\n            let bottom = fixedPosition[1];\r\n            let left = fixedPosition[0];\r\n            let right = fixedPosition[0];\r\n\r\n            if (sizeDirection[0] === -1) {\r\n                left = right - nextWidth;\r\n            } else if (sizeDirection[0] === 1) {\r\n                right = left + nextWidth;\r\n            } else {\r\n                left = left - nextWidth / 2;\r\n                right = right + nextWidth / 2;\r\n            }\r\n            if (sizeDirection[1] === -1) {\r\n                top = bottom - nextHeight;\r\n            } else if (sizeDirection[1] === 1) {\r\n                bottom = top + nextHeight;\r\n            } else {\r\n                top = bottom - nextHeight / 2;\r\n                bottom = top + nextHeight;\r\n            }\r\n\r\n            const nextControlPoses = getRectPoses(top, right, bottom, left);\r\n\r\n            controlPoses.forEach((controlPose, i) => {\r\n                dists[i][0] = nextControlPoses[i].pos[0] - controlPose.pos[0];\r\n                dists[i][1] = nextControlPoses[i].pos[1] - controlPose.pos[1];\r\n            });\r\n        } else {\r\n            controlPoses.forEach((controlPose, i) => {\r\n                const {\r\n                    direction: controlDir,\r\n                } = controlPose;\r\n\r\n                if (!controlDir) {\r\n                    return;\r\n                }\r\n                if (controlDir.indexOf(verticalDirection) > -1) {\r\n                    dists[i][0] = dist[0];\r\n                }\r\n                if (controlDir.indexOf(horizontalDirection) > -1) {\r\n                    dists[i][1] = dist[1];\r\n                }\r\n            });\r\n            if (verticalDirection) {\r\n                dists[1][0] = dist[0] / 2;\r\n                dists[5][0] = dist[0] / 2;\r\n            }\r\n            if (horizontalDirection) {\r\n                dists[3][1] = dist[1] / 2;\r\n                dists[7][1] = dist[1] / 2;\r\n            }\r\n        }\r\n    } else if (direction && !sub) {\r\n        directions.forEach(dir => {\r\n            const isVertical = dir === \"n\" || dir === \"s\";\r\n\r\n            controlPoses.forEach((controlPose, i) => {\r\n                const {\r\n                    direction: dirDir,\r\n                    horizontal: dirHorizontal,\r\n                    vertical: dirVertical,\r\n                } = controlPose;\r\n\r\n                if (!dirDir || dirDir.indexOf(dir) === -1) {\r\n                    return;\r\n                }\r\n                dists[i] = [\r\n                    isVertical || !dirHorizontal ? 0 : dist[0],\r\n                    !isVertical || !dirVertical ? 0 : dist[1],\r\n                ];\r\n            });\r\n        });\r\n    } else {\r\n        dists[index] = dist;\r\n    }\r\n\r\n    return dists;\r\n}\r\n\r\n\r\nfunction addClipPath(moveable: MoveableManagerInterface<ClippableProps>, e: any) {\r\n    const [distX, distY] = calculatePointerDist(moveable, e);\r\n    const { clipPath, clipIndex } = e.datas;\r\n    const {\r\n        type: clipType,\r\n        poses: clipPoses,\r\n        splitter,\r\n    } = (clipPath as ReturnType<typeof getClipPath>)!;\r\n    const poses = clipPoses.map(pos => pos.pos);\r\n    if (clipType === \"polygon\") {\r\n        poses.splice(clipIndex, 0, [distX, distY]);\r\n    } else if (clipType === \"inset\") {\r\n        const horizontalIndex = HORIZONTAL_RADIUS_ORDER.indexOf(clipIndex);\r\n        const verticalIndex = VERTICAL_RADIUS_ORDER.indexOf(clipIndex);\r\n        const length = clipPoses.length;\r\n\r\n        addRadiusPos(\r\n            clipPoses,\r\n            poses,\r\n            8,\r\n            horizontalIndex,\r\n            verticalIndex,\r\n            distX,\r\n            distY,\r\n            poses[4][0],\r\n            poses[4][1],\r\n            poses[0][0],\r\n            poses[0][1],\r\n        );\r\n\r\n        if (length === clipPoses.length) {\r\n            return;\r\n        }\r\n    } else {\r\n        return;\r\n    }\r\n    const clipStyles = getClipStyles(moveable, clipPath, poses)!;\r\n    const clipStyle = `${clipType}(${clipStyles.join(splitter)})`;\r\n\r\n    triggerEvent(moveable, \"onClip\", fillParams<OnClip>(moveable, e, {\r\n        clipEventType: \"added\",\r\n        clipType,\r\n        poses,\r\n        clipStyles,\r\n        clipStyle,\r\n        distX: 0,\r\n        distY: 0,\r\n        ...fillCSSObject({\r\n            clipPath: clipStyle,\r\n        }, e),\r\n    }));\r\n}\r\nfunction removeClipPath(moveable: MoveableManagerInterface<ClippableProps>, e: any) {\r\n    const { clipPath, clipIndex } = e.datas;\r\n    const {\r\n        type: clipType,\r\n        poses: clipPoses,\r\n        splitter,\r\n    } = (clipPath as ReturnType<typeof getClipPath>)!;\r\n    const poses = clipPoses.map(pos => pos.pos);\r\n    const length = poses.length;\r\n    if (clipType === \"polygon\") {\r\n        clipPoses.splice(clipIndex, 1);\r\n        poses.splice(clipIndex, 1);\r\n    } else if (clipType === \"inset\") {\r\n        if (clipIndex < 8) {\r\n            return;\r\n        }\r\n        removeRadiusPos(clipPoses, poses, clipIndex, 8, length);\r\n\r\n        if (length === clipPoses.length) {\r\n            return;\r\n        }\r\n    } else {\r\n        return;\r\n    }\r\n    const clipStyles = getClipStyles(moveable, clipPath, poses)!;\r\n    const clipStyle = `${clipType}(${clipStyles.join(splitter)})`;\r\n\r\n    triggerEvent(moveable, \"onClip\", fillParams<OnClip>(moveable, e, {\r\n        clipEventType: \"removed\",\r\n        clipType,\r\n        poses,\r\n        clipStyles,\r\n        clipStyle,\r\n        distX: 0,\r\n        distY: 0,\r\n        ...fillCSSObject({\r\n            clipPath: clipStyle,\r\n        }, e),\r\n    }));\r\n}\r\n/**\r\n * @namespace Moveable.Clippable\r\n * @description Whether to clip the target.\r\n */\r\n\r\nexport default {\r\n    name: \"clippable\",\r\n    props: [\r\n        \"clippable\",\r\n        \"defaultClipPath\",\r\n        \"customClipPath\",\r\n        \"keepRatio\",\r\n        \"clipRelative\",\r\n        \"clipArea\",\r\n        \"dragWithClip\",\r\n        \"clipTargetBounds\",\r\n        \"clipVerticalGuidelines\",\r\n        \"clipHorizontalGuidelines\",\r\n        \"clipSnapThreshold\",\r\n    ] as const,\r\n    events: [\r\n        \"clipStart\",\r\n        \"clip\",\r\n        \"clipEnd\",\r\n    ] as const,\r\n    css: [\r\n        `.control.clip-control {\r\nbackground: #6d6;\r\ncursor: pointer;\r\n}\r\n.control.clip-control.clip-radius {\r\nbackground: #d66;\r\n}\r\n.line.clip-line {\r\nbackground: #6e6;\r\ncursor: move;\r\nz-index: 1;\r\n}\r\n.clip-area {\r\nposition: absolute;\r\ntop: 0;\r\nleft: 0;\r\n}\r\n.clip-ellipse {\r\nposition: absolute;\r\ncursor: move;\r\nborder: 1px solid #6d6;\r\nborder: var(--zoompx) solid #6d6;\r\nborder-radius: 50%;\r\ntransform-origin: 0px 0px;\r\n}`,\r\n        `:host {\r\n--bounds-color: #d66;\r\n}`,\r\n        `.guideline {\r\npointer-events: none;\r\nz-index: 2;\r\n}`,\r\n        `.line.guideline.bounds {\r\nbackground: #d66;\r\nbackground: var(--bounds-color);\r\n}`,\r\n    ],\r\n    render(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, React: Renderer): any[] {\r\n        const {\r\n            customClipPath,\r\n            defaultClipPath,\r\n            clipArea, zoom,\r\n            groupable,\r\n        } = moveable.props;\r\n        const {\r\n            target, width, height, allMatrix, is3d, left, top,\r\n            pos1, pos2, pos3, pos4,\r\n            clipPathState,\r\n            snapBoundInfos,\r\n            rotation: rotationRad,\r\n        } = moveable.getState();\r\n\r\n        if (!target || groupable) {\r\n            return [];\r\n        }\r\n\r\n        const clipPath = getClipPath(\r\n            target, width, height, defaultClipPath || \"inset\", clipPathState || customClipPath);\r\n\r\n        if (!clipPath) {\r\n            return [];\r\n        }\r\n        const n = is3d ? 4 : 3;\r\n        const type = clipPath.type;\r\n        const clipPoses = clipPath.poses;\r\n        const poses = clipPoses.map(pos => {\r\n            // return [x, y];\r\n            const calculatedPos = calculatePosition(allMatrix, pos.pos, n);\r\n\r\n            return [\r\n                calculatedPos[0] - left,\r\n                calculatedPos[1] - top,\r\n            ];\r\n        });\r\n\r\n        let controls: any[] = [];\r\n        let lines: any[] = [];\r\n\r\n        const isRect = type === \"rect\";\r\n        const isInset = type === \"inset\";\r\n        const isPolygon = type === \"polygon\";\r\n\r\n        if (isRect || isInset || isPolygon) {\r\n            const linePoses = isInset ? poses.slice(0, 8) : poses;\r\n\r\n            lines = linePoses.map((to, i) => {\r\n                const from = i === 0 ? linePoses[linePoses.length - 1] : linePoses[i - 1];\r\n\r\n                const rad = getRad(from, to);\r\n                const dist = getDiagonalSize(from, to);\r\n                return <div key={`clipLine${i}`} className={prefix(\"line\", \"clip-line\", \"snap-control\")}\r\n                    data-clip-index={i}\r\n                    style={{\r\n                        width: `${dist}px`,\r\n                        transform: `translate(${from[0]}px, ${from[1]}px) rotate(${rad}rad) scaleY(${zoom})`,\r\n                    }}></div>;\r\n            });\r\n        }\r\n        controls = poses.map((pos, i) => {\r\n            return <div key={`clipControl${i}`}\r\n                className={prefix(\"control\", \"clip-control\", \"snap-control\")}\r\n                data-clip-index={i}\r\n                style={{\r\n                    transform: `translate(${pos[0]}px, ${pos[1]}px) rotate(${rotationRad}rad) scale(${zoom})`,\r\n                }}></div>;\r\n        });\r\n\r\n        if (isInset) {\r\n            controls.push(...poses.slice(8).map((pos, i) => {\r\n                return <div key={`clipRadiusControl${i}`}\r\n                    className={prefix(\"control\", \"clip-control\", \"clip-radius\", \"snap-control\")}\r\n                    data-clip-index={8 + i}\r\n                    style={{\r\n                        transform: `translate(${pos[0]}px, ${pos[1]}px) rotate(${rotationRad}rad) scale(${zoom})`,\r\n                    }}></div>;\r\n            }));\r\n        }\r\n        if (type === \"circle\" || type === \"ellipse\") {\r\n            const {\r\n                left: clipLeft,\r\n                top: clipTop,\r\n                radiusX,\r\n                radiusY,\r\n            } = clipPath;\r\n\r\n            const [distLeft, distTop] = minus(\r\n                calculatePosition(allMatrix, [clipLeft!, clipTop!], n),\r\n                calculatePosition(allMatrix, [0, 0], n),\r\n            );\r\n            let ellipseClipPath = \"none\";\r\n\r\n            if (!clipArea) {\r\n                const piece = Math.max(10, radiusX! / 5, radiusY! / 5);\r\n                const areaPoses: number[][] = [];\r\n\r\n                for (let i = 0; i <= piece; ++i) {\r\n                    const rad = Math.PI * 2 / piece * i;\r\n                    areaPoses.push([\r\n                        radiusX! + (radiusX! - zoom!) * Math.cos(rad),\r\n                        radiusY! + (radiusY! - zoom!) * Math.sin(rad),\r\n                    ]);\r\n                }\r\n                areaPoses.push([radiusX!, -2]);\r\n                areaPoses.push([-2, -2]);\r\n                areaPoses.push([-2, radiusY! * 2 + 2]);\r\n                areaPoses.push([radiusX! * 2 + 2, radiusY! * 2 + 2]);\r\n                areaPoses.push([radiusX! * 2 + 2, -2]);\r\n                areaPoses.push([radiusX!, -2]);\r\n\r\n                ellipseClipPath = `polygon(${areaPoses.map(pos => `${pos[0]}px ${pos[1]}px`).join(\", \")})`;\r\n            }\r\n            controls.push(<div key=\"clipEllipse\" className={prefix(\"clip-ellipse\", \"snap-control\")} style={{\r\n                width: `${radiusX! * 2}px`,\r\n                height: `${radiusY! * 2}px`,\r\n                clipPath: ellipseClipPath,\r\n                transform: `translate(${-left + distLeft}px, ${-top + distTop}px) ${makeMatrixCSS(allMatrix)}`,\r\n            }}></div>);\r\n        }\r\n        if (clipArea) {\r\n            const {\r\n                width: allWidth,\r\n                height: allHeight,\r\n                left: allLeft,\r\n                top: allTop,\r\n            } = getRect([pos1, pos2, pos3, pos4, ...poses]);\r\n            if (isPolygon || isRect || isInset) {\r\n                const areaPoses = isInset ? poses.slice(0, 8) : poses;\r\n                controls.push(<div key=\"clipArea\" className={prefix(\"clip-area\", \"snap-control\")} style={{\r\n                    width: `${allWidth}px`,\r\n                    height: `${allHeight}px`,\r\n                    transform: `translate(${allLeft}px, ${allTop}px)`,\r\n                    clipPath: `polygon(${areaPoses.map(pos => `${pos[0] - allLeft}px ${pos[1] - allTop}px`).join(\", \")})`,\r\n                }}></div>);\r\n            }\r\n        }\r\n        if (snapBoundInfos) {\r\n            ([\"vertical\", \"horizontal\"] as const).forEach(directionType => {\r\n                const info = snapBoundInfos[directionType];\r\n                const isHorizontal = directionType === \"horizontal\";\r\n\r\n                if (info.isSnap) {\r\n                    lines.push(...info.snap.posInfos.map(({ pos }, i) => {\r\n                        const snapPos1 = minus(calculatePosition(\r\n                            allMatrix, isHorizontal ? [0, pos] : [pos, 0], n), [left, top]);\r\n                        const snapPos2 = minus(calculatePosition(\r\n                            allMatrix, isHorizontal ? [width, pos] : [pos, height], n), [left, top]);\r\n\r\n                        return renderLine(\r\n                            React, \"\", snapPos1, snapPos2, zoom!,\r\n                            `clip${directionType}snap${i}`, \"guideline\");\r\n                    }));\r\n                }\r\n                if (info.isBound) {\r\n                    lines.push(...info.bounds.map(({ pos }, i) => {\r\n                        const snapPos1 = minus(calculatePosition(\r\n                            allMatrix, isHorizontal ? [0, pos] : [pos, 0], n), [left, top]);\r\n                        const snapPos2 = minus(calculatePosition(\r\n                            allMatrix, isHorizontal ? [width, pos] : [pos, height], n), [left, top]);\r\n\r\n                        return renderLine(\r\n                            React, \"\", snapPos1, snapPos2, zoom!,\r\n                            `clip${directionType}bounds${i}`, \"guideline\", \"bounds\", \"bold\");\r\n                    }));\r\n                }\r\n            });\r\n        }\r\n        return [\r\n            ...controls,\r\n            ...lines,\r\n        ];\r\n    },\r\n    dragControlCondition(moveable: any, e: any) {\r\n        return e.inputEvent && (e.inputEvent.target.getAttribute(\"class\") || \"\").indexOf(\"clip\") > -1;\r\n    },\r\n    dragStart(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, e: any) {\r\n        const props = moveable.props;\r\n        const {\r\n            dragWithClip = true,\r\n        } = props;\r\n\r\n        if (dragWithClip) {\r\n            return false;\r\n        }\r\n\r\n        return this.dragControlStart(moveable, e);\r\n    },\r\n    drag(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, e: any) {\r\n        return this.dragControl(moveable, { ...e, isDragTarget: true });\r\n    },\r\n    dragEnd(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, e: any) {\r\n        return this.dragControlEnd(moveable, e);\r\n    },\r\n    dragControlStart(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, e: any) {\r\n        const state = moveable.state;\r\n        const { defaultClipPath, customClipPath } = moveable.props;\r\n        const { target, width, height } = state;\r\n        const inputTarget = e.inputEvent ? e.inputEvent.target : null;\r\n        const className = (inputTarget && inputTarget.getAttribute(\"class\")) || \"\";\r\n        const datas = e.datas;\r\n        const clipPath = getClipPath(target!, width, height, defaultClipPath || \"inset\", customClipPath);\r\n\r\n        if (!clipPath) {\r\n            return false;\r\n        }\r\n        const { clipText, type, poses } = clipPath;\r\n        const result = triggerEvent(moveable, \"onClipStart\", fillParams<OnClipStart>(moveable, e, {\r\n            clipType: type,\r\n            clipStyle: clipText,\r\n            poses: poses.map(pos => pos.pos),\r\n        }));\r\n\r\n        if (result === false) {\r\n            datas.isClipStart = false;\r\n            return false;\r\n        }\r\n        datas.isControl = className && className.indexOf(\"clip-control\") > -1;\r\n        datas.isLine = className.indexOf(\"clip-line\") > -1;\r\n        datas.isArea = className.indexOf(\"clip-area\") > -1 || className.indexOf(\"clip-ellipse\") > -1;\r\n        datas.clipIndex = inputTarget ? parseInt(inputTarget.getAttribute(\"data-clip-index\"), 10) : -1;\r\n        datas.clipPath = clipPath;\r\n        datas.isClipStart = true;\r\n        state.clipPathState = clipText;\r\n        setDragStart(moveable, e);\r\n\r\n        return true;\r\n    },\r\n    dragControl(moveable: MoveableManagerInterface<ClippableProps & DraggableProps, ClippableState>, e: any) {\r\n        const { datas, originalDatas, isDragTarget } = e;\r\n\r\n        if (!datas.isClipStart) {\r\n            return false;\r\n        }\r\n        const { isControl, isLine, isArea, clipIndex, clipPath } = datas as {\r\n            clipPath: ReturnType<typeof getClipPath>,\r\n            [key: string]: any,\r\n        };\r\n        if (!clipPath) {\r\n            return false;\r\n        }\r\n        const props = getProps(moveable.props, \"clippable\");\r\n\r\n        const { keepRatio } = props;\r\n        let distX = 0;\r\n        let distY = 0;\r\n\r\n        const originalDraggable = originalDatas.draggable;\r\n        const originalDist = getDragDist(e);\r\n\r\n        if (isDragTarget && originalDraggable) {\r\n            [distX, distY] = originalDraggable.prevBeforeDist;\r\n        } else {\r\n            [distX, distY] = originalDist;\r\n        }\r\n\r\n        const firstDist = [distX, distY];\r\n\r\n        const state = moveable.state;\r\n        const { width, height } = state;\r\n        const isDragWithTarget = !isArea && !isControl && !isLine;\r\n        const {\r\n            type: clipType,\r\n            poses: clipPoses,\r\n            splitter,\r\n        } = clipPath;\r\n        const poses = clipPoses.map(pos => pos.pos);\r\n\r\n        if (isDragWithTarget) {\r\n            distX = -distX;\r\n            distY = -distY;\r\n        }\r\n        const isAll = !isControl || clipPoses[clipIndex].direction === \"nesw\";\r\n        const isRect = clipType === \"inset\" || clipType === \"rect\";\r\n        let dists = clipPoses.map(() => [0, 0]);\r\n\r\n        if (isControl && !isAll) {\r\n            const { horizontal, vertical } = clipPoses[clipIndex];\r\n            const dist = [\r\n                distX * abs(horizontal),\r\n                distY * abs(vertical),\r\n            ];\r\n            dists = moveControlPos(clipPoses, clipIndex, dist, isRect, keepRatio);\r\n        } else if (isAll) {\r\n            dists = poses.map(() => [distX, distY]);\r\n        }\r\n        const nextPoses: number[][] = poses.map((pos, i) => plus(pos, dists[i]));\r\n        const guidePoses = [...nextPoses];\r\n\r\n        state.snapBoundInfos = null;\r\n        const isCircle = clipPath.type === \"circle\";\r\n        const isEllipse = clipPath.type === \"ellipse\";\r\n\r\n        if (isCircle || isEllipse) {\r\n            const guideRect = getRect(nextPoses);\r\n            const ry = abs(guideRect.bottom - guideRect.top);\r\n            const rx = abs(isEllipse ? guideRect.right - guideRect.left : ry);\r\n            const bottom = nextPoses[0][1] + ry;\r\n            const left = nextPoses[0][0] - rx;\r\n            const right = nextPoses[0][0] + rx;\r\n\r\n            // right\r\n            if (isCircle) {\r\n                guidePoses.push([right, guideRect.bottom]);\r\n                dists.push([1, 0]);\r\n            }\r\n            // bottom\r\n            guidePoses.push([guideRect.left, bottom]);\r\n            dists.push([0, 1]);\r\n            // left\r\n            guidePoses.push([left, guideRect.bottom]);\r\n            dists.push([1, 0]);\r\n        }\r\n\r\n        const guidelines = getDefaultGuidelines(\r\n            (props.clipHorizontalGuidelines || []).map(v => convertUnitSize(`${v}`, height)),\r\n            (props.clipVerticalGuidelines || []).map(v => convertUnitSize(`${v}`, width)),\r\n            width!, height!,\r\n        );\r\n        let guideXPoses: number[] = [];\r\n        let guideYPoses: number[] = [];\r\n\r\n        if (isCircle || isEllipse) {\r\n            guideXPoses = [guidePoses[4][0], guidePoses[2][0]];\r\n            guideYPoses = [guidePoses[1][1], guidePoses[3][1]];\r\n        } else if (isRect) {\r\n            const rectPoses = [guidePoses[0], guidePoses[2], guidePoses[4], guidePoses[6]];\r\n            const rectDists = [dists[0], dists[2], dists[4], dists[6]];\r\n\r\n            guideXPoses = rectPoses.filter((_, i) => rectDists[i][0]).map(pos => pos[0]);\r\n            guideYPoses = rectPoses.filter((_, i) => rectDists[i][1]).map(pos => pos[1]);\r\n        } else {\r\n            guideXPoses = guidePoses.filter((_, i) => dists[i][0]).map(pos => pos[0]);\r\n            guideYPoses = guidePoses.filter((_, i) => dists[i][1]).map(pos => pos[1]);\r\n        }\r\n        const boundDelta = [0, 0];\r\n        const {\r\n            horizontal: horizontalSnapInfo,\r\n            vertical: verticalSnapInfo,\r\n        } = checkSnapBounds(\r\n            guidelines,\r\n            props.clipTargetBounds && { left: 0, top: 0, right: width, bottom: height },\r\n            guideXPoses,\r\n            guideYPoses,\r\n            5,\r\n        );\r\n        let snapOffsetY = horizontalSnapInfo.offset;\r\n        let snapOffsetX = verticalSnapInfo.offset;\r\n\r\n        if (horizontalSnapInfo.isBound) {\r\n            boundDelta[1] += snapOffsetY;\r\n        }\r\n        if (verticalSnapInfo.isBound) {\r\n            boundDelta[0] += snapOffsetX;\r\n        }\r\n        if ((isEllipse || isCircle) && dists[0][0] === 0 && dists[0][1] === 0) {\r\n            const guideRect = getRect(nextPoses);\r\n            let cy = guideRect.bottom - guideRect.top;\r\n            let cx = isEllipse ? guideRect.right - guideRect.left : cy;\r\n\r\n\r\n            const distSnapX = verticalSnapInfo.isBound\r\n                ? abs(snapOffsetX)\r\n                : (verticalSnapInfo.snapIndex === 0 ? -snapOffsetX : snapOffsetX);\r\n            const distSnapY = horizontalSnapInfo.isBound\r\n                ? abs(snapOffsetY)\r\n                : (horizontalSnapInfo.snapIndex === 0 ? -snapOffsetY : snapOffsetY);\r\n            cx -= distSnapX;\r\n            cy -= distSnapY;\r\n\r\n            if (isCircle) {\r\n                cy = checkSnapBoundPriority(verticalSnapInfo, horizontalSnapInfo) > 0 ? cy : cx;\r\n                cx = cy;\r\n            }\r\n            const center = guidePoses[0];\r\n\r\n            guidePoses[1][1] = center[1] - cy;\r\n            guidePoses[2][0] = center[0] + cx;\r\n            guidePoses[3][1] = center[1] + cy;\r\n            guidePoses[4][0] = center[0] - cx;\r\n        } else if (isRect && keepRatio && isControl) {\r\n            const [width, height] = getControlSize(clipPoses);\r\n            const ratio = width && height ? width / height : 0;\r\n            const clipPose = clipPoses[clipIndex];\r\n            const direction = clipPose.direction! || \"\";\r\n            let top = guidePoses[1][1];\r\n            let bottom = guidePoses[5][1];\r\n            let left = guidePoses[7][0];\r\n            let right = guidePoses[3][0];\r\n\r\n            if (abs(snapOffsetY) <= abs(snapOffsetX)) {\r\n                snapOffsetY = sign(snapOffsetY) * abs(snapOffsetX) / ratio;\r\n            } else {\r\n                snapOffsetX = sign(snapOffsetX) * abs(snapOffsetY) * ratio;\r\n            }\r\n            if (direction!.indexOf(\"w\") > -1) {\r\n                left -= snapOffsetX;\r\n            } else if (direction!.indexOf(\"e\") > -1) {\r\n                right -= snapOffsetX;\r\n            } else {\r\n                left += snapOffsetX / 2;\r\n                right -= snapOffsetX / 2;\r\n            }\r\n            if (direction!.indexOf(\"n\") > -1) {\r\n                top -= snapOffsetY;\r\n            } else if (direction!.indexOf(\"s\") > -1) {\r\n                bottom -= snapOffsetY;\r\n            } else {\r\n                top += snapOffsetY / 2;\r\n                bottom -= snapOffsetY / 2;\r\n            }\r\n            const nextControlPoses = getRectPoses(top, right, bottom, left);\r\n\r\n            guidePoses.forEach((pos, i) => {\r\n                [pos[0], pos[1]] = nextControlPoses[i].pos;\r\n            });\r\n        } else {\r\n            guidePoses.forEach((pos, j) => {\r\n                const dist = dists[j];\r\n\r\n                if (dist[0]) {\r\n                    pos[0] -= snapOffsetX;\r\n                }\r\n                if (dist[1]) {\r\n                    pos[1] -= snapOffsetY;\r\n                }\r\n            });\r\n        }\r\n        const nextClipStyles = getClipStyles(moveable, clipPath, nextPoses)!;\r\n        const clipStyle = `${clipType}(${nextClipStyles.join(splitter)})`;\r\n\r\n        state.clipPathState = clipStyle;\r\n\r\n        if (isCircle || isEllipse) {\r\n            guideXPoses = [guidePoses[4][0], guidePoses[2][0]];\r\n            guideYPoses = [guidePoses[1][1], guidePoses[3][1]];\r\n        } else if (isRect) {\r\n            const rectPoses = [guidePoses[0], guidePoses[2], guidePoses[4], guidePoses[6]];\r\n\r\n            guideXPoses = rectPoses.map(pos => pos[0]);\r\n            guideYPoses = rectPoses.map(pos => pos[1]);\r\n        } else {\r\n            guideXPoses = guidePoses.map(pos => pos[0]);\r\n            guideYPoses = guidePoses.map(pos => pos[1]);\r\n        }\r\n        state.snapBoundInfos = checkSnapBounds(\r\n            guidelines,\r\n            props.clipTargetBounds && { left: 0, top: 0, right: width, bottom: height },\r\n            guideXPoses,\r\n            guideYPoses,\r\n            1,\r\n        );\r\n\r\n        if (originalDraggable) {\r\n            const {\r\n                is3d,\r\n                allMatrix,\r\n            } = state;\r\n            const n = is3d ? 4 : 3;\r\n\r\n            let dragDist = boundDelta;\r\n\r\n            if (isDragTarget) {\r\n                dragDist = [\r\n                    firstDist[0] + boundDelta[0] - originalDist[0],\r\n                    firstDist[1] + boundDelta[1] - originalDist[1],\r\n                ];\r\n            }\r\n            originalDraggable.deltaOffset = multiply(allMatrix, [dragDist[0], dragDist[1], 0, 0], n);\r\n        }\r\n        triggerEvent(moveable, \"onClip\", fillParams<OnClip>(moveable, e, {\r\n            clipEventType: \"changed\",\r\n            clipType,\r\n            poses: nextPoses,\r\n            clipStyle,\r\n            clipStyles: nextClipStyles,\r\n            distX,\r\n            distY,\r\n            ...fillCSSObject({\r\n                [clipType === \"rect\" ? \"clip\" : \"clipPath\"]: clipStyle,\r\n            }, e),\r\n        }));\r\n\r\n        return true;\r\n    },\r\n    dragControlEnd(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, e: any) {\r\n        this.unset(moveable);\r\n        const { isDrag, datas, isDouble } = e;\r\n        const { isLine, isClipStart, isControl } = datas;\r\n\r\n        if (!isClipStart) {\r\n            return false;\r\n        }\r\n        triggerEvent(moveable, \"onClipEnd\", fillEndParams<OnClipEnd>(moveable, e, {}));\r\n        if (isDouble) {\r\n            if (isControl) {\r\n                removeClipPath(moveable, e);\r\n            } else if (isLine) {\r\n                // add\r\n                addClipPath(moveable, e);\r\n            }\r\n        }\r\n        return isDouble || isDrag;\r\n    },\r\n    unset(moveable: MoveableManagerInterface<ClippableProps, ClippableState>) {\r\n        moveable.state.clipPathState = \"\";\r\n        moveable.state.snapBoundInfos = null;\r\n    },\r\n};\r\n\r\n/**\r\n * Whether to clip the target. (default: false)\r\n * @name Moveable.Clippable#clippable\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     clippable: true,\r\n *     defaultClipPath: \"inset\",\r\n *     customClipPath: \"\",\r\n *     clipRelative: false,\r\n *     clipArea: false,\r\n *     dragWithClip: true,\r\n * });\r\n * moveable.on(\"clipStart\", e => {\r\n *     console.log(e);\r\n * }).on(\"clip\", e => {\r\n *     if (e.clipType === \"rect\") {\r\n *         e.target.style.clip = e.clipStyle;\r\n *     } else {\r\n *         e.target.style.clipPath = e.clipStyle;\r\n *     }\r\n * }).on(\"clipEnd\", e => {\r\n *     console.log(e);\r\n * });\r\n */\r\n/**\r\n *  If clippath is not set, the default value can be set. (defaultClipPath < style < customClipPath < dragging clipPath)\r\n * @name Moveable.Clippable#defaultClipPath\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     clippable: true,\r\n *     defaultClipPath: \"inset\",\r\n *     customClipPath: \"\",\r\n *     clipRelative: false,\r\n *     clipArea: false,\r\n *     dragWithClip: true,\r\n * });\r\n * moveable.on(\"clipStart\", e => {\r\n *     console.log(e);\r\n * }).on(\"clip\", e => {\r\n *     if (e.clipType === \"rect\") {\r\n *         e.target.style.clip = e.clipStyle;\r\n *     } else {\r\n *         e.target.style.clipPath = e.clipStyle;\r\n *     }\r\n * }).on(\"clipEnd\", e => {\r\n *     console.log(e);\r\n * });\r\n */\r\n\r\n/**\r\n * % Can be used instead of the absolute px (`rect` not possible) (default: false)\r\n * @name Moveable.Clippable#clipRelative\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     clippable: true,\r\n *     defaultClipPath: \"inset\",\r\n *     customClipPath: \"\",\r\n *     clipRelative: false,\r\n *     clipArea: false,\r\n *     dragWithClip: true,\r\n * });\r\n * moveable.on(\"clipStart\", e => {\r\n *     console.log(e);\r\n * }).on(\"clip\", e => {\r\n *     if (e.clipType === \"rect\") {\r\n *         e.target.style.clip = e.clipStyle;\r\n *     } else {\r\n *         e.target.style.clipPath = e.clipStyle;\r\n *     }\r\n * }).on(\"clipEnd\", e => {\r\n *     console.log(e);\r\n * });\r\n */\r\n\r\n/**\r\n * You can force the custom clipPath. (defaultClipPath < style < customClipPath < dragging clipPath)\r\n * @name Moveable.Clippable#customClipPath\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     clippable: true,\r\n *     defaultClipPath: \"inset\",\r\n *     customClipPath: \"\",\r\n *     clipRelative: false,\r\n *     clipArea: false,\r\n *     dragWithClip: true,\r\n * });\r\n * moveable.on(\"clipStart\", e => {\r\n *     console.log(e);\r\n * }).on(\"clip\", e => {\r\n *     if (e.clipType === \"rect\") {\r\n *         e.target.style.clip = e.clipStyle;\r\n *     } else {\r\n *         e.target.style.clipPath = e.clipStyle;\r\n *     }\r\n * }).on(\"clipEnd\", e => {\r\n *     console.log(e);\r\n * });\r\n */\r\n\r\n/**\r\n * When dragging the target, the clip also moves. (default: true)\r\n * @name Moveable.Clippable#dragWithClip\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     clippable: true,\r\n *     defaultClipPath: \"inset\",\r\n *     customClipPath: \"\",\r\n *     clipRelative: false,\r\n *     clipArea: false,\r\n *     dragWithClip: true,\r\n * });\r\n * moveable.on(\"clipStart\", e => {\r\n *     console.log(e);\r\n * }).on(\"clip\", e => {\r\n *     if (e.clipType === \"rect\") {\r\n *         e.target.style.clip = e.clipStyle;\r\n *     } else {\r\n *         e.target.style.clipPath = e.clipStyle;\r\n *     }\r\n * }).on(\"clipEnd\", e => {\r\n *     console.log(e);\r\n * });\r\n */\r\n\r\n/**\r\n * You can drag the clip by setting clipArea.\r\n * @name Moveable.Clippable#clipArea\r\n * @default false\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     clippable: true,\r\n *     defaultClipPath: \"inset\",\r\n *     customClipPath: \"\",\r\n *     clipRelative: false,\r\n *     clipArea: false,\r\n *     dragWithClip: true,\r\n * });\r\n * moveable.on(\"clipStart\", e => {\r\n *     console.log(e);\r\n * }).on(\"clip\", e => {\r\n *     if (e.clipType === \"rect\") {\r\n *         e.target.style.clip = e.clipStyle;\r\n *     } else {\r\n *         e.target.style.clipPath = e.clipStyle;\r\n *     }\r\n * }).on(\"clipEnd\", e => {\r\n *     console.log(e);\r\n * });\r\n */\r\n\r\n/**\r\n* Whether the clip is bound to the target.\r\n* @name Moveable.Clippable#clipTargetBounds\r\n* @default false\r\n* @example\r\n* import Moveable from \"moveable\";\r\n*\r\n* const moveable = new Moveable(document.body, {\r\n*     clippable: true,\r\n*     defaultClipPath: \"inset\",\r\n*     customClipPath: \"\",\r\n*     clipRelative: false,\r\n*     clipArea: false,\r\n*     dragWithClip: true,\r\n*     clipTargetBounds: true,\r\n* });\r\n* moveable.on(\"clipStart\", e => {\r\n*     console.log(e);\r\n* }).on(\"clip\", e => {\r\n*     if (e.clipType === \"rect\") {\r\n*         e.target.style.clip = e.clipStyle;\r\n*     } else {\r\n*         e.target.style.clipPath = e.clipStyle;\r\n*     }\r\n* }).on(\"clipEnd\", e => {\r\n*     console.log(e);\r\n* });\r\n*/\r\n\r\n/**\r\n * Add clip guidelines in the vertical direction.\r\n * @name Moveable.Clippable#clipVerticalGuidelines\r\n * @default 0\r\n * @example\r\n* import Moveable from \"moveable\";\r\n*\r\n* const moveable = new Moveable(document.body, {\r\n*     clippable: true,\r\n*     defaultClipPath: \"inset\",\r\n*     customClipPath: \"\",\r\n*     clipRelative: false,\r\n*     clipArea: false,\r\n*     dragWithClip: true,\r\n*     clipVerticalGuidelines: [0, 100, 200],\r\n*     clipHorizontalGuidelines: [0, 100, 200],\r\n*     clipSnapThreshold: 5,\r\n* });\r\n*/\r\n\r\n/**\r\n* Add clip guidelines in the horizontal direction.\r\n* @name Moveable.Clippable#clipHorizontalGuidelines\r\n* @default []\r\n* @example\r\n* import Moveable from \"moveable\";\r\n*\r\n* const moveable = new Moveable(document.body, {\r\n*     clippable: true,\r\n*     defaultClipPath: \"inset\",\r\n*     customClipPath: \"\",\r\n*     clipRelative: false,\r\n*     clipArea: false,\r\n*     dragWithClip: true,\r\n*     clipVerticalGuidelines: [0, 100, 200],\r\n*     clipHorizontalGuidelines: [0, 100, 200],\r\n*     clipSnapThreshold: 5,\r\n* });\r\n*/\r\n/**\r\n* istance value that can snap to clip guidelines.\r\n* @name Moveable.Clippable#clipSnapThreshold\r\n* @default 5\r\n* @example\r\n* import Moveable from \"moveable\";\r\n*\r\n* const moveable = new Moveable(document.body, {\r\n*     clippable: true,\r\n*     defaultClipPath: \"inset\",\r\n*     customClipPath: \"\",\r\n*     clipRelative: false,\r\n*     clipArea: false,\r\n*     dragWithClip: true,\r\n*     clipVerticalGuidelines: [0, 100, 200],\r\n*     clipHorizontalGuidelines: [0, 100, 200],\r\n*     clipSnapThreshold: 5,\r\n* });\r\n*/\r\n/**\r\n * When drag start the clip area or controls, the `clipStart` event is called.\r\n * @memberof Moveable.Clippable\r\n * @event clipStart\r\n * @param {Moveable.Clippable.OnClipStart} - Parameters for the `clipStart` event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     clippable: true,\r\n *     defaultClipPath: \"inset\",\r\n *     customClipPath: \"\",\r\n *     clipRelative: false,\r\n *     clipArea: false,\r\n *     dragWithClip: true,\r\n * });\r\n * moveable.on(\"clipStart\", e => {\r\n *     console.log(e);\r\n * }).on(\"clip\", e => {\r\n *     if (e.clipType === \"rect\") {\r\n *         e.target.style.clip = e.clipStyle;\r\n *     } else {\r\n *         e.target.style.clipPath = e.clipStyle;\r\n *     }\r\n * }).on(\"clipEnd\", e => {\r\n *     console.log(e);\r\n * });\r\n */\r\n/**\r\n * When drag the clip area or controls, the `clip` event is called.\r\n * @memberof Moveable.Clippable\r\n * @event clip\r\n * @param {Moveable.Clippable.OnClip} - Parameters for the `clip` event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     clippable: true,\r\n *     defaultClipPath: \"inset\",\r\n *     customClipPath: \"\",\r\n *     clipRelative: false,\r\n *     clipArea: false,\r\n *     dragWithClip: true,\r\n * });\r\n * moveable.on(\"clipStart\", e => {\r\n *     console.log(e);\r\n * }).on(\"clip\", e => {\r\n *     if (e.clipType === \"rect\") {\r\n *         e.target.style.clip = e.clipStyle;\r\n *     } else {\r\n *         e.target.style.clipPath = e.clipStyle;\r\n *     }\r\n * }).on(\"clipEnd\", e => {\r\n *     console.log(e);\r\n * });\r\n */\r\n/**\r\n * When drag end the clip area or controls, the `clipEnd` event is called.\r\n * @memberof Moveable.Clippable\r\n * @event clipEnd\r\n * @param {Moveable.Clippable.OnClipEnd} - Parameters for the `clipEnd` event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     clippable: true,\r\n *     defaultClipPath: \"inset\",\r\n *     customClipPath: \"\",\r\n *     clipRelative: false,\r\n *     clipArea: false,\r\n *     dragWithClip: true,\r\n * });\r\n * moveable.on(\"clipStart\", e => {\r\n *     console.log(e);\r\n * }).on(\"clip\", e => {\r\n *     if (e.clipType === \"rect\") {\r\n *         e.target.style.clip = e.clipStyle;\r\n *     } else {\r\n *         e.target.style.clipPath = e.clipStyle;\r\n *     }\r\n * }).on(\"clipEnd\", e => {\r\n *     console.log(e);\r\n * });\r\n */\r\n","import {\r\n    prefix, triggerEvent,\r\n    fillParams, calculatePoses, getRect, fillEndParams, convertCSSSize, fillCSSObject,\r\n} from \"../utils\";\r\nimport {\r\n    OnDragOriginStart, OnDragOrigin,\r\n    OnDragOriginEnd, MoveableManagerInterface, DraggableProps, OriginDraggableProps, MoveableGroupInterface,\r\n} from \"../types\";\r\nimport { hasClass, IObject } from \"@daybrush/utils\";\r\nimport { setDragStart, getDragDist, getNextMatrix } from \"../gesto/GestoUtils\";\r\nimport { minus, plus } from \"@scena/matrix\";\r\nimport Draggable from \"./Draggable\";\r\nimport CustomGesto, { setCustomDrag } from \"../gesto/CustomGesto\";\r\n\r\n/**\r\n * @namespace OriginDraggable\r\n * @memberof Moveable\r\n * @description Whether to drag origin (default: false)\r\n */\r\nexport default {\r\n    name: \"originDraggable\",\r\n    props: [\r\n        \"originDraggable\",\r\n        \"originRelative\",\r\n    ] as const,\r\n    events: [\r\n        \"dragOriginStart\",\r\n        \"dragOrigin\",\r\n        \"dragOriginEnd\",\r\n    ] as const,\r\n    css: [\r\n        `:host[data-able-origindraggable] .control.origin {\r\npointer-events: auto;\r\n}`,\r\n    ],\r\n    dragControlCondition(_: any, e: any) {\r\n        if (e.isRequest) {\r\n            return e.requestAble === \"originDraggable\";\r\n        }\r\n        return hasClass(e.inputEvent.target, prefix(\"origin\"));\r\n    },\r\n    dragControlStart(moveable: MoveableManagerInterface<OriginDraggableProps & DraggableProps>, e: any) {\r\n        const { datas } = e;\r\n\r\n        setDragStart(moveable, e);\r\n\r\n        const params = fillParams<OnDragOriginStart>(moveable, e, {\r\n            dragStart: Draggable.dragStart(\r\n                moveable,\r\n                new CustomGesto().dragStart([0, 0], e),\r\n            ),\r\n        });\r\n        const result = triggerEvent(moveable, \"onDragOriginStart\", params);\r\n\r\n        datas.startOrigin = moveable.state.transformOrigin;\r\n        datas.startTargetOrigin = moveable.state.targetOrigin;\r\n        datas.prevOrigin = [0, 0];\r\n        datas.isDragOrigin = true;\r\n\r\n        if (result === false) {\r\n            datas.isDragOrigin = false;\r\n            return false;\r\n        }\r\n\r\n        return params;\r\n    },\r\n    dragControl(moveable: MoveableManagerInterface<OriginDraggableProps & DraggableProps>, e: any) {\r\n        const { datas, isPinch, isRequest } = e;\r\n\r\n        if (!datas.isDragOrigin) {\r\n            return false;\r\n        }\r\n        const [distX, distY] = getDragDist(e);\r\n        const state = moveable.state;\r\n        const {\r\n            width,\r\n            height,\r\n            offsetMatrix,\r\n            targetMatrix,\r\n            is3d,\r\n        } = state;\r\n        const {\r\n            originRelative = true,\r\n        } = moveable.props;\r\n        const n = is3d ? 4 : 3;\r\n        let dist = [distX, distY];\r\n\r\n        if (isRequest) {\r\n            const distOrigin = e.distOrigin;\r\n            if (distOrigin[0] || distOrigin[1]) {\r\n                dist = distOrigin;\r\n            }\r\n        }\r\n        const origin = plus(datas.startOrigin, dist);\r\n        const targetOrigin = plus(datas.startTargetOrigin, dist);\r\n        const delta = minus(dist, datas.prevOrigin);\r\n\r\n        const nextMatrix = getNextMatrix(\r\n            offsetMatrix,\r\n            targetMatrix,\r\n            origin,\r\n            n,\r\n        );\r\n\r\n        const rect = moveable.getRect();\r\n        const nextRect = getRect(calculatePoses(nextMatrix, width, height, n));\r\n\r\n        const dragDelta = [\r\n            rect.left - nextRect.left,\r\n            rect.top - nextRect.top,\r\n        ];\r\n\r\n        datas.prevOrigin = dist;\r\n        const transformOrigin = [\r\n            convertCSSSize(targetOrigin[0], width, originRelative),\r\n            convertCSSSize(targetOrigin[1], height, originRelative),\r\n        ].join(\" \");\r\n        const result = Draggable.drag(\r\n            moveable,\r\n            setCustomDrag(e, moveable.state, dragDelta, !!isPinch, false),\r\n        )!;\r\n        const params = fillParams<OnDragOrigin>(moveable, e, {\r\n            width,\r\n            height,\r\n            origin,\r\n            dist,\r\n            delta,\r\n            transformOrigin,\r\n            drag: result,\r\n            ...fillCSSObject({\r\n                transformOrigin,\r\n                transform: result.transform,\r\n            }, e),\r\n            afterTransform: result.transform,\r\n        });\r\n        triggerEvent(moveable, \"onDragOrigin\", params);\r\n        return params;\r\n    },\r\n    dragControlEnd(moveable: MoveableManagerInterface<OriginDraggableProps>, e: any) {\r\n        const { datas } = e;\r\n\r\n        if (!datas.isDragOrigin) {\r\n            return false;\r\n        }\r\n        triggerEvent(moveable, \"onDragOriginEnd\",\r\n            fillEndParams<OnDragOriginEnd>(moveable, e, {}));\r\n        return true;\r\n    },\r\n    dragGroupControlCondition(moveable: any, e: any) {\r\n        return this.dragControlCondition(moveable, e);\r\n    },\r\n    dragGroupControlStart(moveable: MoveableGroupInterface<OriginDraggableProps>, e: any) {\r\n        const params = this.dragControlStart(moveable, e);\r\n\r\n        if (!params) {\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    },\r\n    dragGroupControl(moveable: MoveableGroupInterface<OriginDraggableProps>, e: any) {\r\n        const params = this.dragControl(moveable, e);\r\n\r\n        if (!params) {\r\n            return false;\r\n        }\r\n        moveable.transformOrigin = params.transformOrigin;\r\n\r\n        return true;\r\n    },\r\n    /**\r\n    * @method Moveable.OriginDraggable#request\r\n    * @param {object} e - the OriginDraggable's request parameter\r\n    * @param {number} [e.x] - x position\r\n    * @param {number} [e.y] - y position\r\n    * @param {number} [e.deltaX] - x number to move\r\n    * @param {number} [e.deltaY] - y number to move\r\n    * @param {array} [e.deltaOrigin] - left, top number to move transform-origin\r\n    * @param {array} [e.origin] - transform-origin position\r\n    * @param {number} [e.isInstant] - Whether to execute the request instantly\r\n    * @return {Moveable.Requester} Moveable Requester\r\n    * @example\r\n\r\n    * // Instantly Request (requestStart - request - requestEnd)\r\n    * // Use Relative Value\r\n    * moveable.request(\"originDraggable\", { deltaX: 10, deltaY: 10 }, true);\r\n    * // Use Absolute Value\r\n    * moveable.request(\"originDraggable\", { x: 200, y: 100 }, true);\r\n    * // Use Transform Value\r\n    * moveable.request(\"originDraggable\", { deltaOrigin: [10, 0] }, true);\r\n    * moveable.request(\"originDraggable\", { origin: [100, 0] }, true);\r\n    * // requestStart\r\n    * const requester = moveable.request(\"originDraggable\");\r\n    *\r\n    * // request\r\n    * // Use Relative Value\r\n    * requester.request({ deltaX: 10, deltaY: 10 });\r\n    * requester.request({ deltaX: 10, deltaY: 10 });\r\n    * requester.request({ deltaX: 10, deltaY: 10 });\r\n    * // Use Absolute Value\r\n    * moveable.request(\"originDraggable\", { x: 200, y: 100 });\r\n    * moveable.request(\"originDraggable\", { x: 220, y: 100 });\r\n    * moveable.request(\"originDraggable\", { x: 240, y: 100 });\r\n    *\r\n    * // requestEnd\r\n    * requester.requestEnd();\r\n    */\r\n    request(moveable: MoveableManagerInterface<any, any>) {\r\n        const datas = {};\r\n        const rect = moveable.getRect();\r\n        let distX = 0;\r\n        let distY = 0;\r\n\r\n        const transformOrigin = rect.transformOrigin;\r\n        const distOrigin = [0, 0];\r\n\r\n        return {\r\n            isControl: true,\r\n            requestStart() {\r\n                return { datas };\r\n            },\r\n            request(e: IObject<any>) {\r\n                if (\"deltaOrigin\" in e) {\r\n                    distOrigin[0] += e.deltaOrigin[0];\r\n                    distOrigin[1] += e.deltaOrigin[1];\r\n                } else if (\"origin\" in e) {\r\n                    distOrigin[0] = e.origin[0] - transformOrigin[0];\r\n                    distOrigin[1] = e.origin[1] - transformOrigin[1];\r\n                } else {\r\n                    if (\"x\" in e) {\r\n                        distX = e.x - rect.left;\r\n                    } else if (\"deltaX\" in e) {\r\n                        distX += e.deltaX;\r\n                    }\r\n                    if (\"y\" in e) {\r\n                        distY = e.y - rect.top;\r\n                    } else if (\"deltaY\" in e) {\r\n                        distY += e.deltaY;\r\n                    }\r\n                }\r\n\r\n                return { datas, distX, distY, distOrigin };\r\n            },\r\n            requestEnd() {\r\n                return { datas, isDrag: true };\r\n            },\r\n        };\r\n    },\r\n};\r\n/**\r\n * Whether to drag origin (default: false)\r\n * @name Moveable.OriginDraggable#originDraggable\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     originDraggable: true,\r\n * });\r\n * let translate = [0, 0];\r\n * moveable.on(\"dragOriginStart\", e => {\r\n *     e.dragStart && e.dragStart.set(translate);\r\n * }).on(\"dragOrigin\", e => {\r\n *     translate = e.drag.beforeTranslate;\r\n *     e.target.style.cssText\r\n *         = `transform-origin: ${e.transformOrigin};`\r\n *         + `transform: translate(${translate[0]}px, ${translate[1]}px)`;\r\n * }).on(\"dragOriginEnd\", e => {\r\n *     console.log(e);\r\n * });\r\n */\r\n\r\n/**\r\n * % Can be used instead of the absolute px (default: true)\r\n * @name Moveable.OriginDraggable#originRelative\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     originDraggable: true,\r\n *     originRelative: false,\r\n * });\r\n * moveable.originRelative = true;\r\n */\r\n\r\n/**\r\n* When drag start the origin, the `dragOriginStart` event is called.\r\n* @memberof Moveable.OriginDraggable\r\n* @event dragOriginStart\r\n* @param {Moveable.OriginDraggable.OnDragOriginStart} - Parameters for the `dragOriginStart` event\r\n* @example\r\n* import Moveable from \"moveable\";\r\n*\r\n* const moveable = new Moveable(document.body, {\r\n*     originDraggable: true,\r\n* });\r\n* let translate = [0, 0];\r\n* moveable.on(\"dragOriginStart\", e => {\r\n*     e.dragStart && e.dragStart.set(translate);\r\n* }).on(\"dragOrigin\", e => {\r\n*     translate = e.drag.beforeTranslate;\r\n*     e.target.style.cssText\r\n*         = `transform-origin: ${e.transformOrigin};`\r\n*         + `transform: translate(${translate[0]}px, ${translate[1]}px)`;\r\n* }).on(\"dragOriginEnd\", e => {\r\n*     console.log(e);\r\n* });\r\n*/\r\n\r\n/**\r\n* When drag the origin, the `dragOrigin` event is called.\r\n* @memberof Moveable.OriginDraggable\r\n* @event dragOrigin\r\n* @param {Moveable.OriginDraggable.OnDragOrigin} - Parameters for the `dragOrigin` event\r\n* @example\r\n* import Moveable from \"moveable\";\r\n*\r\n* const moveable = new Moveable(document.body, {\r\n*     originDraggable: true,\r\n* });\r\n* let translate = [0, 0];\r\n* moveable.on(\"dragOriginStart\", e => {\r\n*     e.dragStart && e.dragStart.set(translate);\r\n* }).on(\"dragOrigin\", e => {\r\n*     translate = e.drag.beforeTranslate;\r\n*     e.target.style.cssText\r\n*         = `transform-origin: ${e.transformOrigin};`\r\n*         + `transform: translate(${translate[0]}px, ${translate[1]}px)`;\r\n* }).on(\"dragOriginEnd\", e => {\r\n*     console.log(e);\r\n* });\r\n*/\r\n\r\n/**\r\n* When drag end the origin, the `dragOriginEnd` event is called.\r\n* @memberof Moveable.OriginDraggable\r\n* @event dragOriginEnd\r\n* @param {Moveable.OriginDraggable.OnDragOriginEnd} - Parameters for the `dragOriginEnd` event\r\n* @example\r\n* import Moveable from \"moveable\";\r\n*\r\n* const moveable = new Moveable(document.body, {\r\n*     originDraggable: true,\r\n* });\r\n* let translate = [0, 0];\r\n* moveable.on(\"dragOriginStart\", e => {\r\n*     e.dragStart && e.dragStart.set(translate);\r\n* }).on(\"dragOrigin\", e => {\r\n*     translate = e.drag.beforeTranslate;\r\n*     e.target.style.cssText\r\n*         = `transform-origin: ${e.transformOrigin};`\r\n*         + `transform: translate(${translate[0]}px, ${translate[1]}px)`;\r\n* }).on(\"dragOriginEnd\", e => {\r\n*     console.log(e);\r\n* });\r\n*/\r\n","import {\r\n    prefix, triggerEvent,\r\n    fillParams, fillEndParams, calculatePosition,\r\n    fillCSSObject,\r\n    catchEvent,\r\n    getComputedStyle,\r\n} from \"../utils\";\r\nimport {\r\n    Renderer, RoundableProps, OnRoundStart,\r\n    RoundableState, OnRound, ControlPose, OnRoundEnd,\r\n    MoveableManagerInterface,\r\n    OnRoundGroup,\r\n    MoveableGroupInterface,\r\n    OnRoundGroupStart,\r\n    OnRoundGroupEnd,\r\n} from \"../types\";\r\nimport { splitSpace } from \"@daybrush/utils\";\r\nimport { setDragStart, getDragDist, calculatePointerDist } from \"../gesto/GestoUtils\";\r\nimport { minus, plus } from \"@scena/matrix\";\r\nimport {\r\n    getRadiusValues,\r\n    getRadiusStyles,\r\n    splitRadiusPoses,\r\n} from \"./roundable/borderRadius\";\r\nimport { fillChildEvents } from \"../groupUtils\";\r\n\r\n\r\nfunction addBorderRadiusByLine(\r\n    controlPoses: ControlPose[],\r\n    lineIndex: number,\r\n    distX: number,\r\n    distY: number,\r\n) {\r\n    // lineIndex\r\n    // 0 top\r\n    // 1 right\r\n    // 2 bottom\r\n    // 3 left\r\n\r\n    const horizontalsLength = controlPoses.filter(({ virtual, horizontal }) => horizontal && !virtual).length;\r\n    const verticalsLength = controlPoses.filter(({ virtual, vertical }) => vertical && !virtual).length;\r\n    let controlIndex = -1;\r\n\r\n    //top\r\n    if (lineIndex === 0) {\r\n        if (horizontalsLength === 0) {\r\n            controlIndex = 0;\r\n        } else if (horizontalsLength === 1) {\r\n            controlIndex = 1;\r\n        }\r\n    }\r\n    // bottom\r\n    if (lineIndex === 2) {\r\n        if (horizontalsLength <= 2) {\r\n            controlIndex = 2;\r\n        } else if (horizontalsLength <= 3) {\r\n            controlIndex = 3;\r\n        }\r\n    }\r\n    // left\r\n    if (lineIndex === 3) {\r\n        if (verticalsLength === 0) {\r\n            controlIndex = 4;\r\n        } else if (verticalsLength < 4) {\r\n            controlIndex = 7;\r\n        }\r\n    }\r\n\r\n    // right\r\n    if (lineIndex === 1) {\r\n        if (verticalsLength <= 1) {\r\n            controlIndex = 5;\r\n        } else if (verticalsLength <= 2) {\r\n            controlIndex = 6;\r\n        }\r\n    }\r\n    if (controlIndex === -1 || !controlPoses[controlIndex].virtual) {\r\n        return;\r\n    }\r\n    const controlPoseInfo = controlPoses[controlIndex];\r\n\r\n    addBorderRadius(controlPoses, controlIndex);\r\n\r\n    if (controlIndex < 4) {\r\n        controlPoseInfo.pos[0] = distX;\r\n    } else {\r\n        controlPoseInfo.pos[1] = distY;\r\n    }\r\n}\r\nfunction addBorderRadius(\r\n    controlPoses: ControlPose[],\r\n    index: number,\r\n) {\r\n    if (index < 4) {\r\n        controlPoses.slice(0, index + 1).forEach(info => {\r\n            info.virtual = false;\r\n        });\r\n    } else {\r\n        if (controlPoses[0].virtual) {\r\n            controlPoses[0].virtual = false;\r\n        }\r\n        controlPoses.slice(4, index + 1).forEach(info => {\r\n            info.virtual = false;\r\n        });\r\n    }\r\n}\r\nfunction removeBorderRadius(\r\n    controlPoses: ControlPose[],\r\n    index: number,\r\n) {\r\n    if (index < 4) {\r\n        controlPoses.slice(index, 4).forEach(info => {\r\n            info.virtual = true;\r\n        });\r\n    } else {\r\n        controlPoses.slice(index).forEach(info => {\r\n            info.virtual = true;\r\n        });\r\n    }\r\n}\r\nfunction getBorderRadius(\r\n    borderRadius: string,\r\n    width: number,\r\n    height: number,\r\n    minCounts: number[] = [0, 0],\r\n    full?: boolean,\r\n) {\r\n    let values: string[] = [];\r\n\r\n    if (!borderRadius || borderRadius === \"0px\") {\r\n        values = [];\r\n    } else {\r\n        values = splitSpace(borderRadius);\r\n    }\r\n\r\n    return getRadiusValues(values, width, height, 0, 0, minCounts, full);\r\n}\r\n\r\nfunction triggerRoundEvent(\r\n    moveable: MoveableManagerInterface<RoundableProps, RoundableState>,\r\n    e: any,\r\n    dist: number[],\r\n    delta: number[],\r\n    nextPoses: ControlPose[],\r\n) {\r\n    const state = moveable.state;\r\n    const {\r\n        width,\r\n        height,\r\n    } = state;\r\n    const {\r\n        raws,\r\n        styles,\r\n        radiusPoses,\r\n    } = getRadiusStyles(\r\n        nextPoses,\r\n        moveable.props.roundRelative!,\r\n        width,\r\n        height,\r\n    );\r\n    const {\r\n        horizontals,\r\n        verticals,\r\n    } = splitRadiusPoses(radiusPoses, raws);\r\n    const borderRadius = styles.join(\" \");\r\n\r\n    state.borderRadiusState = borderRadius;\r\n    const params = fillParams<OnRound>(moveable, e, {\r\n        horizontals,\r\n        verticals,\r\n        borderRadius,\r\n        width,\r\n        height,\r\n        delta,\r\n        dist,\r\n        ...fillCSSObject({\r\n            borderRadius,\r\n        }, e),\r\n    });\r\n    triggerEvent(moveable, \"onRound\", params);\r\n\r\n    return params;\r\n}\r\n\r\n\r\nfunction getStyleBorderRadius(moveable: MoveableManagerInterface<RoundableProps, RoundableState>) {\r\n    const {\r\n        style,\r\n    } = moveable.getState();\r\n    let borderRadius = style.borderRadius || \"\";\r\n\r\n    if (!borderRadius && moveable.props.groupable) {\r\n        const firstMoveable = moveable.moveables![0];\r\n        const firstTarget = moveable.getTargets()[0];\r\n\r\n\r\n        if (firstTarget) {\r\n            if (firstMoveable?.props.target === firstTarget) {\r\n                borderRadius = moveable.moveables![0]?.state.style.borderRadius ?? \"\";\r\n                style.borderRadius = borderRadius;\r\n            } else {\r\n                borderRadius = getComputedStyle(firstTarget).borderRadius;\r\n                style.borderRadius = borderRadius;\r\n            }\r\n        }\r\n\r\n    }\r\n    return borderRadius;\r\n}\r\n\r\n/**\r\n * @namespace Moveable.Roundable\r\n * @description Whether to show and drag or double click border-radius\r\n */\r\n\r\nexport default {\r\n    name: \"roundable\",\r\n    props: [\r\n        \"roundable\",\r\n        \"roundRelative\",\r\n        \"minRoundControls\",\r\n        \"maxRoundControls\",\r\n        \"roundClickable\",\r\n        \"roundPadding\",\r\n        \"isDisplayShadowRoundControls\",\r\n    ] as const,\r\n    events: [\r\n        \"roundStart\",\r\n        \"round\",\r\n        \"roundEnd\",\r\n        \"roundGroupStart\",\r\n        \"roundGroup\",\r\n        \"roundGroupEnd\",\r\n    ] as const,\r\n    css: [\r\n        `.control.border-radius {\r\nbackground: #d66;\r\ncursor: pointer;\r\nz-index: 3;\r\n}`,\r\n        `.control.border-radius.vertical {\r\nbackground: #d6d;\r\nz-index: 2;\r\n}`,\r\n        `.control.border-radius.virtual {\r\nopacity: 0.5;\r\nz-index: 1;\r\n}`,\r\n        `:host.round-line-clickable .line.direction {\r\ncursor: pointer;\r\n}`,\r\n    ],\r\n    className(moveable: MoveableManagerInterface<RoundableProps, RoundableState>) {\r\n        const roundClickable = moveable.props.roundClickable;\r\n\r\n        return roundClickable === true || roundClickable === \"line\" ? prefix(\"round-line-clickable\") : \"\";\r\n    },\r\n    requestStyle(): Array<keyof CSSStyleDeclaration> {\r\n        return [\"borderRadius\"];\r\n    },\r\n    requestChildStyle(): Array<keyof CSSStyleDeclaration> {\r\n        return [\"borderRadius\"];\r\n    },\r\n    render(moveable: MoveableManagerInterface<RoundableProps, RoundableState>, React: Renderer): any {\r\n        const {\r\n            target,\r\n            width,\r\n            height,\r\n            allMatrix,\r\n            is3d,\r\n            left,\r\n            top,\r\n            borderRadiusState,\r\n        } = moveable.getState();\r\n\r\n        const {\r\n            minRoundControls = [0, 0],\r\n            maxRoundControls = [4, 4],\r\n            zoom,\r\n            roundPadding = 0,\r\n            isDisplayShadowRoundControls,\r\n            groupable,\r\n        } = moveable.props;\r\n\r\n        if (!target) {\r\n            return null;\r\n        }\r\n\r\n        const borderRadius = borderRadiusState || getStyleBorderRadius(moveable);\r\n        const n = is3d ? 4 : 3;\r\n        const radiusValues = getBorderRadius(\r\n            borderRadius,\r\n            width, height,\r\n            minRoundControls,\r\n            true,\r\n        );\r\n\r\n        if (!radiusValues) {\r\n            return null;\r\n        }\r\n        let verticalCount = 0;\r\n        let horizontalCount = 0;\r\n        const basePos = groupable ? [0, 0] : [left, top];\r\n\r\n        return radiusValues.map((v, i) => {\r\n            const horizontal = v.horizontal;\r\n            const vertical = v.vertical;\r\n            const direction = v.direction || \"\";\r\n            const originalPos = [...v.pos];\r\n\r\n            horizontalCount += Math.abs(horizontal);\r\n            verticalCount += Math.abs(vertical);\r\n\r\n\r\n            if (horizontal && direction.indexOf(\"n\") > -1) {\r\n                originalPos[1] -= roundPadding;\r\n            }\r\n            if (vertical && direction.indexOf(\"w\") > -1) {\r\n                originalPos[0] -= roundPadding;\r\n            }\r\n            if (horizontal && direction.indexOf(\"s\") > -1) {\r\n                originalPos[1] += roundPadding;\r\n            }\r\n            if (vertical && direction.indexOf(\"e\") > -1) {\r\n                originalPos[0] += roundPadding;\r\n            }\r\n            const pos = minus(calculatePosition(allMatrix, originalPos, n), basePos);\r\n            const isDisplayVerticalShadow\r\n                = isDisplayShadowRoundControls\r\n                && isDisplayShadowRoundControls !== \"horizontal\";\r\n            const isDisplay = v.vertical\r\n                ? verticalCount <= maxRoundControls[1] && (isDisplayVerticalShadow || !v.virtual)\r\n                : horizontalCount <= maxRoundControls[0] && (isDisplayShadowRoundControls || !v.virtual);\r\n\r\n            return <div key={`borderRadiusControl${i}`}\r\n                className={prefix(\r\n                    \"control\", \"border-radius\",\r\n                    v.vertical ? \"vertical\" : \"\",\r\n                    v.virtual ? \"virtual\" : \"\",\r\n                )}\r\n                data-radius-index={i}\r\n                style={{\r\n                    display: isDisplay ? \"block\" : \"none\",\r\n                    transform: `translate(${pos[0]}px, ${pos[1]}px) scale(${zoom})`,\r\n                }}></div>;\r\n        });\r\n    },\r\n    dragControlCondition(moveable: any, e: any) {\r\n        if (!e.inputEvent || e.isRequest) {\r\n            return false;\r\n        }\r\n        const className = (e.inputEvent.target.getAttribute(\"class\") || \"\");\r\n\r\n        return className.indexOf(\"border-radius\") > -1\r\n            || (className.indexOf(\"moveable-line\") > -1 && className.indexOf(\"moveable-direction\") > -1);\r\n    },\r\n    dragGroupControlCondition(moveable: any, e: any) {\r\n        return this.dragControlCondition(moveable, e);\r\n    },\r\n    dragControlStart(moveable: MoveableManagerInterface<RoundableProps, RoundableState>, e: any) {\r\n        const { inputEvent, datas } = e;\r\n        const inputTarget = inputEvent.target;\r\n        const className = (inputTarget.getAttribute(\"class\") || \"\");\r\n        const isControl = className.indexOf(\"border-radius\") > -1;\r\n        const isLine = className.indexOf(\"moveable-line\") > -1 && className.indexOf(\"moveable-direction\") > -1;\r\n        const controlIndex = isControl ? parseInt(inputTarget.getAttribute(\"data-radius-index\"), 10) : -1;\r\n        let lineIndex = -1;\r\n\r\n        if (isLine) {\r\n            const indexAttr = inputTarget.getAttribute(\"data-line-key\")! || \"\";\r\n\r\n            if (indexAttr) {\r\n                lineIndex = parseInt(indexAttr.replace(/render-line-/g, \"\"), 10);\r\n\r\n                if (isNaN(lineIndex)) {\r\n                    lineIndex = -1;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!isControl && !isLine) {\r\n            return false;\r\n        }\r\n\r\n        const params = fillParams<OnRoundStart>(moveable, e, {});\r\n\r\n        const result = triggerEvent(\r\n            moveable, \"onRoundStart\", params);\r\n\r\n        if (result === false) {\r\n            return false;\r\n        }\r\n\r\n        datas.lineIndex = lineIndex;\r\n        datas.controlIndex = controlIndex;\r\n        datas.isControl = isControl;\r\n        datas.isLine = isLine;\r\n\r\n        setDragStart(moveable, e);\r\n\r\n        const {\r\n            roundRelative,\r\n            minRoundControls = [0, 0],\r\n        } = moveable.props;\r\n        const state = moveable.state;\r\n        const {\r\n            width,\r\n            height,\r\n        } = state;\r\n\r\n        datas.isRound = true;\r\n        datas.prevDist = [0, 0];\r\n        const borderRadius = getStyleBorderRadius(moveable);\r\n        const controlPoses = getBorderRadius(\r\n            borderRadius || \"\",\r\n            width,\r\n            height,\r\n            minRoundControls,\r\n            true,\r\n        ) || [];\r\n\r\n        datas.controlPoses = controlPoses;\r\n\r\n        state.borderRadiusState = getRadiusStyles(\r\n            controlPoses,\r\n            roundRelative!,\r\n            width,\r\n            height,\r\n        ).styles.join(\" \");\r\n        return params;\r\n    },\r\n    dragControl(moveable: MoveableManagerInterface<RoundableProps, RoundableState>, e: any) {\r\n        const { datas } = e;\r\n        const controlPoses = datas.controlPoses as ControlPose[];\r\n\r\n        if (!datas.isRound || !datas.isControl || !controlPoses.length) {\r\n            return false;\r\n        }\r\n        const index = datas.controlIndex as number;\r\n\r\n        const [distX, distY] = getDragDist(e);\r\n        const dist = [distX, distY];\r\n        const delta = minus(dist, datas.prevDist);\r\n        const {\r\n            maxRoundControls = [4, 4],\r\n        } = moveable.props;\r\n        const { width, height } = moveable.state;\r\n        const selectedControlPose = controlPoses[index];\r\n\r\n        const selectedVertical = selectedControlPose.vertical;\r\n        const selectedHorizontal = selectedControlPose.horizontal;\r\n\r\n        // 0: [0, 1, 2, 3] maxCount === 1\r\n        // 0: [0, 2] maxCount === 2\r\n        // 1: [1, 3] maxCount === 2\r\n\r\n        // 0: [0] maxCount === 3\r\n        // 1: [1, 3] maxCount === 3\r\n\r\n        const dists = controlPoses.map(pose => {\r\n            const { horizontal, vertical } = pose;\r\n            const poseDist = [\r\n                horizontal * selectedHorizontal * dist[0],\r\n                vertical * selectedVertical * dist[1],\r\n            ];\r\n            if (horizontal) {\r\n                if (maxRoundControls[0] === 1) {\r\n                    return poseDist;\r\n                } else if (maxRoundControls[0] < 4 && horizontal !== selectedHorizontal) {\r\n                    return poseDist;\r\n                }\r\n            } else if (maxRoundControls[1] === 0) {\r\n                poseDist[1] = vertical * selectedHorizontal * dist[0] / width * height;\r\n\r\n                return poseDist;\r\n            } else if (selectedVertical) {\r\n                if (maxRoundControls[1] === 1) {\r\n                    return poseDist;\r\n                } else if (maxRoundControls[1] < 4 && vertical !== selectedVertical) {\r\n                    return poseDist;\r\n                }\r\n            }\r\n            return [0, 0];\r\n        });\r\n\r\n        dists[index] = dist;\r\n        const nextPoses = controlPoses.map((info, i) => {\r\n            return {\r\n                ...info,\r\n                pos: plus(info.pos, dists[i]),\r\n            };\r\n        });\r\n\r\n        if (index < 4) {\r\n            nextPoses.slice(0, index + 1).forEach(info => {\r\n                info.virtual = false;\r\n            });\r\n        } else {\r\n            nextPoses.slice(4, index + 1).forEach(info => {\r\n                info.virtual = false;\r\n            });\r\n        }\r\n\r\n        datas.prevDist = [distX, distY];\r\n\r\n        return triggerRoundEvent(\r\n            moveable,\r\n            e,\r\n            dist,\r\n            delta,\r\n            nextPoses,\r\n        );\r\n    },\r\n    dragControlEnd(moveable: MoveableManagerInterface<RoundableProps, RoundableState>, e: any) {\r\n        const state = moveable.state;\r\n\r\n        state.borderRadiusState = \"\";\r\n        const { datas, isDouble } = e;\r\n        if (!datas.isRound) {\r\n            return false;\r\n        }\r\n        const {\r\n            isControl,\r\n            controlIndex,\r\n            isLine,\r\n            lineIndex,\r\n        } = datas;\r\n        const controlPoses = datas.controlPoses as ControlPose[];\r\n        const length = controlPoses.filter(({ virtual }) => virtual).length;\r\n        const {\r\n            roundClickable = true,\r\n        } = moveable.props;\r\n\r\n        if (isDouble && roundClickable) {\r\n            if (isControl && (roundClickable === true || roundClickable === \"control\")) {\r\n                removeBorderRadius(controlPoses, controlIndex);\r\n            } else if (isLine && (roundClickable === true || roundClickable === \"line\")) {\r\n                const [distX, distY] = calculatePointerDist(moveable, e);\r\n\r\n                addBorderRadiusByLine(controlPoses, lineIndex, distX, distY);\r\n            }\r\n\r\n            if (length !== controlPoses.filter(({ virtual }) => virtual).length) {\r\n                triggerRoundEvent(\r\n                    moveable,\r\n                    e,\r\n                    [0, 0],\r\n                    [0, 0],\r\n                    controlPoses,\r\n                );\r\n            }\r\n        }\r\n        const params = fillEndParams<OnRoundEnd>(moveable, e, {});\r\n\r\n        triggerEvent(moveable, \"onRoundEnd\", params);\r\n        state.borderRadiusState = \"\";\r\n        return params;\r\n    },\r\n    dragGroupControlStart(moveable: MoveableGroupInterface<RoundableProps, RoundableState>, e: any) {\r\n        const result = this.dragControlStart(moveable, e);\r\n\r\n        if (!result) {\r\n            return false;\r\n        }\r\n\r\n        const moveables = moveable.moveables;\r\n        const targets = moveable.props.targets!;\r\n        const events = fillChildEvents(moveable, \"roundable\", e);\r\n\r\n        const nextParams: OnRoundGroupStart = {\r\n            targets: moveable.props.targets!,\r\n            events: events.map((ev, i) => {\r\n                return {\r\n                    ...ev,\r\n                    target: targets[i],\r\n                    moveable: moveables[i],\r\n                    currentTarget: moveables[i],\r\n                };\r\n            }),\r\n            ...result,\r\n        };\r\n\r\n        triggerEvent(moveable, \"onRoundGroupStart\", nextParams);\r\n        return result;\r\n    },\r\n    dragGroupControl(moveable: MoveableGroupInterface<RoundableProps, RoundableState>, e: any) {\r\n        const result = this.dragControl(moveable, e);\r\n\r\n\r\n        if (!result) {\r\n            return false;\r\n        }\r\n\r\n        const moveables = moveable.moveables;\r\n        const targets = moveable.props.targets!;\r\n        const events = fillChildEvents(moveable, \"roundable\", e);\r\n\r\n        const nextParams: OnRoundGroup = {\r\n            targets: moveable.props.targets!,\r\n            events: events.map((ev, i) => {\r\n                return {\r\n                    ...ev,\r\n                    target: targets[i],\r\n                    moveable: moveables[i],\r\n                    currentTarget: moveables[i],\r\n                    ...fillCSSObject({\r\n                        borderRadius: result.borderRadius,\r\n                    }, ev),\r\n                };\r\n            }),\r\n            ...result,\r\n        };\r\n\r\n        triggerEvent(moveable, \"onRoundGroup\", nextParams);\r\n        return nextParams;\r\n    },\r\n    dragGroupControlEnd(moveable: MoveableGroupInterface<RoundableProps, RoundableState>, e: any) {\r\n        const moveables = moveable.moveables;\r\n        const targets = moveable.props.targets!;\r\n        const events = fillChildEvents(moveable, \"roundable\", e);\r\n\r\n        catchEvent(moveable, \"onRound\", parentEvent => {\r\n            const nextParams: OnRoundGroup = {\r\n                targets: moveable.props.targets!,\r\n                events: events.map((ev, i) => {\r\n                    return {\r\n                        ...ev,\r\n                        target: targets[i],\r\n                        moveable: moveables[i],\r\n                        currentTarget: moveables[i],\r\n                        ...fillCSSObject({\r\n                            borderRadius: parentEvent.borderRadius,\r\n                        }, ev),\r\n                    };\r\n                }),\r\n                ...parentEvent,\r\n            };\r\n            triggerEvent(moveable, \"onRoundGroup\", nextParams);\r\n        });\r\n        const result = this.dragControlEnd(moveable, e);\r\n\r\n        if (!result) {\r\n            return false;\r\n        }\r\n        const nextParams: OnRoundGroupEnd = {\r\n            targets: moveable.props.targets!,\r\n            events: events.map((ev, i) => {\r\n                return {\r\n                    ...ev,\r\n                    target: targets[i],\r\n                    moveable: moveables[i],\r\n                    currentTarget: moveables[i],\r\n                    lastEvent: ev.datas?.lastEvent,\r\n                };\r\n            }),\r\n            ...result,\r\n        };\r\n\r\n        triggerEvent(moveable, \"onRoundGroupEnd\", nextParams);\r\n        return nextParams;\r\n    },\r\n    unset(moveable: MoveableManagerInterface<RoundableProps, RoundableState>) {\r\n        moveable.state.borderRadiusState = \"\";\r\n    },\r\n};\r\n/**\r\n * Whether to show and drag or double click border-radius, (default: false)\r\n * @name Moveable.Roundable#roundable\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     roundable: true,\r\n *     roundRelative: false,\r\n * });\r\n * moveable.on(\"roundStart\", e => {\r\n *     console.log(e);\r\n * }).on(\"round\", e => {\r\n *     e.target.style.borderRadius = e.borderRadius;\r\n * }).on(\"roundEnd\", e => {\r\n *     console.log(e);\r\n * });\r\n */\r\n/**\r\n * % Can be used instead of the absolute px\r\n * @name Moveable.Roundable#roundRelative\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     roundable: true,\r\n *     roundRelative: false,\r\n * });\r\n * moveable.on(\"roundStart\", e => {\r\n *     console.log(e);\r\n * }).on(\"round\", e => {\r\n *     e.target.style.borderRadius = e.borderRadius;\r\n * }).on(\"roundEnd\", e => {\r\n *     console.log(e);\r\n * });\r\n */\r\n/**\r\n * Minimum number of round controls. It moves in proportion by control. [horizontal, vertical] (default: [0, 0])\r\n * @name Moveable.Roundable#minRoundControls\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     roundable: true,\r\n *     roundRelative: false,\r\n *     minRoundControls: [0, 0],\r\n * });\r\n * moveable.minRoundControls = [1, 0];\r\n */\r\n/**\r\n * Maximum number of round controls. It moves in proportion by control. [horizontal, vertical] (default: [4, 4])\r\n * @name Moveable.Roundable#maxRoundControls\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     roundable: true,\r\n *     roundRelative: false,\r\n *     maxRoundControls: [4, 4],\r\n * });\r\n * moveable.maxRoundControls = [1, 0];\r\n */\r\n/**\r\n * Whether you can add/delete round controls by double-clicking a line or control.\r\n * @name Moveable.Roundable#roundClickable\r\n * @default true\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     roundable: true,\r\n *     roundRelative: false,\r\n *     roundClickable: true,\r\n * });\r\n * moveable.roundClickable = false;\r\n */\r\n\r\n/**\r\n * Whether to show a round control that does not actually exist as a shadow\r\n * @name Moveable.Roundable#isDisplayShadowRoundControls\r\n * @default false\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     roundable: true,\r\n *     isDisplayShadowRoundControls: false,\r\n * });\r\n * moveable.isDisplayShadowRoundControls = true;\r\n */\r\n\r\n\r\n/**\r\n * The padding value of the position of the round control\r\n * @name Moveable.Roundable#roundPadding\r\n * @default false\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     roundable: true,\r\n *     roundPadding: 0,\r\n * });\r\n * moveable.roundPadding = 15;\r\n */\r\n\r\n/**\r\n * When drag start the clip area or controls, the `roundStart` event is called.\r\n * @memberof Moveable.Roundable\r\n * @event roundStart\r\n * @param {Moveable.Roundable.OnRoundStart} - Parameters for the `roundStart` event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     roundable: true,\r\n *     roundRelative: false,\r\n * });\r\n * moveable.on(\"roundStart\", e => {\r\n *     console.log(e);\r\n * }).on(\"round\", e => {\r\n *     e.target.style.borderRadius = e.borderRadius;\r\n * }).on(\"roundEnd\", e => {\r\n *     console.log(e);\r\n * });\r\n */\r\n\r\n\r\n/**\r\n * When drag or double click the border area or controls, the `round` event is called.\r\n * @memberof Moveable.Roundable\r\n * @event round\r\n * @param {Moveable.Roundable.OnRound} - Parameters for the `round` event\r\n * @example\r\n  * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     roundable: true,\r\n *     roundRelative: false,\r\n * });\r\n * moveable.on(\"roundStart\", e => {\r\n *     console.log(e);\r\n * }).on(\"round\", e => {\r\n *     e.target.style.borderRadius = e.borderRadius;\r\n * }).on(\"roundEnd\", e => {\r\n *     console.log(e);\r\n * });\r\n */\r\n\r\n\r\n/**\r\n * When drag end the border area or controls, the `roundEnd` event is called.\r\n * @memberof Moveable.Roundable\r\n * @event roundEnd\r\n * @param {Moveable.Roundable.onRoundEnd} - Parameters for the `roundEnd` event\r\n * @example\r\n  * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     roundable: true,\r\n *     roundRelative: false,\r\n * });\r\n * moveable.on(\"roundStart\", e => {\r\n *     console.log(e);\r\n * }).on(\"round\", e => {\r\n *     e.target.style.borderRadius = e.borderRadius;\r\n * }).on(\"roundEnd\", e => {\r\n *     console.log(e);\r\n * });\r\n */\r\n\r\n\r\n/**\r\n * When drag start the clip area or controls, the `roundGroupStart` event is called.\r\n * @memberof Moveable.Roundable\r\n * @event roundGroupStart\r\n * @param {Moveable.Roundable.OnRoundGroupStart} - Parameters for the `roundGroupStart` event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     targets: [target1, target2, target3],\r\n *     roundable: true,\r\n * });\r\n * moveable.on(\"roundGroupStart\", e => {\r\n *     console.log(e.targets);\r\n * }).on(\"roundGroup\", e => {\r\n *   e.events.forEach(ev => {\r\n *       ev.target.style.cssText += ev.cssText;\r\n *   });\r\n * }).on(\"roundGroupEnd\", e => {\r\n *     console.log(e);\r\n * });\r\n */\r\n\r\n\r\n/**\r\n * When drag or double click the border area or controls, the `roundGroup` event is called.\r\n * @memberof Moveable.Roundable\r\n * @event roundGroup\r\n * @param {Moveable.Roundable.OnRoundGroup} - Parameters for the `roundGroup` event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     targets: [target1, target2, target3],\r\n *     roundable: true,\r\n * });\r\n * moveable.on(\"roundGroupStart\", e => {\r\n *     console.log(e.targets);\r\n * }).on(\"roundGroup\", e => {\r\n *   e.events.forEach(ev => {\r\n *       ev.target.style.cssText += ev.cssText;\r\n *   });\r\n * }).on(\"roundGroupEnd\", e => {\r\n *     console.log(e);\r\n * });\r\n */\r\n\r\n\r\n/**\r\n * When drag end the border area or controls, the `roundGroupEnd` event is called.\r\n * @memberof Moveable.Roundable\r\n * @event roundGroupEnd\r\n * @param {Moveable.Roundable.onRoundGroupEnd} - Parameters for the `roundGroupEnd` event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     targets: [target1, target2, target3],\r\n *     roundable: true,\r\n * });\r\n * moveable.on(\"roundGroupStart\", e => {\r\n *     console.log(e.targets);\r\n * }).on(\"roundGroup\", e => {\r\n *     e.events.forEach(ev => {\r\n *         ev.target.style.cssText += ev.cssText;\r\n *     });\r\n * }).on(\"roundGroupEnd\", e => {\r\n *     console.log(e);\r\n * });\r\n */\r\n","import {\r\n    MoveableManagerInterface, BeforeRenderableProps,\r\n    OnBeforeRenderStart, OnBeforeRender, OnBeforeRenderEnd,\r\n    MoveableGroupInterface, OnBeforeRenderGroupStart,\r\n    OnBeforeRenderGroup, OnBeforeRenderGroupEnd,\r\n} from \"../types\";\r\nimport { fillParams, triggerEvent } from \"../utils\";\r\nimport { convertMatrixtoCSS, createIdentityMatrix } from \"@scena/matrix\";\r\nimport { isArray, splitSpace } from \"@daybrush/utils\";\r\nimport { fillChildEvents } from \"../groupUtils\";\r\n\r\n\r\nfunction isIdentityMatrix(matrix: string, is3d?: boolean) {\r\n    const n = is3d ? 4 : 3;\r\n    const identityMatrix = createIdentityMatrix(n);\r\n    const value = `matrix${is3d ? \"3d\" : \"\"}(${identityMatrix.join(\",\")})`;\r\n\r\n    return matrix === value || matrix === `matrix(1,0,0,1,0,0)`;\r\n}\r\nexport default {\r\n    isPinch: true,\r\n    name: \"beforeRenderable\",\r\n    props: [] as const,\r\n    events: [\r\n        \"beforeRenderStart\",\r\n        \"beforeRender\",\r\n        \"beforeRenderEnd\",\r\n        \"beforeRenderGroupStart\",\r\n        \"beforeRenderGroup\",\r\n        \"beforeRenderGroupEnd\",\r\n    ] as const,\r\n    dragRelation: \"weak\",\r\n    setTransform(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\r\n        const {\r\n            is3d,\r\n            targetMatrix,\r\n            inlineTransform,\r\n        } = moveable.state;\r\n        const cssMatrix = is3d\r\n            ? `matrix3d(${targetMatrix.join(\",\")})`\r\n            : `matrix(${convertMatrixtoCSS(targetMatrix, true)})`;\r\n        const startTransform = !inlineTransform || inlineTransform === \"none\" ? cssMatrix : inlineTransform;\r\n\r\n        e.datas.startTransforms = isIdentityMatrix(startTransform, is3d) ? [] : splitSpace(startTransform);\r\n    },\r\n    resetStyle(e: any) {\r\n        const datas = e.datas;\r\n\r\n        datas.nextStyle = {};\r\n        datas.nextTransforms = e.datas.startTransforms;\r\n        datas.nextTransformAppendedIndexes = [];\r\n    },\r\n    fillDragStartParams(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\r\n        return fillParams<OnBeforeRenderStart>(moveable, e, {\r\n            setTransform: (transform: string | string[]) => {\r\n                e.datas.startTransforms = isArray(transform) ? transform : splitSpace(transform);\r\n            },\r\n            isPinch: !!e.isPinch,\r\n        });\r\n    },\r\n    fillDragParams(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\r\n        return fillParams<OnBeforeRender>(moveable, e, {\r\n            isPinch: !!e.isPinch,\r\n        });\r\n    },\r\n    dragStart(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\r\n        this.setTransform(moveable, e);\r\n        this.resetStyle(e);\r\n\r\n        triggerEvent(moveable, `onBeforeRenderStart`, this.fillDragStartParams(moveable, e));\r\n    },\r\n    drag(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\r\n        if (!e.datas.startTransforms) {\r\n            this.setTransform(moveable, e);\r\n        }\r\n        this.resetStyle(e);\r\n        triggerEvent(moveable, `onBeforeRender`, fillParams<OnBeforeRender>(moveable, e, {\r\n            isPinch: !!e.isPinch,\r\n        }));\r\n    },\r\n    dragEnd(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\r\n        if (!e.datas.startTransforms) {\r\n            this.setTransform(moveable, e);\r\n            this.resetStyle(e);\r\n        }\r\n        triggerEvent(moveable, `onBeforeRenderEnd`, fillParams<OnBeforeRenderEnd>(moveable, e, {\r\n            isPinch: !!e.isPinch,\r\n            isDrag: e.isDrag,\r\n        }));\r\n    },\r\n    dragGroupStart(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\r\n        this.dragStart(moveable, e);\r\n\r\n        const events = fillChildEvents(moveable, \"beforeRenderable\", e);\r\n        const moveables = moveable.moveables;\r\n        const params = events.map((childEvent, i) => {\r\n            const childMoveable = moveables[i];\r\n\r\n            this.setTransform(childMoveable, childEvent);\r\n            this.resetStyle(childEvent);\r\n\r\n            return this.fillDragStartParams(childMoveable, childEvent);\r\n        });\r\n        triggerEvent(moveable, `onBeforeRenderGroupStart`, fillParams<OnBeforeRenderGroupStart>(moveable, e, {\r\n            isPinch: !!e.isPinch,\r\n            targets: moveable.props.targets,\r\n            setTransform() { },\r\n            events: params,\r\n        }));\r\n    },\r\n    dragGroup(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\r\n        this.drag(moveable, e);\r\n\r\n        const events = fillChildEvents(moveable, \"beforeRenderable\", e);\r\n        const moveables = moveable.moveables;\r\n        const params = events.map((childEvent, i) => {\r\n            const childMoveable = moveables[i];\r\n\r\n            this.resetStyle(childEvent);\r\n            return this.fillDragParams(childMoveable, childEvent);\r\n        });\r\n        triggerEvent(moveable, `onBeforeRenderGroup`, fillParams<OnBeforeRenderGroup>(moveable, e, {\r\n            isPinch: !!e.isPinch,\r\n            targets: moveable.props.targets,\r\n            events: params,\r\n        }));\r\n    },\r\n    dragGroupEnd(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\r\n        this.dragEnd(moveable, e);\r\n\r\n        triggerEvent(moveable, `onBeforeRenderGroupEnd`, fillParams<OnBeforeRenderGroupEnd>(moveable, e, {\r\n            isPinch: !!e.isPinch,\r\n            isDrag: e.isDrag,\r\n            targets: moveable.props.targets,\r\n        }));\r\n    },\r\n    dragControlStart(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\r\n        return this.dragStart(moveable, e);\r\n    },\r\n    dragControl(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\r\n        return this.drag(moveable, e);\r\n    },\r\n    dragControlEnd(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\r\n        return this.dragEnd(moveable, e);\r\n    },\r\n    dragGroupControlStart(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\r\n        return this.dragGroupStart(moveable, e);\r\n    },\r\n    dragGroupControl(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\r\n        return this.dragGroup(moveable, e);\r\n    },\r\n    dragGroupControlEnd(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\r\n        return this.dragGroupEnd(moveable, e);\r\n    },\r\n} as const;\r\n","import { parse } from \"css-to-mat\";\r\nimport { getNextStyle, getNextTransformText, getNextTransforms } from \"../gesto/GestoUtils\";\r\nimport { fillChildEvents } from \"../groupUtils\";\r\nimport {\r\n    MoveableManagerInterface, RenderableProps, OnRenderStart, OnRender,\r\n    OnRenderEnd, MoveableGroupInterface,\r\n    OnRenderGroupStart, OnRenderGroup, OnRenderGroupEnd,\r\n} from \"../types\";\r\nimport { triggerEvent, fillParams, fillCSSObject } from \"../utils\";\r\n\r\nexport default {\r\n    name: \"renderable\",\r\n    props: [] as const,\r\n    events: [\r\n        \"renderStart\",\r\n        \"render\",\r\n        \"renderEnd\",\r\n        \"renderGroupStart\",\r\n        \"renderGroup\",\r\n        \"renderGroupEnd\",\r\n    ] as const,\r\n    dragRelation: \"weak\",\r\n    dragStart(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\r\n        triggerEvent(moveable, `onRenderStart`, fillParams<OnRenderStart>(moveable, e, {\r\n            isPinch: !!e.isPinch,\r\n        }));\r\n    },\r\n    drag(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\r\n        triggerEvent(moveable, `onRender`, this.fillDragParams(moveable, e));\r\n    },\r\n    dragAfter(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\r\n        return this.drag(moveable, e);\r\n    },\r\n    dragEnd(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\r\n        triggerEvent(moveable, `onRenderEnd`, this.fillDragEndParams(moveable, e));\r\n    },\r\n    dragGroupStart(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\r\n        triggerEvent(moveable, `onRenderGroupStart`, fillParams<OnRenderGroupStart>(moveable, e, {\r\n            isPinch: !!e.isPinch,\r\n            targets: moveable.props.targets,\r\n        }));\r\n    },\r\n    dragGroup(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\r\n        const events = fillChildEvents(moveable, \"beforeRenderable\", e);\r\n        const moveables = moveable.moveables;\r\n        const params = events.map((childEvent, i) => {\r\n            const childMoveable = moveables[i];\r\n\r\n            return this.fillDragParams(childMoveable, childEvent);\r\n        });\r\n\r\n        triggerEvent(moveable, `onRenderGroup`, fillParams<OnRenderGroup>(moveable, e, {\r\n            isPinch: !!e.isPinch,\r\n            targets: moveable.props.targets,\r\n            transform: getNextTransformText(e),\r\n            transformObject: {},\r\n            ...fillCSSObject(getNextStyle(e)),\r\n            events: params,\r\n        },));\r\n    },\r\n    dragGroupEnd(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\r\n        const events = fillChildEvents(moveable, \"beforeRenderable\", e);\r\n        const moveables = moveable.moveables;\r\n        const params = events.map((childEvent, i) => {\r\n            const childMoveable = moveables[i];\r\n\r\n            return this.fillDragEndParams(childMoveable, childEvent);\r\n        });\r\n\r\n        triggerEvent(moveable, `onRenderGroupEnd`, fillParams<OnRenderGroupEnd>(moveable, e, {\r\n            isPinch: !!e.isPinch,\r\n            isDrag: e.isDrag,\r\n            targets: moveable.props.targets,\r\n            events: params,\r\n            transformObject: {},\r\n            transform: getNextTransformText(e),\r\n            ...fillCSSObject(getNextStyle(e)),\r\n        }));\r\n    },\r\n    dragControlStart(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\r\n        return this.dragStart(moveable, e);\r\n    },\r\n    dragControl(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\r\n        return this.drag(moveable, e);\r\n    },\r\n    dragControlAfter(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\r\n        return this.dragAfter(moveable, e);\r\n    },\r\n    dragControlEnd(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\r\n        return this.dragEnd(moveable, e);\r\n    },\r\n    dragGroupControlStart(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\r\n        return this.dragGroupStart(moveable, e);\r\n    },\r\n    dragGroupControl(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\r\n        return this.dragGroup(moveable, e);\r\n    },\r\n    dragGroupControlEnd(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\r\n        return this.dragGroupEnd(moveable, e);\r\n    },\r\n    fillDragParams(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\r\n        const transformObject: Record<string, any> = {};\r\n\r\n        parse(getNextTransforms(e) || []).forEach(matrixInfo => {\r\n            transformObject[matrixInfo.name] = matrixInfo.functionValue;\r\n        });\r\n\r\n        return fillParams<OnRender>(moveable, e, {\r\n            isPinch: !!e.isPinch,\r\n            transformObject,\r\n            transform: getNextTransformText(e),\r\n            ...fillCSSObject(getNextStyle(e)),\r\n        });\r\n    },\r\n    fillDragEndParams(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\r\n        const transformObject: Record<string, any> = {};\r\n\r\n        parse(getNextTransforms(e) || []).forEach(matrixInfo => {\r\n            transformObject[matrixInfo.name] = matrixInfo.functionValue;\r\n        });\r\n        return fillParams<OnRenderEnd>(moveable, e, {\r\n            isPinch: !!e.isPinch,\r\n            isDrag: e.isDrag,\r\n            transformObject,\r\n            transform: getNextTransformText(e),\r\n            ...fillCSSObject(getNextStyle(e)),\r\n        });\r\n    },\r\n} as const;\r\n","import { Able, MoveableManagerInterface, MoveableGroupInterface } from \"../types\";\r\nimport { getWindow, hasClass, IObject } from \"@daybrush/utils\";\r\nimport { convertDragDist, defaultSync, getRefTarget } from \"../utils\";\r\nimport Gesto, { GestoOptions } from \"gesto\";\r\nimport BeforeRenderable from \"../ables/BeforeRenderable\";\r\nimport Renderable from \"../ables/Renderable\";\r\n\r\nexport function triggerAble(\r\n    moveable: MoveableManagerInterface,\r\n    moveableAbles: Able[],\r\n    eventOperations: string[],\r\n    eventAffix: string,\r\n    eventType: any,\r\n    e: any,\r\n    requestInstant?: boolean,\r\n) {\r\n    // pre setting\r\n    e.clientDistX = e.distX;\r\n    e.clientDistY = e.distY;\r\n\r\n    const isStart = eventType === \"Start\";\r\n    const isEnd = eventType === \"End\";\r\n    const isAfter = eventType === \"After\";\r\n    const target = moveable.state.target;\r\n    const isRequest = e.isRequest;\r\n    const isControl = eventAffix.indexOf(\"Control\") > -1;\r\n\r\n    if (\r\n        !target\r\n        || (isStart && isControl && !isRequest && moveable.areaElement === e.inputEvent.target)\r\n    ) {\r\n        return false;\r\n    }\r\n    const ables: Able[] = [...moveableAbles];\r\n\r\n    if (isRequest) {\r\n        const requestAble = e.requestAble;\r\n\r\n        if (!ables.some(able => able.name === requestAble)) {\r\n            ables.push(...moveable.props.ables!.filter(able => able.name === requestAble));\r\n        }\r\n    }\r\n    if (!ables.length || ables.every(able => able.dragRelation)) {\r\n        return false;\r\n    }\r\n    // \"drag\" \"Control\" \"After\"\r\n\r\n    const inputEvent = e.inputEvent;\r\n    let inputTarget: Element;\r\n\r\n    if (isEnd && inputEvent) {\r\n        inputTarget = document.elementFromPoint(e.clientX, e.clientY) || inputEvent.target;\r\n    }\r\n    let isDragStop = false;\r\n    const stop = () => {\r\n        isDragStop = true;\r\n        e.stop?.();\r\n    };\r\n    const isFirstStart = isStart && (\r\n        !moveable.targetGesto || !moveable.controlGesto\r\n        || (!moveable.targetGesto.isFlag() || !moveable.controlGesto.isFlag())\r\n    );\r\n\r\n    if (isFirstStart) {\r\n        moveable.updateRect(eventType, true, false);\r\n    }\r\n\r\n\r\n    // trigger ables\r\n    const datas = e.datas;\r\n    const gestoType = isControl ? \"controlGesto\" : \"targetGesto\";\r\n    const prevGesto = moveable[gestoType];\r\n\r\n    const trigger = (able: any, eventName: string, conditionName?: string) => {\r\n        if (!(eventName in able) || prevGesto !== moveable[gestoType]) {\r\n            return false;\r\n        }\r\n        const ableName = able.name;\r\n        const nextDatas = datas[ableName] || (datas[ableName] = {});\r\n\r\n        if (isStart) {\r\n            nextDatas.isEventStart = !conditionName\r\n                || !able[conditionName] || able[conditionName](moveable, e);\r\n        }\r\n\r\n        if (!nextDatas.isEventStart) {\r\n            return false;\r\n        }\r\n        const result = able[eventName](moveable, {\r\n            ...e,\r\n            stop,\r\n            datas: nextDatas,\r\n            originalDatas: datas,\r\n            inputTarget,\r\n        });\r\n        (moveable as any)._emitter.off();\r\n\r\n        if (isStart && result === false) {\r\n            nextDatas.isEventStart = false;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    // unset ables for first drag start\r\n    if (isFirstStart) {\r\n        ables.forEach(able => {\r\n            able.unset && able.unset(moveable);\r\n        });\r\n    }\r\n    // BeforeRenderable\r\n    trigger(BeforeRenderable, `drag${eventAffix}${eventType}`);\r\n\r\n    let forceEndedCount = 0;\r\n    let updatedCount = 0;\r\n\r\n    eventOperations.forEach(eventOperation => {\r\n        if (isDragStop) {\r\n            return false;\r\n        }\r\n        const eventName = `${eventOperation}${eventAffix}${eventType}`;\r\n        const conditionName = `${eventOperation}${eventAffix}Condition`;\r\n\r\n        if (eventType === \"\" && !isRequest) {\r\n            // Convert distX, distY\r\n            convertDragDist(moveable.state, e);\r\n        }\r\n        // const isGroup = eventAffix.indexOf(\"Group\") > -1;\r\n        let eventAbles: Able[] = ables.filter((able: any) => able[eventName]);\r\n\r\n        eventAbles = eventAbles.filter((able, i) => {\r\n            return able.name && eventAbles.indexOf(able) === i;\r\n        });\r\n\r\n        const results = eventAbles.filter(able => trigger(able, eventName, conditionName));\r\n        const isUpdate = results.length;\r\n\r\n        // end ables\r\n        if (isDragStop) {\r\n            ++forceEndedCount;\r\n        }\r\n        if (isUpdate) {\r\n            ++updatedCount;\r\n        }\r\n\r\n        if (!isDragStop && isStart && eventAbles.length && !isUpdate) {\r\n            forceEndedCount += eventAbles.filter(able => {\r\n                const ableName = able.name;\r\n                const nextDatas = datas[ableName];\r\n\r\n                if (nextDatas.isEventStart) {\r\n                    if (able.dragRelation === \"strong\") {\r\n                        return false;\r\n                    }\r\n                    // stop drag\r\n                    return true;\r\n                }\r\n                // pre stop drag\r\n                return false;\r\n            }).length ? 1 : 0;\r\n        }\r\n    });\r\n\r\n\r\n    if (!isAfter || updatedCount) {\r\n        trigger(Renderable, `drag${eventAffix}${eventType}`);\r\n    }\r\n    // stop gesto condition\r\n    const isForceEnd = prevGesto !== moveable[gestoType] || forceEndedCount === eventOperations.length;\r\n\r\n    if (isEnd || isDragStop || isForceEnd) {\r\n        moveable.state.gestos = {};\r\n\r\n        if ((moveable as MoveableGroupInterface).moveables) {\r\n            (moveable as MoveableGroupInterface).moveables.forEach(childMoveable => {\r\n                childMoveable.state.gestos = {};\r\n            });\r\n        }\r\n        ables.forEach(able => {\r\n            able.unset && able.unset(moveable);\r\n        });\r\n    }\r\n    if (isStart && !isForceEnd && !isRequest && updatedCount && moveable.props.preventDefault) {\r\n        e?.preventDefault();\r\n    }\r\n    if (moveable.isUnmounted || isForceEnd) {\r\n        return false;\r\n    }\r\n    if ((!isStart && updatedCount && !requestInstant) || isEnd) {\r\n        const flushSync = moveable.props.flushSync || defaultSync;\r\n\r\n        flushSync(() => {\r\n            moveable.updateRect(isEnd ? eventType : \"\", true, false);\r\n            moveable.forceUpdate();\r\n        });\r\n\r\n    }\r\n    if (!isStart && !isEnd && !isAfter && updatedCount && !requestInstant) {\r\n        triggerAble(moveable, moveableAbles, eventOperations, eventAffix, eventType + \"After\", e);\r\n    }\r\n    return true;\r\n}\r\n\r\nexport function checkMoveableTarget(moveable: MoveableManagerInterface) {\r\n    return (e: { inputEvent: Event }) => {\r\n        const eventTarget = e.inputEvent.target as Element;\r\n        const areaElement = moveable.areaElement;\r\n        const dragTargetElement = (moveable as any)._dragTarget;\r\n\r\n        if (!dragTargetElement || moveable.controlGesto?.isFlag()) {\r\n            return false;\r\n        }\r\n\r\n        return eventTarget === dragTargetElement\r\n            || dragTargetElement.contains(eventTarget)\r\n            || eventTarget === areaElement\r\n            || (!moveable.isMoveableElement(eventTarget) && !moveable.controlBox.contains(eventTarget))\r\n            || hasClass(eventTarget, \"moveable-area\")\r\n            || hasClass(eventTarget, \"moveable-padding\")\r\n            || hasClass(eventTarget, \"moveable-edgeDraggable\");\r\n    };\r\n}\r\n\r\nexport function getTargetAbleGesto(\r\n    moveable: MoveableManagerInterface,\r\n    moveableTarget: HTMLElement | SVGElement,\r\n    eventAffix: string,\r\n) {\r\n    const controlBox = moveable.controlBox;\r\n    const targets: Array<HTMLElement | SVGElement> = [];\r\n    const props = moveable.props;\r\n    const dragArea =  props.dragArea;\r\n    const target = moveable.state.target;\r\n    const dragTarget = props.dragTarget;\r\n\r\n    targets.push(controlBox);\r\n\r\n    if (!dragArea || dragTarget) {\r\n        targets.push(moveableTarget);\r\n    }\r\n\r\n    if (!dragArea && dragTarget && target && moveableTarget !== target && props.dragTargetSelf) {\r\n        targets.push(target);\r\n    }\r\n\r\n    return getAbleGesto(moveable, targets, \"targetAbles\", eventAffix, {\r\n        dragStart: checkMoveableTarget(moveable),\r\n        pinchStart: checkMoveableTarget(moveable),\r\n    });\r\n}\r\nexport function getAbleGesto(\r\n    moveable: MoveableManagerInterface,\r\n    target: HTMLElement | SVGElement | Array<HTMLElement | SVGElement>,\r\n    ableType: string,\r\n    eventAffix: string,\r\n    conditionFunctions: IObject<any> = {},\r\n) {\r\n    const isTargetAbles = ableType === \"targetAbles\";\r\n    const {\r\n        pinchOutside,\r\n        pinchThreshold,\r\n        preventClickEventOnDrag,\r\n        preventClickDefault,\r\n        checkInput,\r\n        dragFocusedInput,\r\n        preventDefault = true,\r\n        dragContainer: dragContaienrOption,\r\n    } = moveable.props;\r\n    const dragContainer = getRefTarget(dragContaienrOption, true);\r\n\r\n    const options: GestoOptions = {\r\n        preventDefault,\r\n        preventRightClick: true,\r\n        preventWheelClick: true,\r\n        container: dragContainer || getWindow(moveable.getControlBoxElement()),\r\n        pinchThreshold,\r\n        pinchOutside,\r\n        preventClickEventOnDrag: isTargetAbles ? preventClickEventOnDrag : false,\r\n        preventClickEventOnDragStart: isTargetAbles ? preventClickDefault : false,\r\n        preventClickEventByCondition: isTargetAbles ? null : (e: MouseEvent) => {\r\n            return moveable.controlBox.contains(e.target as Element);\r\n        },\r\n        checkInput: isTargetAbles ? checkInput : false,\r\n        dragFocusedInput,\r\n    };\r\n    const gesto = new Gesto(target!, options);\r\n    const isControl = eventAffix === \"Control\";\r\n\r\n    [\"drag\", \"pinch\"].forEach(eventOperation => {\r\n        [\"Start\", \"\", \"End\"].forEach(eventType => {\r\n\r\n            gesto.on(`${eventOperation}${eventType}` as any, e => {\r\n                const eventName = e.eventType;\r\n                const isPinchScheduled = eventOperation === \"drag\" && e.isPinch;\r\n\r\n                if (conditionFunctions[eventName] && !conditionFunctions[eventName](e)) {\r\n                    e.stop();\r\n                    return;\r\n                }\r\n\r\n                if (isPinchScheduled) {\r\n                    return;\r\n                }\r\n                const eventOperations = eventOperation === \"drag\" ? [eventOperation] : [\"drag\", eventOperation];\r\n                const moveableAbles: Able[] = [...(moveable as any)[ableType]];\r\n                const result = triggerAble(moveable, moveableAbles, eventOperations, eventAffix, eventType, e);\r\n\r\n                if (!result) {\r\n                    e.stop();\r\n                } else if (moveable.props.stopPropagation || (eventType === \"Start\" && isControl)) {\r\n                    e?.inputEvent?.stopPropagation();\r\n                }\r\n            });\r\n        });\r\n    });\r\n\r\n    return gesto;\r\n}\r\n","import { Able, MoveableManagerInterface } from \"./types\";\r\n\r\nexport default class EventManager {\r\n    private ables: Able[] = [];\r\n    constructor(\r\n        private target: HTMLElement | SVGElement | null,\r\n        private moveable: MoveableManagerInterface | null,\r\n        private eventName: string,\r\n    ) {\r\n        target!.addEventListener(eventName.toLowerCase(), this._onEvent);\r\n    }\r\n    public setAbles(ables: Able[]) {\r\n        this.ables = ables;\r\n    }\r\n    public destroy() {\r\n        this.target!.removeEventListener(this.eventName.toLowerCase(), this._onEvent);\r\n        this.target = null;\r\n        this.moveable = null;\r\n    }\r\n    private _onEvent = (e: Event) => {\r\n        const eventName = this.eventName;\r\n        const moveable = this.moveable!;\r\n\r\n        if (moveable.state.disableNativeEvent) {\r\n            return;\r\n        }\r\n        this.ables.forEach(able => {\r\n            (able as any)[eventName](moveable, {\r\n                inputEvent: e,\r\n            });\r\n        });\r\n    }\r\n}\r\n","import { createIdentityMatrix, convertDimension, multiply, createOriginMatrix, ignoreDimension } from \"@scena/matrix\";\r\nimport { getCachedMatrixContainerInfo } from \"../store/Store\";\r\nimport { convert3DMatrixes, getOffsetInfo, getSVGOffset, makeMatrixCSS } from \"../utils\";\r\nimport { getMatrixStackInfo } from \"./getMatrixStackInfo\";\r\nimport { getDocumentBody } from \"@daybrush/utils\";\r\nimport { MatrixInfo } from \"../types\";\r\n\r\nexport interface MoveableElementMatrixInfo {\r\n    hasZoom: boolean;\r\n    hasFixed: boolean;\r\n    originalRootMatrix: number[];\r\n    rootMatrix: number[];\r\n    beforeMatrix: number[];\r\n    offsetMatrix: number[];\r\n    allMatrix: number[];\r\n    targetMatrix: number[];\r\n    transformOrigin: number[];\r\n    targetOrigin: number[];\r\n    is3d: boolean;\r\n    targetTransform: string;\r\n    inlineTransform: string;\r\n    offsetContainer: HTMLElement | null;\r\n    offsetRootContainer: HTMLElement | null;\r\n    matrixes: MatrixInfo[];\r\n}\r\n\r\nexport function calculateMatrixStack(\r\n    target: SVGElement | HTMLElement,\r\n    container?: SVGElement | HTMLElement | null,\r\n    rootContainer: SVGElement | HTMLElement | null | undefined = container,\r\n    isAbsolute3d?: boolean,\r\n    // prevMatrix?: number[],\r\n    // prevRootMatrix?: number[],\r\n    // prevN?: number,\r\n): MoveableElementMatrixInfo {\r\n    const {\r\n        matrixes,\r\n        is3d,\r\n        targetMatrix: prevTargetMatrix,\r\n        transformOrigin,\r\n        targetOrigin,\r\n        offsetContainer,\r\n        hasFixed,\r\n        zoom: containerZoom,\r\n    } = getMatrixStackInfo(target, container); // prevMatrix\r\n\r\n    const {\r\n        matrixes: rootMatrixes,\r\n        is3d: isRoot3d,\r\n        offsetContainer: offsetRootContainer,\r\n        zoom: rootZoom,\r\n    } = getCachedMatrixContainerInfo(offsetContainer, rootContainer); // prevRootMatrix\r\n\r\n    // if (rootContainer === document.body) {\r\n    //     console.log(offsetContainer, rootContainer, rootMatrixes);\r\n    // }\r\n    const isNext3d = isAbsolute3d || isRoot3d || is3d;\r\n    const n = isNext3d ? 4 : 3;\r\n    const isSVGGraphicElement = target.tagName.toLowerCase() !== \"svg\" && \"ownerSVGElement\" in target;\r\n    let targetMatrix = prevTargetMatrix;\r\n    // let allMatrix = prevMatrix ? convertDimension(prevMatrix, prevN!, n) : createIdentityMatrix(n);\r\n    // let rootMatrix = prevRootMatrix ? convertDimension(prevRootMatrix, prevN!, n) : createIdentityMatrix(n);\r\n    // let beforeMatrix = prevMatrix ? convertDimension(prevMatrix, prevN!, n) : createIdentityMatrix(n);\r\n    let allMatrix = createIdentityMatrix(n);\r\n    let rootMatrix = createIdentityMatrix(n);\r\n    let beforeMatrix = createIdentityMatrix(n);\r\n    let offsetMatrix = createIdentityMatrix(n);\r\n    const length = matrixes.length;\r\n    const nextRootMatrixes = rootMatrixes.map(info => {\r\n        return {\r\n            ...info,\r\n            matrix: info.matrix ? [...info.matrix] : undefined,\r\n        };\r\n    }).reverse();\r\n    matrixes.reverse();\r\n\r\n    if (!is3d && isNext3d) {\r\n        targetMatrix = convertDimension(targetMatrix, 3, 4);\r\n\r\n        convert3DMatrixes(matrixes);\r\n    }\r\n    if (!isRoot3d && isNext3d) {\r\n        convert3DMatrixes(nextRootMatrixes);\r\n    }\r\n\r\n\r\n    // rootMatrix = (...) -> container -> offset -> absolute -> offset -> absolute(targetMatrix)\r\n    // rootMatrixBeforeOffset = lastOffsetMatrix -> (...) -> container\r\n    // beforeMatrix = (... -> container -> offset -> absolute) -> offset -> absolute(targetMatrix)\r\n    // offsetMatrix = (... -> container -> offset -> absolute -> offset) -> absolute(targetMatrix)\r\n\r\n    nextRootMatrixes.forEach(info => {\r\n        rootMatrix = multiply(rootMatrix, info.matrix!, n);\r\n    });\r\n    const originalRootContainer = rootContainer || getDocumentBody(target);\r\n    const endContainer = nextRootMatrixes[0]?.target\r\n        || getOffsetInfo(originalRootContainer, originalRootContainer, true).offsetParent;\r\n    const rootMatrixBeforeOffset = nextRootMatrixes.slice(1).reduce((matrix, info) => {\r\n        return multiply(matrix, info.matrix!, n);\r\n    }, createIdentityMatrix(n));\r\n    matrixes.forEach((info, i) => {\r\n        if (length - 2 === i) {\r\n            // length - 3\r\n            beforeMatrix = allMatrix.slice();\r\n        }\r\n        if (length - 1 === i) {\r\n            // length - 2\r\n            offsetMatrix = allMatrix.slice();\r\n        }\r\n\r\n        // calculate for SVGElement\r\n        if (!info.matrix) {\r\n            const nextInfo = matrixes[i + 1];\r\n            const offset = getSVGOffset(\r\n                info,\r\n                nextInfo,\r\n                endContainer,\r\n                n,\r\n                multiply(rootMatrixBeforeOffset, allMatrix, n),\r\n            );\r\n            info.matrix = createOriginMatrix(offset, n);\r\n        }\r\n        allMatrix = multiply(allMatrix, info.matrix!, n);\r\n    });\r\n    const isMatrix3d = !isSVGGraphicElement && is3d;\r\n\r\n    if (!targetMatrix) {\r\n        targetMatrix = createIdentityMatrix(isMatrix3d ? 4 : 3);\r\n    }\r\n    const targetTransform = makeMatrixCSS(\r\n        isSVGGraphicElement && targetMatrix.length === 16\r\n            ? convertDimension(targetMatrix, 4, 3) : targetMatrix,\r\n        isMatrix3d,\r\n    );\r\n\r\n    const originalRootMatrix = rootMatrix;\r\n    rootMatrix = ignoreDimension(rootMatrix, n, n);\r\n\r\n    return {\r\n        hasZoom: containerZoom !== 1 || rootZoom !== 1,\r\n        hasFixed,\r\n        matrixes,\r\n        rootMatrix,\r\n        originalRootMatrix,\r\n        beforeMatrix,\r\n        offsetMatrix,\r\n        allMatrix,\r\n        targetMatrix,\r\n        targetTransform,\r\n        inlineTransform: target.style.transform,\r\n        transformOrigin,\r\n        targetOrigin,\r\n        is3d: isNext3d,\r\n        offsetContainer,\r\n        offsetRootContainer,\r\n    };\r\n}\r\n","import { createIdentityMatrix } from \"@scena/matrix\";\r\nimport { ElementSizes, MoveablePosition } from \"../types\";\r\nimport { getSize, getRotationRad } from \"../utils\";\r\nimport { calculateMatrixStack, MoveableElementMatrixInfo } from \"./calculateMatrixStack\";\r\nimport { calculateElementPosition } from \"./calculateElementPosition\";\r\n\r\nexport interface MoveableElementInfo extends MoveableElementMatrixInfo, MoveablePosition, ElementSizes {\r\n    width: number;\r\n    height: number;\r\n    rotation: number;\r\n}\r\n\r\nexport function calculateElementInfo(\r\n    target?: SVGElement | HTMLElement | null,\r\n    container?: SVGElement | HTMLElement | null,\r\n    rootContainer: HTMLElement | SVGElement | null | undefined = container,\r\n    isAbsolute3d?: boolean,\r\n): MoveableElementInfo {\r\n    let width = 0;\r\n    let height = 0;\r\n    let rotation = 0;\r\n    let allResult: {} = {};\r\n\r\n    const sizes = getSize(target);\r\n\r\n    if (target) {\r\n        width = sizes.offsetWidth;\r\n        height = sizes.offsetHeight;\r\n    }\r\n\r\n    if (target) {\r\n        const result = calculateMatrixStack(\r\n            target,\r\n            container,\r\n            rootContainer,\r\n            isAbsolute3d,\r\n            // prevMatrix, prevRootMatrix, prevN,\r\n        );\r\n\r\n        const position = calculateElementPosition(\r\n            result.allMatrix,\r\n            result.transformOrigin,\r\n            width, height,\r\n        );\r\n        allResult = {\r\n            ...result,\r\n            ...position,\r\n        };\r\n        const rotationPosition = calculateElementPosition(\r\n            result.allMatrix, [50, 50], 100, 100,\r\n        );\r\n        rotation = getRotationRad([rotationPosition.pos1, rotationPosition.pos2], rotationPosition.direction);\r\n    }\r\n    const n = isAbsolute3d ? 4 : 3;\r\n\r\n    return {\r\n        hasZoom: false,\r\n        width,\r\n        height,\r\n        rotation,\r\n        ...sizes,\r\n        originalRootMatrix: createIdentityMatrix(n),\r\n        rootMatrix: createIdentityMatrix(n),\r\n        beforeMatrix: createIdentityMatrix(n),\r\n        offsetMatrix: createIdentityMatrix(n),\r\n        allMatrix: createIdentityMatrix(n),\r\n        targetMatrix: createIdentityMatrix(n),\r\n        targetTransform: \"\",\r\n        inlineTransform: \"\",\r\n        transformOrigin: [0, 0],\r\n        targetOrigin: [0, 0],\r\n        is3d: !!isAbsolute3d,\r\n        left: 0,\r\n        top: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        origin: [0, 0],\r\n        pos1: [0, 0],\r\n        pos2: [0, 0],\r\n        pos3: [0, 0],\r\n        pos4: [0, 0],\r\n        direction: 1,\r\n        hasFixed: false,\r\n        offsetContainer: null,\r\n        offsetRootContainer: null,\r\n        matrixes: [],\r\n        ...allResult,\r\n    };\r\n}\r\n\r\n\r\nexport function getElementInfo(\r\n    target: SVGElement | HTMLElement,\r\n    container?: SVGElement | HTMLElement | null,\r\n    rootContainer: SVGElement | HTMLElement | null | undefined = container,\r\n) {\r\n    return calculateElementInfo(target, container, rootContainer, true);\r\n}\r\n","import { plus, getOrigin, multiply, minus } from \"@scena/matrix\";\r\nimport { getCachedClientRect, getCachedStyle } from \"../store/Store\";\r\nimport { MoveableClientRect, Writable } from \"../types\";\r\nimport {\r\n    calculateInversePosition,\r\n    getClientRect, getClientRectByPosition, getOffsetInfo, resetClientRect,\r\n    getTransformOriginArray,\r\n} from \"../utils\";\r\nimport { calculateElementInfo, MoveableElementInfo } from \"./getElementInfo\";\r\nimport { calculateElementPosition } from \"./calculateElementPosition\";\r\n\r\n\r\nexport interface MoveableTargetInfo extends MoveableElementInfo {\r\n    targetClientRect: MoveableClientRect;\r\n    containerClientRect: MoveableClientRect;\r\n    moveableClientRect: MoveableClientRect;\r\n    rootContainerClientRect: MoveableClientRect;\r\n    beforeDirection: 1 | -1;\r\n    beforeOrigin: number[];\r\n    offsetDelta: number[],\r\n    originalBeforeOrigin: number[];\r\n    target: HTMLElement | SVGElement | null | undefined;\r\n    style: Partial<Writable<CSSStyleDeclaration>>;\r\n}\r\n\r\nexport function getMoveableTargetInfo(\r\n    moveableElement?: HTMLElement | null,\r\n    target?: HTMLElement | SVGElement | null,\r\n    container?: HTMLElement | SVGElement | null,\r\n    parentContainer?: HTMLElement | SVGElement | null,\r\n    rootContainer?: HTMLElement | SVGElement | null,\r\n    requestStyles: Array<keyof CSSStyleDeclaration> = [],\r\n): MoveableTargetInfo {\r\n    let beforeDirection: 1 | -1 = 1;\r\n    let beforeOrigin = [0, 0];\r\n    let targetClientRect = resetClientRect();\r\n    let moveableClientRect = resetClientRect();\r\n    let containerClientRect = resetClientRect();\r\n    let rootContainerClientRect = resetClientRect();\r\n    let offsetDelta = [0, 0];\r\n    const style: Partial<Writable<CSSStyleDeclaration>> = {};\r\n\r\n    const result = calculateElementInfo(\r\n        target, container!, rootContainer!,\r\n        true,\r\n    );\r\n    if (target) {\r\n        const getStyle = getCachedStyle(target);\r\n\r\n        requestStyles.forEach(name => {\r\n            (style as any)[name] = getStyle(name as any);\r\n        });\r\n        const n = result.is3d ? 4 : 3;\r\n        const beforePosition = calculateElementPosition(\r\n            result.offsetMatrix,\r\n            plus(result.transformOrigin, getOrigin(result.targetMatrix, n)),\r\n            result.width, result.height,\r\n        );\r\n        beforeDirection = beforePosition.direction;\r\n        beforeOrigin = plus(\r\n            beforePosition.origin,\r\n            [beforePosition.left - result.left, beforePosition.top - result.top],\r\n        );\r\n\r\n        rootContainerClientRect = getClientRect(result.offsetRootContainer!);\r\n\r\n\r\n        const offsetContainer = getOffsetInfo(parentContainer, parentContainer, true).offsetParent\r\n            || result.offsetRootContainer!;\r\n\r\n        if (result.hasZoom) {\r\n            const absoluteTargetPosition = calculateElementPosition(\r\n                multiply(result.originalRootMatrix, result.allMatrix),\r\n                result.transformOrigin,\r\n                result.width, result.height,\r\n            );\r\n            const absoluteContainerPosition = calculateElementPosition(\r\n                result.originalRootMatrix,\r\n                getTransformOriginArray(getCachedStyle(offsetContainer)(\"transformOrigin\")).map(pos => parseFloat(pos)),\r\n                offsetContainer.offsetWidth, offsetContainer.offsetHeight,\r\n            );\r\n            targetClientRect = getClientRectByPosition(absoluteTargetPosition, rootContainerClientRect);\r\n            containerClientRect = getClientRectByPosition(\r\n                absoluteContainerPosition,\r\n                rootContainerClientRect,\r\n                offsetContainer,\r\n                true,\r\n            );\r\n\r\n            if (moveableElement) {\r\n                const left = absoluteTargetPosition.left;\r\n                const top = absoluteTargetPosition.top;\r\n                moveableClientRect = getClientRectByPosition({\r\n                    left,\r\n                    top,\r\n                    bottom: top,\r\n                    right: top,\r\n                }, rootContainerClientRect);\r\n            }\r\n        } else {\r\n            targetClientRect = getClientRect(target);\r\n            containerClientRect = getCachedClientRect(offsetContainer);\r\n\r\n            if (moveableElement) {\r\n                moveableClientRect = getClientRect(moveableElement);\r\n            }\r\n            const {\r\n                left: containerClientRectLeft,\r\n                top: containerClientRectTop,\r\n                clientLeft: containterClientLeft,\r\n                clientTop: containerClientTop,\r\n            } = containerClientRect;\r\n            const clientDelta = [\r\n                targetClientRect.left - containerClientRectLeft,\r\n                targetClientRect.top - containerClientRectTop,\r\n            ];\r\n\r\n            offsetDelta = minus(\r\n                calculateInversePosition(result.rootMatrix, clientDelta, 4),\r\n                [containterClientLeft! + result.left, containerClientTop! + result.top],\r\n            );\r\n        }\r\n    }\r\n\r\n    return {\r\n        targetClientRect,\r\n        containerClientRect,\r\n        moveableClientRect,\r\n        rootContainerClientRect,\r\n        beforeDirection,\r\n        beforeOrigin,\r\n        originalBeforeOrigin: beforeOrigin,\r\n        target,\r\n        style,\r\n        offsetDelta,\r\n        ...result,\r\n    };\r\n}\r\n","import { minus } from \"@scena/matrix\";\r\nimport { getMinMaxs } from \"overlap-area\";\r\nimport { MoveableManagerState, PersistRectData } from \"../types\";\r\n\r\n\r\nexport function getPersistState(rect: PersistRectData): Partial<MoveableManagerState> | null {\r\n    let {\r\n        pos1,\r\n        pos2,\r\n        pos3,\r\n        pos4,\r\n    } = rect;\r\n    if (!pos1 || !pos2 || !pos3 || !pos4) {\r\n        return null;\r\n    }\r\n    const minPos = getMinMaxs([pos1!, pos2!, pos3!, pos4!]);\r\n    const posDelta = [minPos.minX, minPos.minY];\r\n    const origin = minus(rect.origin!, posDelta);\r\n\r\n    pos1 = minus(pos1, posDelta);\r\n    pos2 = minus(pos2, posDelta);\r\n    pos3 = minus(pos3, posDelta);\r\n    pos4 = minus(pos4, posDelta);\r\n    return {\r\n        ...rect,\r\n        left: rect.left,\r\n        top: rect.top,\r\n        posDelta,\r\n        pos1,\r\n        pos2,\r\n        pos3,\r\n        pos4,\r\n        origin,\r\n        beforeOrigin: origin,\r\n        // originalBeforeOrigin: origin,\r\n        isPersisted: true,\r\n    };\r\n}\r\n","import * as React from \"react\";\r\nimport { createElement } from \"react\";\r\nimport { PREFIX } from \"./consts\";\r\nimport {\r\n    prefix,\r\n    unsetGesto,\r\n    getAbsolutePosesByState,\r\n    getRect,\r\n    filterAbles,\r\n    equals,\r\n    flat,\r\n    groupByMap,\r\n    calculatePadding,\r\n    getAbsoluteRotation,\r\n    defaultSync,\r\n    getRefTarget,\r\n    groupBy,\r\n    unsetAbles,\r\n    getPaddingBox,\r\n} from \"./utils\";\r\nimport Gesto from \"gesto\";\r\nimport { ref } from \"framework-utils\";\r\nimport {\r\n    MoveableManagerProps, MoveableManagerState, Able,\r\n    RectInfo, Requester, HitRect, MoveableManagerInterface,\r\n    MoveableDefaultOptions,\r\n    GroupableProps,\r\n    MoveableRefType,\r\n} from \"./types\";\r\nimport { triggerAble, getTargetAbleGesto, getAbleGesto, checkMoveableTarget } from \"./gesto/getAbleGesto\";\r\nimport { createOriginMatrix, multiplies, plus } from \"@scena/matrix\";\r\nimport {\r\n    addClass, cancelAnimationFrame, find,\r\n    getKeys, getWindow, IObject, isNode, removeClass, requestAnimationFrame,\r\n} from \"@daybrush/utils\";\r\nimport { renderLine } from \"./renderDirections\";\r\nimport { fitPoints, getAreaSize, getOverlapSize, isInside } from \"overlap-area\";\r\nimport EventManager from \"./EventManager\";\r\nimport { styled } from \"react-css-styled\";\r\nimport EventEmitter from \"@scena/event-emitter\";\r\nimport { getMoveableTargetInfo } from \"./utils/getMoveableTargetInfo\";\r\nimport { VIEW_DRAGGING } from \"./classNames\";\r\nimport { diff } from \"@egjs/list-differ\";\r\nimport { getPersistState } from \"./utils/persist\";\r\nimport { setStoreCache } from \"./store/Store\";\r\n\r\nexport default class MoveableManager<T = {}>\r\n    extends React.PureComponent<MoveableManagerProps<T>, MoveableManagerState> {\r\n    public static defaultProps: Required<MoveableManagerProps> = {\r\n        dragTargetSelf: false,\r\n        target: null,\r\n        dragTarget: null,\r\n        container: null,\r\n        rootContainer: null,\r\n        origin: true,\r\n        parentMoveable: null,\r\n        wrapperMoveable: null,\r\n        isWrapperMounted: false,\r\n        parentPosition: null,\r\n        warpSelf: false,\r\n        svgOrigin: \"\",\r\n        dragContainer: null,\r\n        useResizeObserver: false,\r\n        useMutationObserver: false,\r\n        preventDefault: true,\r\n        linePadding: 0,\r\n        controlPadding: 0,\r\n        ables: [],\r\n        pinchThreshold: 20,\r\n        dragArea: false,\r\n        passDragArea: false,\r\n        transformOrigin: \"\",\r\n        className: \"\",\r\n        zoom: 1,\r\n        triggerAblesSimultaneously: false,\r\n        padding: {},\r\n        pinchOutside: true,\r\n        checkInput: false,\r\n        dragFocusedInput: false,\r\n        groupable: false,\r\n        hideDefaultLines: false,\r\n        cspNonce: \"\",\r\n        translateZ: 0,\r\n        cssStyled: null,\r\n        customStyledMap: {},\r\n        props: {},\r\n        stopPropagation: false,\r\n        preventClickDefault: false,\r\n        preventClickEventOnDrag: true,\r\n        flushSync: defaultSync,\r\n        firstRenderState: null,\r\n        persistData: null,\r\n        viewContainer: null,\r\n        requestStyles: [],\r\n        useAccuratePosition: false,\r\n    };\r\n    public state: MoveableManagerState = {\r\n        container: null,\r\n        gestos: {},\r\n        renderLines: [\r\n            [[0, 0], [0, 0]],\r\n            [[0, 0], [0, 0]],\r\n            [[0, 0], [0, 0]],\r\n            [[0, 0], [0, 0]],\r\n        ],\r\n        renderPoses: [[0, 0], [0, 0], [0, 0], [0, 0]],\r\n        disableNativeEvent: false,\r\n        posDelta: [0, 0],\r\n        ...getMoveableTargetInfo(null),\r\n    };\r\n    public renderState: Record<string, any> = {};\r\n    public enabledAbles: Able[] = [];\r\n    public targetAbles: Able[] = [];\r\n    public controlAbles: Able[] = [];\r\n    public controlBox!: HTMLElement;\r\n    public areaElement!: HTMLElement;\r\n    public targetGesto!: Gesto;\r\n    public controlGesto!: Gesto;\r\n    public rotation = 0;\r\n    public scale: number[] = [1, 1];\r\n    public isMoveableMounted = false;\r\n    public isUnmounted = false;\r\n\r\n    public events: Record<string, EventManager | null> = {\r\n        \"mouseEnter\": null,\r\n        \"mouseLeave\": null,\r\n    };\r\n\r\n    protected _emitter: EventEmitter = new EventEmitter();\r\n\r\n    protected _prevOriginalDragTarget: MoveableRefType | null = null;\r\n    protected _originalDragTarget: MoveableRefType | null = null;\r\n\r\n    protected _prevDragTarget: HTMLElement | SVGElement | null | undefined = null;\r\n    protected _dragTarget: HTMLElement | SVGElement | null | undefined = null;\r\n\r\n    protected _prevPropTarget: HTMLElement | SVGElement | null | undefined = null;\r\n    protected _propTarget: HTMLElement | SVGElement | null | undefined = null;\r\n\r\n    protected _prevDragArea = false;\r\n    protected _isPropTargetChanged = false;\r\n    protected _hasFirstTarget = false;\r\n\r\n    private _reiszeObserver: ResizeObserver | null = null;\r\n    private _observerId = 0;\r\n    private _mutationObserver: MutationObserver | null = null;\r\n    public _rootContainer: HTMLElement | null | undefined = null;\r\n    private _viewContainer: HTMLElement | null | undefined = null;\r\n    private _viewClassNames: string[] = [];\r\n    private _store: Record<string, any> = {};\r\n\r\n    public render() {\r\n        const props = this.props;\r\n        const state = this.getState();\r\n        const {\r\n            parentPosition,\r\n            className,\r\n            target: propsTarget,\r\n            zoom, cspNonce,\r\n            translateZ,\r\n            cssStyled: ControlBoxElement,\r\n            groupable,\r\n            linePadding,\r\n            controlPadding,\r\n        } = props;\r\n\r\n        this._checkUpdateRootContainer();\r\n        this.checkUpdate();\r\n        this.updateRenderPoses();\r\n\r\n        const [parentLeft, parentTop] = parentPosition as number[] || [0, 0];\r\n        const {\r\n            left,\r\n            top,\r\n            target: stateTarget,\r\n            direction,\r\n            hasFixed,\r\n            offsetDelta,\r\n        } = state;\r\n        const groupTargets = (props as any).targets;\r\n        const isDragging = this.isDragging();\r\n        const ableAttributes: IObject<boolean> = {};\r\n        this.getEnabledAbles().forEach(able => {\r\n            ableAttributes[`data-able-${able.name.toLowerCase()}`] = true;\r\n        });\r\n        const ableClassName = this._getAbleClassName();\r\n        const isDisplay\r\n            = (groupTargets && groupTargets.length && (stateTarget || groupable))\r\n            || propsTarget\r\n            || (!this._hasFirstTarget && this.state.isPersisted);\r\n        const isVisible = this.controlBox || this.props.firstRenderState || this.props.persistData;\r\n        const translate = [left - parentLeft, top - parentTop];\r\n\r\n        if (!groupable && props.useAccuratePosition) {\r\n            translate[0] += offsetDelta[0];\r\n            translate[1] += offsetDelta[1];\r\n        }\r\n        const style: Record<string, any> = {\r\n            \"position\": hasFixed ? \"fixed\" : \"absolute\",\r\n            \"display\": isDisplay ? \"block\" : \"none\",\r\n            \"visibility\": isVisible ? \"visible\" : \"hidden\",\r\n            \"transform\": `translate3d(${translate[0]}px, ${translate[1]}px, ${translateZ})`,\r\n            \"--zoom\": zoom,\r\n            \"--zoompx\": `${zoom}px`,\r\n        };\r\n        if (linePadding) {\r\n            style[\"--moveable-line-padding\"] = linePadding;\r\n        }\r\n        if (controlPadding) {\r\n            style[\"--moveable-control-padding\"] = controlPadding;\r\n        }\r\n        return (\r\n            <ControlBoxElement\r\n                cspNonce={cspNonce}\r\n                ref={ref(this, \"controlBox\")}\r\n                className={`${prefix(\"control-box\", direction === -1 ? \"reverse\" : \"\", isDragging ? \"dragging\" : \"\")} ${ableClassName} ${className}`}\r\n                {...ableAttributes}\r\n                onClick={this._onPreventClick}\r\n                style={style}>\r\n                {this.renderAbles()}\r\n                {this._renderLines()}\r\n            </ControlBoxElement>\r\n        );\r\n    }\r\n    public componentDidMount() {\r\n        this.isMoveableMounted = true;\r\n        this.isUnmounted = false;\r\n        const props = this.props;\r\n        const { parentMoveable, container } = props;\r\n\r\n\r\n        this._checkUpdateRootContainer();\r\n        this._checkUpdateViewContainer();\r\n        this._updateTargets();\r\n        this._updateNativeEvents();\r\n        this._updateEvents();\r\n        this.updateCheckInput();\r\n        this._updateObserver(this.props);\r\n\r\n        if (!container && !parentMoveable && !this.state.isPersisted) {\r\n            this.updateRect(\"\", false, false);\r\n            this.forceUpdate();\r\n        }\r\n    }\r\n    public componentDidUpdate(prevProps: any) {\r\n        this._checkUpdateRootContainer();\r\n        this._checkUpdateViewContainer();\r\n        this._updateNativeEvents();\r\n        this._updateTargets();\r\n        this._updateEvents();\r\n        this.updateCheckInput();\r\n        this._updateObserver(prevProps);\r\n    }\r\n    public componentWillUnmount() {\r\n        this.isMoveableMounted = false;\r\n        this.isUnmounted = true;\r\n        this._emitter.off();\r\n        this._reiszeObserver?.disconnect();\r\n        this._mutationObserver?.disconnect();\r\n\r\n        const viewContainer = this._viewContainer;\r\n\r\n        if (viewContainer) {\r\n            this._changeAbleViewClassNames([]);\r\n        }\r\n        unsetGesto(this, false);\r\n        unsetGesto(this, true);\r\n\r\n        const events = this.events;\r\n        for (const name in events) {\r\n            const manager = events[name];\r\n            manager && manager.destroy();\r\n        }\r\n    }\r\n    public getTargets(): Array<HTMLElement | SVGElement> {\r\n        const target = this.props.target;\r\n        return target ? [target] : [];\r\n    }\r\n    /**\r\n     * Get the able used in MoveableManager.\r\n     * @method Moveable#getAble\r\n     * @param - able name\r\n     */\r\n    public getAble<T extends Able>(ableName: string): T | undefined {\r\n        const ables: Able[] = this.props.ables || [];\r\n\r\n        return find(ables, able => able.name === ableName) as T;\r\n    }\r\n    public getContainer(): HTMLElement | SVGElement {\r\n        const { parentMoveable, wrapperMoveable, container } = this.props;\r\n\r\n        return container!\r\n            || (wrapperMoveable && wrapperMoveable.getContainer())\r\n            || (parentMoveable && parentMoveable.getContainer())\r\n            || this.controlBox.parentElement!;\r\n    }\r\n    /**\r\n     * Returns the element of the control box.\r\n     * @method Moveable#getControlBoxElement\r\n     */\r\n    public getControlBoxElement(): HTMLElement {\r\n        return this.controlBox;\r\n    }\r\n    /**\r\n     * Target element to be dragged in moveable\r\n     * @method Moveable#getDragElement\r\n     */\r\n    public getDragElement(): HTMLElement | SVGElement | null | undefined {\r\n        return this._dragTarget;\r\n    }\r\n    /**\r\n     * Check if the target is an element included in the moveable.\r\n     * @method Moveable#isMoveableElement\r\n     * @param - the target\r\n     * @example\r\n     * import Moveable from \"moveable\";\r\n     *\r\n     * const moveable = new Moveable(document.body);\r\n     *\r\n     * window.addEventListener(\"click\", e => {\r\n     *     if (!moveable.isMoveableElement(e.target)) {\r\n     *         moveable.target = e.target;\r\n     *     }\r\n     * });\r\n     */\r\n    public isMoveableElement(target: Element) {\r\n        return target && (target.getAttribute?.(\"class\") || \"\").indexOf(PREFIX) > -1;\r\n    }\r\n    /**\r\n     * You can drag start the Moveable through the external `MouseEvent`or `TouchEvent`. (Angular: ngDragStart)\r\n     * @method Moveable#dragStart\r\n     * @param - external `MouseEvent`or `TouchEvent`\r\n     * @example\r\n     * import Moveable from \"moveable\";\r\n     *\r\n     * const moveable = new Moveable(document.body);\r\n     *\r\n     * document.body.addEventListener(\"mousedown\", e => {\r\n     *     if (!moveable.isMoveableElement(e.target)) {\r\n     *          moveable.dragStart(e);\r\n     *     }\r\n     * });\r\n     */\r\n    public dragStart(e: MouseEvent | TouchEvent) {\r\n        const targetGesto = this.targetGesto;\r\n        const controlGesto = this.controlGesto;\r\n\r\n        if (targetGesto && checkMoveableTarget(this)({ inputEvent: e })) {\r\n            if (!targetGesto.isFlag()) {\r\n                targetGesto.triggerDragStart(e);\r\n            }\r\n        } else if (controlGesto && this.isMoveableElement(e.target as Element)) {\r\n            if (!controlGesto.isFlag()) {\r\n                controlGesto.triggerDragStart(e);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Hit test an element or rect on a moveable target.\r\n     * (100% = 100)\r\n     * @method Moveable#hitTest\r\n     * @param - element or rect to test\r\n     * @return - Get hit test rate (rate > 0 is hitted)\r\n     * @example\r\n     * import Moveable from \"moveable\";\r\n     *\r\n     * const moveable = new Moveable(document.body);\r\n     *\r\n     * document.body.addEventListener(\"mousedown\", e => {\r\n     *     if (moveable.hitTest(e.target) > 0) {\r\n     *          console.log(\"hiited\");\r\n     *     }\r\n     * });\r\n     */\r\n    public hitTest(el: Element | HitRect): number {\r\n        const { target, pos1, pos2, pos3, pos4, targetClientRect } = this.state;\r\n\r\n        if (!target) {\r\n            return 0;\r\n        }\r\n        let rect: Required<HitRect>;\r\n\r\n        if (isNode(el)) {\r\n            const clientRect = el.getBoundingClientRect();\r\n\r\n            rect = {\r\n                left: clientRect.left,\r\n                top: clientRect.top,\r\n                width: clientRect.width,\r\n                height: clientRect.height,\r\n            };\r\n        } else {\r\n            rect = { width: 0, height: 0, ...el };\r\n        }\r\n\r\n        const {\r\n            left: rectLeft,\r\n            top: rectTop,\r\n            width: rectWidth,\r\n            height: rectHeight,\r\n        } = rect;\r\n        const points = fitPoints([pos1, pos2, pos4, pos3], targetClientRect);\r\n        const size = getOverlapSize(points, [\r\n            [rectLeft, rectTop],\r\n            [rectLeft + rectWidth, rectTop],\r\n            [rectLeft + rectWidth, rectTop + rectHeight],\r\n            [rectLeft, rectTop + rectHeight],\r\n        ]);\r\n        const totalSize = getAreaSize(points);\r\n\r\n        if (!size || !totalSize) {\r\n            return 0;\r\n        }\r\n\r\n        return Math.min(100, size / totalSize * 100);\r\n    }\r\n    /**\r\n     * Whether the coordinates are inside Moveable\r\n     * @method Moveable#isInside\r\n     * @param - x coordinate\r\n     * @param - y coordinate\r\n     * @return - True if the coordinate is in moveable or false\r\n     * @example\r\n     * import Moveable from \"moveable\";\r\n     *\r\n     * const moveable = new Moveable(document.body);\r\n     *\r\n     * document.body.addEventListener(\"mousedown\", e => {\r\n     *     if (moveable.isInside(e.clientX, e.clientY)) {\r\n     *          console.log(\"inside\");\r\n     *     }\r\n     * });\r\n     */\r\n    public isInside(clientX: number, clientY: number) {\r\n        const { target, pos1, pos2, pos3, pos4, targetClientRect } = this.state;\r\n\r\n        if (!target) {\r\n            return false;\r\n        }\r\n        return isInside([clientX, clientY], fitPoints([pos1, pos2, pos4, pos3], targetClientRect));\r\n    }\r\n    /**\r\n     * If the width, height, left, and top of all elements change, update the shape of the moveable.\r\n     * @method Moveable#updateRect\r\n     * @example\r\n     * import Moveable from \"moveable\";\r\n     *\r\n     * const moveable = new Moveable(document.body);\r\n     *\r\n     * window.addEventListener(\"resize\", e => {\r\n     *     moveable.updateRect();\r\n     * });\r\n     */\r\n    public updateRect(type?: \"Start\" | \"\" | \"End\", isTarget?: boolean, isSetState: boolean = true) {\r\n        const props = this.props;\r\n        const isSingle = !props.parentPosition && !props.wrapperMoveable;\r\n\r\n        if (isSingle) {\r\n            setStoreCache(true);\r\n        }\r\n        const parentMoveable = props.parentMoveable;\r\n        const state = this.state;\r\n        const target = (state.target || props.target) as HTMLElement | SVGElement;\r\n        const container = this.getContainer();\r\n        const rootContainer = parentMoveable\r\n            ? (parentMoveable as any)._rootContainer\r\n            : this._rootContainer;\r\n        const nextState = getMoveableTargetInfo(\r\n            this.controlBox,\r\n            target,\r\n            container,\r\n            container,\r\n            rootContainer || container,\r\n            this._getRequestStyles(),\r\n        );\r\n\r\n        if (!target && this._hasFirstTarget && props.persistData) {\r\n            const persistState = getPersistState(props.persistData);\r\n\r\n            for (const name in persistState) {\r\n                (nextState as any)[name] = (persistState as any)[name];\r\n            }\r\n        }\r\n\r\n        if (isSingle) {\r\n            setStoreCache();\r\n        }\r\n        this.updateState(\r\n            nextState,\r\n            parentMoveable ? false : isSetState,\r\n        );\r\n    }\r\n    /**\r\n     * Check if the moveable state is being dragged.\r\n     * @method Moveable#isDragging\r\n     * @param - If you want to check if able is dragging, specify ableName.\r\n     * @example\r\n     * import Moveable from \"moveable\";\r\n     *\r\n     * const moveable = new Moveable(document.body);\r\n     *\r\n     * // false\r\n     * console.log(moveable.isDragging());\r\n     *\r\n     * moveable.on(\"drag\", () => {\r\n     *   // true\r\n     *   console.log(moveable.isDragging());\r\n     * });\r\n     */\r\n    public isDragging(ableName?: string) {\r\n        const targetGesto = this.targetGesto;\r\n        const controlGesto = this.controlGesto;\r\n\r\n        if (targetGesto?.isFlag()) {\r\n            if (!ableName) {\r\n                return true;\r\n            }\r\n            const data = targetGesto.getEventData();\r\n\r\n            return !!data[ableName]?.isEventStart;\r\n        }\r\n        if (controlGesto?.isFlag()) {\r\n            if (!ableName) {\r\n                return true;\r\n            }\r\n            const data = controlGesto.getEventData();\r\n\r\n            return !!data[ableName]?.isEventStart;\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * If the width, height, left, and top of the only target change, update the shape of the moveable.\r\n     * Use `.updateRect()` method\r\n     * @method Moveable#updateTarget\r\n     * @deprecated\r\n     * @example\r\n     * import Moveable from \"moveable\";\r\n     *\r\n     * const moveable = new Moveable(document.body);\r\n     *\r\n     * moveable.updateTarget();\r\n     */\r\n    public updateTarget(type?: \"Start\" | \"\" | \"End\") {\r\n        this.updateRect(type, true);\r\n    }\r\n    /**\r\n     * You can get the vertex information, position and offset size information of the target based on the container.\r\n     * @method Moveable#getRect\r\n     * @return - The Rect Info\r\n     * @example\r\n     * import Moveable from \"moveable\";\r\n     *\r\n     * const moveable = new Moveable(document.body);\r\n     *\r\n     * const rectInfo = moveable.getRect();\r\n     */\r\n    public getRect(): RectInfo {\r\n        const state = this.state;\r\n        const poses = getAbsolutePosesByState(this.state);\r\n        const [pos1, pos2, pos3, pos4] = poses;\r\n        const rect = getRect(poses);\r\n        const {\r\n            width: offsetWidth,\r\n            height: offsetHeight,\r\n        } = state;\r\n        const {\r\n            width,\r\n            height,\r\n            left,\r\n            top,\r\n        } = rect;\r\n        const statePos = [state.left, state.top];\r\n        const origin = plus(statePos, state.origin);\r\n        const beforeOrigin = plus(statePos, state.beforeOrigin);\r\n        const transformOrigin = state.transformOrigin;\r\n\r\n        return {\r\n            width,\r\n            height,\r\n            left,\r\n            top,\r\n            pos1,\r\n            pos2,\r\n            pos3,\r\n            pos4,\r\n            offsetWidth,\r\n            offsetHeight,\r\n            beforeOrigin,\r\n            origin,\r\n            transformOrigin,\r\n            rotation: this.getRotation(),\r\n        };\r\n    }\r\n    /**\r\n     * Get a manager that manages the moveable's state and props.\r\n     * @method Moveable#getManager\r\n     * @return - The Rect Info\r\n     * @example\r\n     * import Moveable from \"moveable\";\r\n     *\r\n     * const moveable = new Moveable(document.body);\r\n     *\r\n     * const manager = moveable.getManager(); // real moveable class instance\r\n     */\r\n    public getManager(): MoveableManagerInterface<any, any> {\r\n        return this as any;\r\n    }\r\n    /**\r\n     * You can stop the dragging currently in progress through a method from outside.\r\n     * @method Moveable#stopDrag\r\n     * @return - The Rect Info\r\n     * @example\r\n     * import Moveable from \"moveable\";\r\n     *\r\n     * const moveable = new Moveable(document.body);\r\n     *\r\n     * moveable.stopDrag();\r\n     */\r\n    public stopDrag(type?: \"target\" | \"control\"): void {\r\n        if (!type || type === \"target\") {\r\n            const gesto = this.targetGesto;\r\n\r\n            if (gesto?.isIdle() === false) {\r\n                unsetAbles(this, false);\r\n            }\r\n            gesto?.stop();\r\n        }\r\n        if (!type || type === \"control\") {\r\n            const gesto = this.controlGesto;\r\n\r\n            if (gesto?.isIdle() === false) {\r\n                unsetAbles(this, true);\r\n            }\r\n            gesto?.stop();\r\n        }\r\n    }\r\n    public getRotation() {\r\n        const {\r\n            pos1,\r\n            pos2,\r\n            direction,\r\n        } = this.state;\r\n\r\n        return getAbsoluteRotation(pos1, pos2, direction);\r\n    }\r\n    /**\r\n     * Request able through a method rather than an event.\r\n     * At the moment of execution, requestStart is executed,\r\n     * and then request and requestEnd can be executed through Requester.\r\n     * @method Moveable#request\r\n     * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Draggable.html#request|Draggable Requester}\r\n     * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Resizable.html#request|Resizable Requester}\r\n     * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Scalable.html#request|Scalable Requester}\r\n     * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Rotatable.html#request|Rotatable Requester}\r\n     * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.OriginDraggable.html#request|OriginDraggable Requester}\r\n     * @param - ableName\r\n     * @param - request to be able params.\r\n     * @param - If isInstant is true, request and requestEnd are executed immediately.\r\n     * @return - Able Requester. If there is no request in able, nothing will work.\r\n     * @example\r\n     * import Moveable from \"moveable\";\r\n     *\r\n     * const moveable = new Moveable(document.body);\r\n     *\r\n     * // Instantly Request (requestStart - request - requestEnd)\r\n     * moveable.request(\"draggable\", { deltaX: 10, deltaY: 10 }, true);\r\n     *\r\n     * // Start move\r\n     * const requester = moveable.request(\"draggable\");\r\n     * requester.request({ deltaX: 10, deltaY: 10 });\r\n     * requester.request({ deltaX: 10, deltaY: 10 });\r\n     * requester.request({ deltaX: 10, deltaY: 10 });\r\n     * requester.requestEnd();\r\n     */\r\n    public request(\r\n        ableName: string,\r\n        param: IObject<any> = {},\r\n        isInstant?: boolean,\r\n    ): Requester {\r\n        const self = this;\r\n        const props = self.props;\r\n        const manager = props.parentMoveable || props.wrapperMoveable || self;\r\n        const allAbles = manager.props.ables!;\r\n        const groupable = props.groupable;\r\n        const requsetAble = find(allAbles, (able: Able) => able.name === ableName);\r\n\r\n        if (this.isDragging() || !requsetAble || !requsetAble.request) {\r\n            return {\r\n                request() {\r\n                    return this;\r\n                },\r\n                requestEnd() {\r\n                    return this;\r\n                },\r\n            };\r\n        }\r\n\r\n        const ableRequester = requsetAble.request(self);\r\n        const requestInstant = isInstant || param.isInstant;\r\n        const ableType = ableRequester.isControl ? \"controlAbles\" : \"targetAbles\";\r\n        const eventAffix = `${(groupable ? \"Group\" : \"\")}${ableRequester.isControl ? \"Control\" : \"\"}`;\r\n        const moveableAbles: Able[] = [...manager[ableType]];\r\n\r\n        const requester = {\r\n            request(ableParam: IObject<any>) {\r\n                triggerAble(self, moveableAbles, [\"drag\"], eventAffix, \"\", {\r\n                    ...ableRequester.request(ableParam),\r\n                    requestAble: ableName,\r\n                    isRequest: true,\r\n                }, requestInstant);\r\n                return requester;\r\n            },\r\n            requestEnd() {\r\n                triggerAble(self, moveableAbles, [\"drag\"], eventAffix, \"End\", {\r\n                    ...ableRequester.requestEnd(),\r\n                    requestAble: ableName,\r\n                    isRequest: true,\r\n                }, requestInstant);\r\n                return requester;\r\n            },\r\n        };\r\n\r\n        triggerAble(self, moveableAbles, [\"drag\"], eventAffix, \"Start\", {\r\n            ...ableRequester.requestStart(param),\r\n            requestAble: ableName,\r\n            isRequest: true,\r\n        }, requestInstant);\r\n\r\n        return requestInstant ? requester.request(param).requestEnd() : requester;\r\n    }\r\n    /**\r\n     * moveable is the top level that manages targets\r\n     * `Single`: MoveableManager instance\r\n     * `Group`: MoveableGroup instance\r\n     * `IndividualGroup`: MoveableIndividaulGroup instance\r\n     * Returns leaf target MoveableManagers.\r\n     */\r\n    public getMoveables(): MoveableManagerInterface[] {\r\n        return [this];\r\n    }\r\n    /**\r\n     * Remove the Moveable object and the events.\r\n     * @method Moveable#destroy\r\n     * @example\r\n     * import Moveable from \"moveable\";\r\n     *\r\n     * const moveable = new Moveable(document.body);\r\n     *\r\n     * moveable.destroy();\r\n     */\r\n    public destroy(): void {\r\n        this.componentWillUnmount();\r\n    }\r\n    public updateRenderPoses() {\r\n        const state = this.getState();\r\n        const props = this.props;\r\n        const padding = props.padding;\r\n        const {\r\n            originalBeforeOrigin,\r\n            transformOrigin,\r\n            allMatrix, is3d,\r\n            pos1, pos2, pos3, pos4,\r\n            left: stateLeft,\r\n            top: stateTop,\r\n            isPersisted,\r\n        } = state;\r\n        const zoom = props.zoom || 1;\r\n\r\n        if (!padding && zoom <= 1) {\r\n            state.renderPoses = [\r\n                pos1,\r\n                pos2,\r\n                pos3,\r\n                pos4,\r\n            ];\r\n            state.renderLines = [\r\n                [pos1, pos2],\r\n                [pos2, pos4],\r\n                [pos4, pos3],\r\n                [pos3, pos1],\r\n            ];\r\n            return;\r\n        }\r\n        const {\r\n            left,\r\n            top,\r\n            bottom,\r\n            right,\r\n        } = getPaddingBox(padding || {});\r\n        const n = is3d ? 4 : 3;\r\n\r\n        // const clipPathInfo = getClipPath(\r\n        //     props.target,\r\n        //     offsetWidth,\r\n        //     offsetHeight,\r\n        // );\r\n\r\n        // if (clipPathInfo) {\r\n        //     left -= Math.max(0, clipPathInfo.left);\r\n        //     top -= Math.max(0, clipPathInfo.top);\r\n        //     bottom -= Math.max(0, offsetHeight - clipPathInfo.bottom);\r\n        //     right -= Math.max(0, offsetWidth - clipPathInfo.right);\r\n        // }\r\n\r\n        let absoluteOrigin: number[] = [];\r\n\r\n        if (isPersisted) {\r\n            absoluteOrigin = transformOrigin;\r\n        } else if (this.controlBox && props.groupable) {\r\n            absoluteOrigin = originalBeforeOrigin;\r\n        } else {\r\n            absoluteOrigin = plus(originalBeforeOrigin, [stateLeft, stateTop]);\r\n        }\r\n\r\n        const nextMatrix = multiplies(\r\n            n,\r\n            createOriginMatrix(absoluteOrigin.map(v => -v), n),\r\n            allMatrix,\r\n            createOriginMatrix(transformOrigin, n),\r\n        );\r\n\r\n        const renderPos1 = calculatePadding(nextMatrix, pos1, [-left, -top], n);\r\n        const renderPos2 = calculatePadding(nextMatrix, pos2, [right, -top], n);\r\n        const renderPos3 = calculatePadding(nextMatrix, pos3, [-left, bottom], n);\r\n        const renderPos4 = calculatePadding(nextMatrix, pos4, [right, bottom], n);\r\n\r\n        state.renderPoses = [\r\n            renderPos1,\r\n            renderPos2,\r\n            renderPos3,\r\n            renderPos4,\r\n        ];\r\n        state.renderLines = [\r\n            [renderPos1, renderPos2],\r\n            [renderPos2, renderPos4],\r\n            [renderPos4, renderPos3],\r\n            [renderPos3, renderPos1],\r\n        ];\r\n\r\n        if (zoom) {\r\n            const zoomOffset = zoom / 2;\r\n\r\n            state.renderLines = [\r\n                [\r\n                    calculatePadding(nextMatrix, pos1, [-left - zoomOffset, -top], n),\r\n                    calculatePadding(nextMatrix, pos2, [right + zoomOffset, -top], n),\r\n                ],\r\n                [\r\n                    calculatePadding(nextMatrix, pos2, [right, -top - zoomOffset], n),\r\n                    calculatePadding(nextMatrix, pos4, [right, bottom + zoomOffset], n),\r\n                ],\r\n                [\r\n                    calculatePadding(nextMatrix, pos4, [right + zoomOffset, bottom], n),\r\n                    calculatePadding(nextMatrix, pos3, [-left - zoomOffset, bottom], n),\r\n                ],\r\n                [\r\n                    calculatePadding(nextMatrix, pos3, [-left, bottom + zoomOffset], n),\r\n                    calculatePadding(nextMatrix, pos1, [-left, -top - zoomOffset], n),\r\n                ],\r\n            ];\r\n        }\r\n    }\r\n    public checkUpdate() {\r\n        this._isPropTargetChanged = false;\r\n        const { target, container, parentMoveable } = this.props;\r\n        const {\r\n            target: stateTarget,\r\n            container: stateContainer,\r\n        } = this.state;\r\n\r\n        if (!stateTarget && !target) {\r\n            return;\r\n        }\r\n        this.updateAbles();\r\n\r\n        const isTargetChanged = !equals(stateTarget, target);\r\n        const isChanged = isTargetChanged || !equals(stateContainer, container);\r\n\r\n        if (!isChanged) {\r\n            return;\r\n        }\r\n        const moveableContainer = container || this.controlBox;\r\n\r\n        if (moveableContainer) {\r\n            this.unsetAbles();\r\n        }\r\n        this.updateState({ target, container });\r\n\r\n        if (!parentMoveable && moveableContainer) {\r\n            this.updateRect(\"End\", false, false);\r\n        }\r\n        this._isPropTargetChanged = isTargetChanged;\r\n    }\r\n    public waitToChangeTarget(): Promise<void> {\r\n        return new Promise(() => { });\r\n    }\r\n    public triggerEvent(\r\n        name: string,\r\n        e: any,\r\n    ): any {\r\n        const props = this.props;\r\n\r\n        this._emitter.trigger(name, e);\r\n\r\n        if (props.parentMoveable && e.isRequest && !e.isRequestChild) {\r\n            return props.parentMoveable.triggerEvent(name, e, true);\r\n        }\r\n\r\n        const callback = (props as any)[name];\r\n\r\n        return callback && callback(e);\r\n    }\r\n    public useCSS(tag: string, css: string) {\r\n        const customStyleMap = this.props.customStyledMap as Record<string, any>;\r\n\r\n        const key = tag + css;\r\n\r\n        if (!customStyleMap[key]) {\r\n            customStyleMap[key] = styled(tag, css);\r\n        }\r\n        return customStyleMap[key];\r\n    }\r\n    public checkUpdateRect = () => {\r\n        if (this.isDragging()) {\r\n            return;\r\n        }\r\n        const parentMoveable = this.props.parentMoveable;\r\n\r\n        if (parentMoveable) {\r\n            (parentMoveable as any).checkUpdateRect();\r\n            return;\r\n        }\r\n        cancelAnimationFrame(this._observerId);\r\n        this._observerId = requestAnimationFrame(() => {\r\n            if (this.isDragging()) {\r\n                return;\r\n            }\r\n            this.updateRect();\r\n        });\r\n    }\r\n    public getState(): MoveableManagerState {\r\n        const props = this.props;\r\n        if (props.target || (props as any).targets?.length) {\r\n            this._hasFirstTarget = true;\r\n        }\r\n        const hasControlBox = this.controlBox;\r\n        const persistData = props.persistData;\r\n        const firstRenderState = props.firstRenderState;\r\n\r\n        if (firstRenderState && !hasControlBox) {\r\n            return firstRenderState;\r\n        }\r\n        if (!this._hasFirstTarget && persistData) {\r\n            const persistState = getPersistState(persistData);\r\n\r\n            if (persistState) {\r\n                this.updateState(persistState, false);\r\n                return this.state;\r\n            }\r\n        }\r\n        (this.state as any).isPersisted = false;\r\n        return this.state;\r\n    }\r\n    public updateSelectors() { }\r\n    protected unsetAbles() {\r\n        this.targetAbles.forEach(able => {\r\n            if (able.unset) {\r\n                able.unset(this);\r\n            }\r\n        });\r\n    }\r\n    protected updateAbles(\r\n        ables: Able[] = this.props.ables!,\r\n        eventAffix: string = \"\",\r\n    ) {\r\n        const props = this.props as any;\r\n        const triggerAblesSimultaneously = props.triggerAblesSimultaneously;\r\n        const enabledAbles = this.getEnabledAbles(ables);\r\n\r\n        const dragStart = `drag${eventAffix}Start` as \"dragStart\";\r\n        const pinchStart = `pinch${eventAffix}Start` as \"pinchStart\";\r\n        const dragControlStart = `drag${eventAffix}ControlStart` as \"dragControlStart\";\r\n\r\n        const targetAbles = filterAbles(enabledAbles, [dragStart, pinchStart], triggerAblesSimultaneously);\r\n        const controlAbles = filterAbles(enabledAbles, [dragControlStart], triggerAblesSimultaneously);\r\n\r\n        this.enabledAbles = enabledAbles;\r\n        this.targetAbles = targetAbles;\r\n        this.controlAbles = controlAbles;\r\n    }\r\n    protected updateState(nextState: any, isSetState?: boolean) {\r\n        if (isSetState) {\r\n            if (this.isUnmounted) {\r\n                return;\r\n            }\r\n            this.setState(nextState);\r\n        } else {\r\n            const state = this.state;\r\n\r\n            for (const name in nextState) {\r\n                (state as any)[name] = nextState[name];\r\n            }\r\n        }\r\n    }\r\n    protected getEnabledAbles(ables: Able[] = this.props.ables!) {\r\n        const props = this.props as any;\r\n\r\n        return ables.filter(able => able && (\r\n            (able.always && props[able.name] !== false)\r\n            || props[able.name]));\r\n    }\r\n    protected renderAbles() {\r\n        const props = this.props as any;\r\n        const triggerAblesSimultaneously = props.triggerAblesSimultaneously;\r\n        const Renderer = {\r\n            createElement,\r\n        };\r\n\r\n        this.renderState = {};\r\n\r\n        return groupByMap(flat<any>(\r\n            filterAbles(this.getEnabledAbles(), [\"render\"], triggerAblesSimultaneously).map(({ render }) => {\r\n                return render!(this, Renderer) || [];\r\n            })).filter(el => el), ({ key }) => key).map(group => group[0]);\r\n    }\r\n    protected updateCheckInput() {\r\n        this.targetGesto && (this.targetGesto.options.checkInput = this.props.checkInput);\r\n    }\r\n    protected _getRequestStyles() {\r\n        const styleNames = this.getEnabledAbles().reduce((names, able) => {\r\n            const ableStyleNames = (able.requestStyle?.() ?? []) as Array<keyof CSSStyleDeclaration>;\r\n\r\n            return [...names, ...ableStyleNames];\r\n        }, [...(this.props.requestStyles || [])] as Array<keyof CSSStyleDeclaration>);\r\n\r\n\r\n        return styleNames;\r\n    }\r\n    protected _updateObserver(prevProps: MoveableDefaultOptions) {\r\n        this._updateResizeObserver(prevProps);\r\n        this._updateMutationObserver(prevProps);\r\n    }\r\n    protected _updateEvents() {\r\n        const controlBoxElement = this.controlBox;\r\n        const hasTargetAble = this.targetAbles.length;\r\n        const hasControlAble = this.controlAbles.length;\r\n        const target = this._dragTarget;\r\n        const isUnset = (!hasTargetAble && this.targetGesto)\r\n            || this._isTargetChanged(true);\r\n\r\n        if (isUnset) {\r\n            unsetGesto(this, false);\r\n            this.updateState({ gestos: {} });\r\n        }\r\n        if (!hasControlAble) {\r\n            unsetGesto(this, true);\r\n        }\r\n\r\n        if (target && hasTargetAble && !this.targetGesto) {\r\n            this.targetGesto = getTargetAbleGesto(this, target!, \"\");\r\n        }\r\n        if (!this.controlGesto && hasControlAble) {\r\n            this.controlGesto = getAbleGesto(this, controlBoxElement, \"controlAbles\", \"Control\");\r\n        }\r\n    }\r\n    protected _updateTargets() {\r\n        const props = this.props;\r\n\r\n        this._prevPropTarget = this._propTarget;\r\n        this._prevDragTarget = this._dragTarget;\r\n        this._prevOriginalDragTarget = this._originalDragTarget;\r\n        this._prevDragArea = props.dragArea!;\r\n\r\n        this._propTarget = props.target;\r\n        this._originalDragTarget = props.dragTarget || props.target;\r\n        this._dragTarget = getRefTarget(this._originalDragTarget, true);\r\n\r\n    }\r\n    private _renderLines() {\r\n        const props = this.props;\r\n        const {\r\n            zoom,\r\n            hideDefaultLines,\r\n            hideChildMoveableDefaultLines,\r\n            parentMoveable,\r\n        } = props as MoveableManagerProps<GroupableProps>;\r\n\r\n        if (hideDefaultLines || (parentMoveable && hideChildMoveableDefaultLines)) {\r\n            return [];\r\n        }\r\n        const state = this.getState();\r\n        const Renderer = {\r\n            createElement,\r\n        };\r\n\r\n        return state.renderLines.map((line, i) => {\r\n            return renderLine(Renderer, \"\", line[0], line[1], zoom!, `render-line-${i}`);\r\n        });\r\n    }\r\n    private _onPreventClick = (e: any) => {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        // removeEvent(window, \"click\", this._onPreventClick, true);\r\n    }\r\n    private _isTargetChanged(useDragArea?: boolean) {\r\n        const props = this.props;\r\n        const nextTarget = props.dragTarget || props.target;\r\n        const prevTarget = this._prevOriginalDragTarget;\r\n        const prevDragArea = this._prevDragArea;\r\n        const dragArea = props.dragArea;\r\n\r\n        // check target without dragArea\r\n        const isDragTargetChanged = !dragArea && prevTarget !== nextTarget;\r\n        const isDragAreaChanged = (useDragArea || dragArea) && prevDragArea !== dragArea;\r\n\r\n        return isDragTargetChanged || isDragAreaChanged || this._prevPropTarget != this._propTarget;\r\n    }\r\n    private _updateNativeEvents() {\r\n        const props = this.props;\r\n        const target = props.dragArea ? this.areaElement : this.state.target;\r\n        const events = this.events;\r\n        const eventKeys = getKeys(events);\r\n\r\n        if (this._isTargetChanged()) {\r\n            for (const eventName in events) {\r\n                const manager = events[eventName];\r\n                manager && manager.destroy();\r\n                events[eventName] = null;\r\n            }\r\n        }\r\n        if (!target) {\r\n            return;\r\n        }\r\n        const enabledAbles = this.enabledAbles;\r\n        eventKeys.forEach(eventName => {\r\n            const ables = filterAbles(enabledAbles, [eventName] as any);\r\n            const hasAbles = ables.length > 0;\r\n            let manager = events[eventName];\r\n\r\n            if (!hasAbles) {\r\n                if (manager) {\r\n                    manager.destroy();\r\n                    events[eventName] = null;\r\n                }\r\n                return;\r\n            }\r\n            if (!manager) {\r\n                manager = new EventManager(target, this, eventName);\r\n                events[eventName] = manager;\r\n            }\r\n            manager.setAbles(ables);\r\n        });\r\n    }\r\n    private _checkUpdateRootContainer() {\r\n        const rootContainer = this.props.rootContainer;\r\n\r\n        if (!this._rootContainer && rootContainer) {\r\n            this._rootContainer = getRefTarget(rootContainer, true);\r\n        }\r\n    }\r\n    private _checkUpdateViewContainer() {\r\n        const viewContainerOption = this.props.viewContainer;\r\n\r\n        if (!this._viewContainer && viewContainerOption) {\r\n            this._viewContainer = getRefTarget(viewContainerOption, true);\r\n        }\r\n        const viewContainer = this._viewContainer;\r\n\r\n        if (viewContainer) {\r\n            this._changeAbleViewClassNames([\r\n                ...this._getAbleViewClassNames(),\r\n                this.isDragging() ? VIEW_DRAGGING : \"\",\r\n            ]);\r\n        }\r\n    }\r\n    private _changeAbleViewClassNames(classNames: string[]) {\r\n        const viewContainer = this._viewContainer!;\r\n        const nextClassNames = groupBy(\r\n            classNames.filter(Boolean),\r\n            el => el,\r\n        ).map(([className]) => className);\r\n        const prevClassNames = this._viewClassNames;\r\n\r\n        const {\r\n            removed,\r\n            added,\r\n        } = diff(prevClassNames, nextClassNames);\r\n\r\n        removed.forEach(index => {\r\n            removeClass(viewContainer, prevClassNames[index]);\r\n        });\r\n        added.forEach(index => {\r\n            addClass(viewContainer, nextClassNames[index]);\r\n        });\r\n\r\n        this._viewClassNames = nextClassNames;\r\n\r\n    }\r\n    private _getAbleViewClassNames() {\r\n        return (this.getEnabledAbles().map(able => {\r\n            return (able.viewClassName?.(this) || \"\");\r\n        }).join(\" \") + ` ${this._getAbleClassName(\"-view\")}`).split(/\\s+/g);\r\n    }\r\n    private _getAbleClassName(classPrefix = \"\") {\r\n        const ables = this.getEnabledAbles();\r\n\r\n        const targetGesto = this.targetGesto;\r\n        const controlGesto = this.controlGesto;\r\n        const targetGestoData: Record<string, any> = targetGesto?.isFlag()\r\n            ? targetGesto.getEventData() : {};\r\n        const controlGestoData: Record<string, any> = controlGesto?.isFlag()\r\n            ? controlGesto.getEventData() : {};\r\n\r\n        return ables.map(able => {\r\n            const name = able.name;\r\n            let className = able.className?.(this) || \"\";\r\n\r\n            if (\r\n                targetGestoData[name]?.isEventStart\r\n                || controlGestoData[name]?.isEventStart\r\n            ) {\r\n                className += ` ${prefix(`${name}${classPrefix}-dragging`)}`;\r\n            }\r\n            return className.trim();\r\n        }).filter(Boolean).join(\" \");\r\n    }\r\n    private _updateResizeObserver(prevProps: MoveableDefaultOptions) {\r\n        const props = this.props;\r\n        const target = props.target;\r\n        const win = getWindow(this.getControlBoxElement());\r\n\r\n        if (!win.ResizeObserver || !target || !props.useResizeObserver) {\r\n            this._reiszeObserver?.disconnect();\r\n            return;\r\n        }\r\n\r\n        if (prevProps.target === target && this._reiszeObserver) {\r\n            return;\r\n        }\r\n\r\n        const observer = new win.ResizeObserver(this.checkUpdateRect);\r\n\r\n        observer.observe(target!, {\r\n            box: \"border-box\",\r\n        });\r\n        this._reiszeObserver = observer;\r\n    }\r\n    private _updateMutationObserver(prevProps: MoveableDefaultOptions) {\r\n        const props = this.props;\r\n        const target = props.target;\r\n        const win = getWindow(this.getControlBoxElement());\r\n\r\n        if (!win.MutationObserver || !target || !props.useMutationObserver) {\r\n            this._mutationObserver?.disconnect();\r\n            return;\r\n        }\r\n\r\n        if (prevProps.target === target && this._mutationObserver) {\r\n            return;\r\n        }\r\n\r\n        const observer = new win.MutationObserver(records => {\r\n            for (const mutation of records) {\r\n                if (mutation.type === \"attributes\" && mutation.attributeName === \"style\") {\r\n                    this.checkUpdateRect();\r\n                }\r\n            }\r\n        });\r\n\r\n        observer.observe(target!, {\r\n            attributes: true,\r\n        });\r\n        this._mutationObserver = observer;\r\n    }\r\n}\r\n\r\n/**\r\n * The target to indicate Moveable Control Box.\r\n * @name Moveable#target\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body);\r\n * moveable.target = document.querySelector(\".target\");\r\n */\r\n/**\r\n * Zooms in the elements of a moveable.\r\n * @name Moveable#zoom\r\n * @default 1\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body);\r\n * moveable.zoom = 2;\r\n */\r\n\r\n/**\r\n * Whether the target size is detected and updated whenever it changes.\r\n * @name Moveable#useResizeObserver\r\n * @default false\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body);\r\n * moveable.useResizeObserver = true;\r\n */\r\n\r\n/**\r\n * Resize, Scale Events at edges\r\n * @name Moveable#edge\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body);\r\n * moveable.edge = true;\r\n */\r\n\r\n/**\r\n * You can specify the className of the moveable controlbox.\r\n * @name Moveable#className\r\n * @default \"\"\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *   className: \"\",\r\n * });\r\n *\r\n * moveable.className = \"moveable1\";\r\n */\r\n\r\n/**\r\n * The target(s) to drag Moveable target(s)\r\n * @name Moveable#dragTarget\r\n * @default target\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body);\r\n * moveable.target = document.querySelector(\".target\");\r\n * moveable.dragTarget = document.querySelector(\".dragTarget\");\r\n */\r\n\r\n/**\r\n * `renderStart` event occurs at the first start of all events.\r\n * @memberof Moveable\r\n * @event renderStart\r\n * @param {Moveable.OnRenderStart} - Parameters for the `renderStart` event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     target: document.querySelector(\".target\"),\r\n * });\r\n * moveable.on(\"renderStart\", ({ target }) => {\r\n *     console.log(\"onRenderStart\", target);\r\n * });\r\n */\r\n\r\n/**\r\n * `render` event occurs before the target is drawn on the screen.\r\n * @memberof Moveable\r\n * @event render\r\n * @param {Moveable.OnRender} - Parameters for the `render` event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     target: document.querySelector(\".target\"),\r\n * });\r\n * moveable.on(\"render\", ({ target }) => {\r\n *     console.log(\"onRender\", target);\r\n * });\r\n */\r\n\r\n/**\r\n * `renderEnd` event occurs at the end of all events.\r\n * @memberof Moveable\r\n * @event renderEnd\r\n * @param {Moveable.OnRenderEnd} - Parameters for the `renderEnd` event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     target: document.querySelector(\".target\"),\r\n * });\r\n * moveable.on(\"renderEnd\", ({ target }) => {\r\n *     console.log(\"onRenderEnd\", target);\r\n * });\r\n */\r\n\r\n/**\r\n * `renderGroupStart` event occurs at the first start of all events in group.\r\n * @memberof Moveable\r\n * @event renderGroupStart\r\n * @param {Moveable.OnRenderGroupStart} - Parameters for the `renderGroupStart` event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\r\n * });\r\n * moveable.on(\"renderGroupStart\", ({ targets }) => {\r\n *     console.log(\"onRenderGroupStart\", targets);\r\n * });\r\n */\r\n\r\n/**\r\n * `renderGroup` event occurs before the target is drawn on the screen in group.\r\n * @memberof Moveable\r\n * @event renderGroup\r\n * @param {Moveable.OnRenderGroup} - Parameters for the `renderGroup` event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\r\n * });\r\n * moveable.on(\"renderGroup\", ({ targets }) => {\r\n *     console.log(\"onRenderGroup\", targets);\r\n * });\r\n */\r\n\r\n/**\r\n * `renderGroupEnd` event occurs at the end of all events in group.\r\n * @memberof Moveable\r\n * @event renderGroupEnd\r\n * @param {Moveable.OnRenderGroupEnd} - Parameters for the `renderGroupEnd` event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\r\n * });\r\n * moveable.on(\"renderGroupEnd\", ({ targets }) => {\r\n *     console.log(\"onRenderGroupEnd\", targets);\r\n * });\r\n */\r\n","import { minus } from \"@scena/matrix\";\r\nimport { refs } from \"framework-utils\";\r\nimport MoveableManager from \"../MoveableManager\";\r\nimport { renderLine } from \"../renderDirections\";\r\nimport { Renderer, MoveableGroupInterface, GroupableProps } from \"../types\";\r\nimport { flat, watchValue } from \"../utils\";\r\n\r\n\r\n\r\nexport default {\r\n    name: \"groupable\",\r\n    props: [\r\n        \"defaultGroupRotate\",\r\n        \"useDefaultGroupRotate\",\r\n        \"defaultGroupOrigin\",\r\n        \"groupable\",\r\n        \"groupableProps\",\r\n        \"targetGroups\",\r\n        \"hideChildMoveableDefaultLines\",\r\n    ] as const,\r\n    events: [] as const,\r\n    render(moveable: MoveableGroupInterface<GroupableProps>, React: Renderer): any[] {\r\n        const props = moveable.props;\r\n        let targets: Array<HTMLElement | SVGElement | undefined | null> = props.targets || [];\r\n\r\n        const { left, top, isPersisted } = moveable.getState();\r\n        const zoom = props.zoom || 1;\r\n        const renderGroupRects = moveable.renderGroupRects;\r\n        let persistDatChildren = props.persistData?.children || [];\r\n\r\n        if (isPersisted) {\r\n            targets = persistDatChildren.map(() => null);\r\n        } else {\r\n            persistDatChildren = [];\r\n        }\r\n        const parentPosition = watchValue(\r\n            moveable,\r\n            \"parentPosition\",\r\n            [left, top],\r\n            styles => styles.join(\",\"),\r\n        );\r\n        const requestStyles = watchValue(\r\n            moveable,\r\n            \"requestStyles\",\r\n            moveable.getRequestChildStyles(),\r\n            styles => styles.join(\",\"),\r\n        );\r\n\r\n        moveable.moveables = moveable.moveables.slice(0, targets.length);\r\n        return [\r\n            ...targets.map((target, i) => {\r\n                return <MoveableManager<GroupableProps>\r\n                    key={\"moveable\" + i}\r\n                    ref={refs(moveable, \"moveables\", i)}\r\n                    target={target}\r\n                    origin={false}\r\n                    requestStyles={requestStyles}\r\n                    cssStyled={props.cssStyled}\r\n                    customStyledMap={props.customStyledMap}\r\n                    useResizeObserver={props.useResizeObserver}\r\n                    useMutationObserver={props.useMutationObserver}\r\n                    hideChildMoveableDefaultLines={props.hideChildMoveableDefaultLines}\r\n                    parentMoveable={moveable}\r\n                    parentPosition={[left, top]}\r\n                    persistData={persistDatChildren[i]}\r\n                    zoom={zoom}\r\n                />;\r\n            }),\r\n            ...flat(renderGroupRects.map(({ pos1, pos2, pos3, pos4 }, i) => {\r\n                const poses = [pos1, pos2, pos3, pos4];\r\n\r\n                return [\r\n                    [0, 1],\r\n                    [1, 3],\r\n                    [3, 2],\r\n                    [2, 0],\r\n                ].map(([from, to], j) => {\r\n                    return renderLine(\r\n                        React,\r\n                        \"\",\r\n                        minus(poses[from], parentPosition),\r\n                        minus(poses[to], parentPosition),\r\n                        zoom,\r\n                        `group-rect-${i}-${j}`,\r\n                    );\r\n                });\r\n            })),\r\n        ];\r\n    },\r\n};\r\n","import {\r\n    MoveableManagerInterface, MoveableGroupInterface,\r\n    ClickableProps, OnClick, OnClickGroup,\r\n} from \"../types\";\r\nimport { triggerEvent, fillParams } from \"../utils\";\r\nimport { findIndex } from \"@daybrush/utils\";\r\nimport { makeAble } from \"./AbleManager\";\r\n\r\nexport default makeAble(\"clickable\", {\r\n    props: [\r\n        \"clickable\",\r\n    ] as const,\r\n    events: [\r\n        \"click\",\r\n        \"clickGroup\",\r\n    ] as const,\r\n    always: true,\r\n    dragRelation: \"weak\",\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    dragStart() {\r\n        return;\r\n    },\r\n    dragControlStart() {\r\n        return;\r\n    },\r\n    dragGroupStart(moveable: MoveableManagerInterface<ClickableProps>, e: any) {\r\n        e.datas.inputTarget = e.inputEvent && e.inputEvent.target;\r\n    },\r\n    dragEnd(moveable: MoveableManagerInterface<ClickableProps>, e: any) {\r\n        const target = moveable.props.target!;\r\n        const inputEvent = e.inputEvent;\r\n        const inputTarget = e.inputTarget;\r\n        const isMoveableElement = moveable.isMoveableElement(inputTarget);\r\n        const containsElement = !isMoveableElement && moveable.controlBox.contains(inputTarget);\r\n\r\n        if (\r\n            !inputEvent || !inputTarget || e.isDrag\r\n            || moveable.isMoveableElement(inputTarget)\r\n            || containsElement\r\n            // External event duplicate target or dragAreaElement\r\n        ) {\r\n            return;\r\n        }\r\n        const containsTarget = target.contains(inputTarget);\r\n\r\n        triggerEvent(moveable, \"onClick\", fillParams<OnClick>(moveable, e, {\r\n            isDouble: e.isDouble,\r\n            inputTarget,\r\n            isTarget: target === inputTarget,\r\n            moveableTarget: moveable.props.target!,\r\n            containsTarget,\r\n        }));\r\n    },\r\n    dragGroupEnd(moveable: MoveableGroupInterface<ClickableProps>, e: any) {\r\n        const inputEvent = e.inputEvent;\r\n        const inputTarget = e.inputTarget;\r\n\r\n        if (\r\n            !inputEvent || !inputTarget || e.isDrag\r\n            || moveable.isMoveableElement(inputTarget)\r\n            // External event duplicate target or dragAreaElement\r\n            || e.datas.inputTarget === inputTarget\r\n        ) {\r\n            return;\r\n        }\r\n        const targets = moveable.props.targets!;\r\n        let targetIndex = targets.indexOf(inputTarget);\r\n        const isTarget = targetIndex > -1;\r\n        let containsTarget = false;\r\n\r\n        if (targetIndex === -1) {\r\n            targetIndex = findIndex(targets, parentTarget => parentTarget.contains(inputTarget));\r\n            containsTarget = targetIndex > -1;\r\n        }\r\n\r\n        triggerEvent(moveable, \"onClickGroup\", fillParams<OnClickGroup>(moveable, e, {\r\n            isDouble: e.isDouble,\r\n            targets,\r\n            inputTarget,\r\n            targetIndex,\r\n            isTarget,\r\n            containsTarget,\r\n            moveableTarget: targets[targetIndex],\r\n        }));\r\n    },\r\n    dragControlEnd(moveable: MoveableManagerInterface<ClickableProps>, e: any) {\r\n        this.dragEnd(moveable, e);\r\n    },\r\n    dragGroupControlEnd(moveable: MoveableManagerInterface<ClickableProps>, e: any) {\r\n        this.dragEnd(moveable, e);\r\n    },\r\n});\r\n\r\n/**\r\n * When you click on the element, the `click` event is called.\r\n * @memberof Moveable\r\n * @event click\r\n * @param {Moveable.OnClick} - Parameters for the `click` event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     target: document.querySelector(\".target\"),\r\n * });\r\n * moveable.on(\"click\", ({ hasTarget, containsTarget, targetIndex }) => {\r\n *     // If you click on an element other than the target and not included in the target, index is -1.\r\n *     console.log(\"onClickGroup\", target, hasTarget, containsTarget, targetIndex);\r\n * });\r\n */\r\n\r\n/**\r\n * When you click on the element inside the group, the `clickGroup` event is called.\r\n * @memberof Moveable\r\n * @event clickGroup\r\n * @param {Moveable.OnClickGroup} - Parameters for the `clickGroup` event\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\r\n * });\r\n * moveable.on(\"clickGroup\", ({ inputTarget, isTarget, containsTarget, targetIndex }) => {\r\n *     // If you click on an element other than the target and not included in the target, index is -1.\r\n *     console.log(\"onClickGroup\", inputTarget, isTarget, containsTarget, targetIndex);\r\n * });\r\n */\r\n","import { hasClass } from \"@daybrush/utils\";\r\nimport { DraggableProps, MoveableGroupInterface, MoveableManagerInterface, Renderer } from \"../types\";\r\nimport { prefix } from \"../utils\";\r\nimport Draggable from \"./Draggable\";\r\nimport { makeAble } from \"./AbleManager\";\r\nimport { renderEdgeLines } from \"../renderDirections\";\r\n\r\nfunction getDraggableEvent(e: any) {\r\n    let datas = e.originalDatas.draggable;\r\n    if (!datas) {\r\n        e.originalDatas.draggable = {};\r\n        datas = e.originalDatas.draggable;\r\n    }\r\n    return { ...e, datas };\r\n}\r\nexport default makeAble(\"edgeDraggable\", {\r\n    css: [\r\n        `.edge.edgeDraggable.line {\r\ncursor: move;\r\n}`,\r\n    ],\r\n    render(moveable: MoveableManagerInterface<DraggableProps>, React: Renderer) {\r\n        const props = moveable.props;\r\n        const edge = props.edgeDraggable!;\r\n\r\n        if (!edge) {\r\n            return [];\r\n        }\r\n        return renderEdgeLines(\r\n            React,\r\n            \"edgeDraggable\",\r\n            edge,\r\n            moveable.getState().renderPoses,\r\n            props.zoom!,\r\n        );\r\n    },\r\n    dragCondition(moveable: MoveableManagerInterface<DraggableProps>, e: any) {\r\n        const props = moveable.props;\r\n        const target = e.inputEvent?.target;\r\n\r\n        if (!props.edgeDraggable || !target) {\r\n            return false;\r\n        }\r\n\r\n        return !props.draggable\r\n            && hasClass(target, prefix(\"direction\"))\r\n            && hasClass(target, prefix(\"edge\"))\r\n            && hasClass(target, prefix(\"edgeDraggable\"));\r\n    },\r\n    dragStart(moveable: MoveableManagerInterface<DraggableProps>, e: any) {\r\n        return Draggable.dragStart(moveable, getDraggableEvent(e));\r\n    },\r\n    drag(moveable: MoveableManagerInterface<DraggableProps>, e: any) {\r\n        return Draggable.drag(moveable, getDraggableEvent(e));\r\n    },\r\n    dragEnd(moveable: MoveableManagerInterface<DraggableProps, any>, e: any) {\r\n        return Draggable.dragEnd(moveable, getDraggableEvent(e));\r\n    },\r\n    dragGroupCondition(moveable: MoveableGroupInterface<DraggableProps>, e: any) {\r\n        const props = moveable.props;\r\n        const target = e.inputEvent?.target;\r\n\r\n        if (!props.edgeDraggable || !target) {\r\n            return false;\r\n        }\r\n        return !props.draggable && hasClass(target, prefix(\"direction\")) && hasClass(target, prefix(\"line\"));\r\n    },\r\n    dragGroupStart(moveable: MoveableGroupInterface<DraggableProps>, e: any) {\r\n        return Draggable.dragGroupStart(moveable, getDraggableEvent(e));\r\n    },\r\n    dragGroup(moveable: MoveableGroupInterface<DraggableProps>, e: any) {\r\n        return Draggable.dragGroup(moveable, getDraggableEvent(e));\r\n    },\r\n    dragGroupEnd(moveable: MoveableGroupInterface<DraggableProps, any>, e: any) {\r\n        return Draggable.dragGroupEnd(moveable, getDraggableEvent(e));\r\n    },\r\n    unset(moveable: any) {\r\n        return Draggable.unset(moveable);\r\n    },\r\n});\r\n\r\n/**\r\n * Whether to move by dragging the edge line (default: false)\r\n * @name Moveable.Draggable#edgeDraggable\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *  draggable: true,\r\n *  edgeDraggable: false,\r\n * });\r\n *\r\n * moveable.edgeDraggable = true;\r\n */\r\n","export default {\r\n    name: \"individualGroupable\",\r\n    props: [\r\n        \"individualGroupable\",\r\n        \"individualGroupableProps\",\r\n    ] as const,\r\n    events: [] as const,\r\n} as const;\r\n","import Pinchable from \"./Pinchable\";\r\nimport Rotatable from \"./Rotatable\";\r\nimport Draggable from \"./Draggable\";\r\nimport Resizable from \"./Resizable\";\r\nimport Scalable from \"./Scalable\";\r\nimport Warpable from \"./Warpable\";\r\nimport Snappable from \"./Snappable\";\r\nimport DragArea from \"./DragArea\";\r\nimport Origin from \"./Origin\";\r\nimport Scrollable from \"./Scrollable\";\r\nimport Default from \"./Default\";\r\nimport Padding from \"./Padding\";\r\nimport Clippable from \"./Clippable\";\r\nimport OriginDraggable from \"./OriginDraggable\";\r\nimport Roundable from \"./Roundable\";\r\nimport Groupable from \"./Groupable\";\r\nimport BeforeRenderable from \"./BeforeRenderable\";\r\nimport Renderable from \"./Renderable\";\r\nimport Clickable from \"./Clickable\";\r\nimport edgeDraggable from \"./edgeDraggable\";\r\nimport IndividualGroupable from \"./IndividualGroupable\";\r\nimport { camelize, pushSet } from \"@daybrush/utils\";\r\nimport { Able } from \"../types\";\r\n\r\nexport const MOVEABLE_ABLES = /*#__PURE__*/[\r\n    BeforeRenderable,\r\n    Default, Snappable, Pinchable,\r\n    Draggable, edgeDraggable,\r\n    Resizable, Scalable, Warpable, Rotatable,\r\n    Scrollable, Padding, Origin,\r\n    OriginDraggable,\r\n    Clippable, Roundable, Groupable, IndividualGroupable,\r\n    Clickable,\r\n    DragArea,\r\n    Renderable,\r\n] as const;\r\n\r\n\r\nexport const MOVEABLE_EVENTS = /*#__PURE__*/(MOVEABLE_ABLES as readonly Able[]).reduce((current, able) => {\r\n    (able.events || []).forEach(name => {\r\n        pushSet(current, name);\r\n    });\r\n    return current;\r\n}, [] as any[]) as Array<typeof MOVEABLE_ABLES[number][\"events\"][number]>;\r\n\r\nexport const MOVEABLE_PROPS = /*#__PURE__*/(MOVEABLE_ABLES as readonly Able[]).reduce((current, able) => {\r\n    (able.props || []).forEach(name => {\r\n        pushSet(current, name);\r\n    });\r\n    return current;\r\n}, [] as any[]) as Array<typeof MOVEABLE_ABLES[number][\"props\"][number]>;\r\n\r\n\r\nexport const MOVEABLE_REACT_EVENTS = /*#__PURE__*/MOVEABLE_EVENTS.map(name => {\r\n    return camelize(`on ${name}`);\r\n}) as Array<`on${Capitalize<typeof MOVEABLE_ABLES[number][\"events\"][number]>}`>;\r\n\r\n","export function solveConstantsDistance(\r\n    [a, b, c]: [number, number, number],\r\n    pos: number[],\r\n) {\r\n    return (a * pos[0] + b * pos[1] + c) / Math.sqrt(a * a + b * b);\r\n}\r\n\r\nexport function solveC(\r\n    [a, b]: [number, number],\r\n    pos: number[],\r\n) {\r\n    // ax + by + c = 0\r\n    // -ax -by;\r\n    return -a * pos[0] - b * pos[1];\r\n}\r\n","import MoveableManager from \"./MoveableManager\";\r\nimport { GroupableProps, GroupRect, MoveableManagerInterface, MoveableTargetGroupsType, RectInfo } from \"./types\";\r\nimport ChildrenDiffer from \"@egjs/children-differ\";\r\nimport { getAbleGesto, getTargetAbleGesto } from \"./gesto/getAbleGesto\";\r\nimport Groupable from \"./ables/Groupable\";\r\nimport { MIN_NUM, MAX_NUM, TINY_NUM } from \"./consts\";\r\nimport {\r\n    getAbsolutePosesByState, equals, unsetGesto, rotatePosesInfo,\r\n    convertTransformOriginArray,\r\n    isDeepArrayEquals,\r\n    sign,\r\n    getRefTarget,\r\n} from \"./utils\";\r\nimport { minus, plus } from \"@scena/matrix\";\r\nimport { getIntersectionPointsByConstants, getMinMaxs } from \"overlap-area\";\r\nimport { find, isArray, throttle } from \"@daybrush/utils\";\r\nimport { getMoveableTargetInfo } from \"./utils/getMoveableTargetInfo\";\r\nimport { solveC, solveConstantsDistance } from \"./Snappable/utils\";\r\nimport { setStoreCache } from \"./store/Store\";\r\n\r\nfunction getMaxPos(poses: number[][][], index: number) {\r\n    return Math.max(...poses.map(([pos1, pos2, pos3, pos4]) => {\r\n        return Math.max(pos1[index], pos2[index], pos3[index], pos4[index]);\r\n    }));\r\n}\r\nfunction getMinPos(poses: number[][][], index: number) {\r\n    return Math.min(...poses.map(([pos1, pos2, pos3, pos4]) => {\r\n        return Math.min(pos1[index], pos2[index], pos3[index], pos4[index]);\r\n    }));\r\n}\r\n\r\n\r\nfunction getGroupRect(parentPoses: number[][][], rotation: number): GroupRect {\r\n    let pos1 = [0, 0];\r\n    let pos2 = [0, 0];\r\n    let pos3 = [0, 0];\r\n    let pos4 = [0, 0];\r\n    let width = 0;\r\n    let height = 0;\r\n\r\n    if (!parentPoses.length) {\r\n        return {\r\n            pos1,\r\n            pos2,\r\n            pos3,\r\n            pos4,\r\n            minX: 0,\r\n            minY: 0,\r\n            maxX: 0,\r\n            maxY: 0,\r\n            width,\r\n            height,\r\n            rotation,\r\n        };\r\n    }\r\n    const fixedRotation = throttle(rotation, TINY_NUM);\r\n\r\n    if (fixedRotation % 90) {\r\n        const rad = fixedRotation / 180 * Math.PI;\r\n        const a1 = Math.tan(rad);\r\n        const a2 = -1 / a1;\r\n        // ax = y  // -ax + y = 0 // 0 => 1\r\n        // -ax = y // ax + y = 0  // 0 => 3\r\n        const a1MinMax = [MAX_NUM, MIN_NUM];\r\n        const a1MinMaxPos = [[0, 0], [0, 0]];\r\n        const a2MinMax = [MAX_NUM, MIN_NUM];\r\n        const a2MinMaxPos = [[0, 0], [0, 0]];\r\n\r\n        parentPoses.forEach(poses => {\r\n            poses.forEach(pos => {\r\n\r\n                // const b1 = pos[1] - a1 * pos[0];\r\n                // const b2 = pos[1] - a2 * pos[0];\r\n\r\n                const a1Dist = solveConstantsDistance([-a1, 1, 0], pos);\r\n                const a2Dist = solveConstantsDistance([-a2, 1, 0], pos);\r\n\r\n                if (a1MinMax[0] > a1Dist) {\r\n                    a1MinMaxPos[0] = pos;\r\n                    a1MinMax[0] = a1Dist;\r\n                }\r\n                if (a1MinMax[1] < a1Dist) {\r\n                    a1MinMaxPos[1] = pos;\r\n                    a1MinMax[1] = a1Dist;\r\n                }\r\n                if (a2MinMax[0] > a2Dist) {\r\n                    a2MinMaxPos[0] = pos;\r\n                    a2MinMax[0] = a2Dist;\r\n                }\r\n                if (a2MinMax[1] < a2Dist) {\r\n                    a2MinMaxPos[1] = pos;\r\n                    a2MinMax[1] = a2Dist;\r\n                }\r\n            });\r\n        });\r\n\r\n        const [a1MinPos, a1MaxPos] = a1MinMaxPos;\r\n        const [a2MinPos, a2MaxPos] = a2MinMaxPos;\r\n\r\n        const minHorizontalLine = [-a1, 1, solveC([-a1, 1], a1MinPos)];\r\n        const maxHorizontalLine = [-a1, 1, solveC([-a1, 1], a1MaxPos)];\r\n\r\n        const minVerticalLine = [-a2, 1, solveC([-a2, 1], a2MinPos)];\r\n        const maxVerticalLine = [-a2, 1, solveC([-a2, 1], a2MaxPos)];\r\n\r\n        [pos1, pos2, pos3, pos4] = [\r\n            [minHorizontalLine, minVerticalLine],\r\n            [minHorizontalLine, maxVerticalLine],\r\n            [maxHorizontalLine, minVerticalLine],\r\n            [maxHorizontalLine, maxVerticalLine],\r\n        ].map(([line1, line2]) => getIntersectionPointsByConstants(line1, line2)[0]);\r\n\r\n        width = a2MinMax[1] - a2MinMax[0];\r\n        height = a1MinMax[1] - a1MinMax[0];\r\n    } else {\r\n        const minX = getMinPos(parentPoses, 0);\r\n        const minY = getMinPos(parentPoses, 1);\r\n        const maxX = getMaxPos(parentPoses, 0);\r\n        const maxY = getMaxPos(parentPoses, 1);\r\n\r\n        pos1 = [minX, minY];\r\n        pos2 = [maxX, minY];\r\n        pos3 = [minX, maxY];\r\n        pos4 = [maxX, maxY];\r\n        width = maxX - minX;\r\n        height = maxY - minY;\r\n        if (fixedRotation % 180) {\r\n            // 0\r\n            // 1 2\r\n            // 3 4\r\n            // 90\r\n            // 3 1\r\n            // 4 2\r\n            // 180\r\n            // 4 3\r\n            // 2 1\r\n            // 270\r\n            // 2 4\r\n            // 1 3\r\n            // 1, 2, 3,4 = 3 1 4 2\r\n            const changedX = [pos3, pos1, pos4, pos2];\r\n\r\n            [pos1, pos2, pos3, pos4] = changedX;\r\n            width = maxY - minY;\r\n            height = maxX - minX;\r\n        }\r\n\r\n    }\r\n    if (fixedRotation % 360 > 180) {\r\n        // 1 2   4 3\r\n        // 3 4   2 1\r\n        const changedX = [pos4, pos3, pos2, pos1];\r\n\r\n        [pos1, pos2, pos3, pos4] = changedX;\r\n    }\r\n    const { minX, minY, maxX, maxY } = getMinMaxs([pos1, pos2, pos3, pos4]);\r\n\r\n    return {\r\n        pos1,\r\n        pos2,\r\n        pos3,\r\n        pos4,\r\n        width,\r\n        height,\r\n        minX,\r\n        minY,\r\n        maxX,\r\n        maxY,\r\n        rotation,\r\n    };\r\n}\r\ntype SelfGroup = Array<MoveableManager | null | SelfGroup>;\r\ntype CheckedMoveableManager = { finded: boolean; manager: MoveableManager };\r\n\r\nfunction findMoveableGroups(\r\n    moveables: CheckedMoveableManager[],\r\n    childTargetGroups: MoveableTargetGroupsType,\r\n): SelfGroup {\r\n    const groups = childTargetGroups.map(targetGroup => {\r\n        if (isArray(targetGroup)) {\r\n            const childMoveableGroups = findMoveableGroups(moveables, targetGroup);\r\n            const length = childMoveableGroups.length;\r\n\r\n            if (length > 1) {\r\n                return childMoveableGroups;\r\n            } else if (length === 1) {\r\n                return childMoveableGroups[0];\r\n            } else {\r\n                return null;\r\n            }\r\n        } else {\r\n            const checked = find(moveables, ({ manager }) => manager.props.target === targetGroup)!;\r\n\r\n            if (checked) {\r\n                checked.finded = true;\r\n                return checked.manager;\r\n            }\r\n            return null;\r\n        }\r\n    }).filter(Boolean);\r\n\r\n    if (groups.length === 1 && isArray(groups[0])) {\r\n        return groups[0];\r\n    }\r\n    return groups;\r\n}\r\n\r\n/**\r\n * @namespace Moveable.Group\r\n * @description You can make targets moveable.\r\n */\r\nclass MoveableGroup extends MoveableManager<GroupableProps> {\r\n    public static defaultProps = {\r\n        ...MoveableManager.defaultProps,\r\n        transformOrigin: [\"50%\", \"50%\"],\r\n        groupable: true,\r\n        dragArea: true,\r\n        keepRatio: true,\r\n        targets: [],\r\n        defaultGroupRotate: 0,\r\n        defaultGroupOrigin: \"50% 50%\",\r\n    };\r\n    public differ: ChildrenDiffer<HTMLElement | SVGElement> = new ChildrenDiffer();\r\n    public moveables: MoveableManager[] = [];\r\n    public transformOrigin = \"50% 50%\";\r\n    public renderGroupRects: GroupRect[] = [];\r\n    private _targetGroups: MoveableTargetGroupsType = [];\r\n    private _hasFirstTargets = false;\r\n\r\n    public componentDidMount() {\r\n        super.componentDidMount();\r\n    }\r\n    public checkUpdate() {\r\n        this._isPropTargetChanged = false;\r\n        this.updateAbles();\r\n    }\r\n    public getTargets() {\r\n        return this.props.targets!;\r\n    }\r\n    public updateRect(type?: \"Start\" | \"\" | \"End\", isTarget?: boolean, isSetState = true) {\r\n        const state = this.state;\r\n\r\n        if (!this.controlBox || state.isPersisted) {\r\n            return;\r\n        }\r\n        setStoreCache(true);\r\n        this.moveables.forEach(moveable => {\r\n            moveable.updateRect(type, false, false);\r\n        });\r\n\r\n        const props = this.props;\r\n        const moveables = this.moveables;\r\n        const target = state.target! || props.target!;\r\n        const checkeds = moveables.map(moveable => ({ finded: false, manager: moveable }));\r\n        const targetGroups = this.props.targetGroups || [];\r\n        const moveableGroups = findMoveableGroups(\r\n            checkeds,\r\n            targetGroups,\r\n        );\r\n        const useDefaultGroupRotate = props.useDefaultGroupRotate;\r\n\r\n        moveableGroups.push(...checkeds.filter(({ finded }) => !finded).map(({ manager }) => manager));\r\n\r\n        const renderGroupRects: GroupRect[] = [];\r\n        const isReset = !isTarget || (type !== \"\" && props.updateGroup);\r\n        let defaultGroupRotate = props.defaultGroupRotate || 0;\r\n\r\n        if (!this._hasFirstTargets) {\r\n            const persistedRoatation = props.persistData?.rotation;\r\n\r\n            if (persistedRoatation != null) {\r\n                defaultGroupRotate = persistedRoatation;\r\n            }\r\n        }\r\n\r\n        function getMoveableGroupRect(group: SelfGroup, parentRotation: number, isRoot?: boolean): GroupRect {\r\n            const posesRotations = group.map(moveable => {\r\n                if (isArray(moveable)) {\r\n                    const rect = getMoveableGroupRect(moveable, parentRotation);\r\n                    const poses = [rect.pos1, rect.pos2, rect.pos3, rect.pos4];\r\n\r\n                    renderGroupRects.push(rect);\r\n                    return { poses, rotation: rect.rotation };\r\n                } else {\r\n                    return {\r\n                        poses: getAbsolutePosesByState(moveable!.state),\r\n                        rotation: moveable!.getRotation(),\r\n                    };\r\n                }\r\n            });\r\n            const rotations = posesRotations.map(({ rotation }) => rotation);\r\n\r\n            let groupRotation = 0;\r\n            const firstRotation = rotations[0];\r\n            const isSameRotation = rotations.every(nextRotation => {\r\n                return Math.abs(firstRotation - nextRotation) < 0.1;\r\n            });\r\n\r\n            if (isReset) {\r\n                groupRotation = !useDefaultGroupRotate && isSameRotation ? firstRotation : defaultGroupRotate;\r\n            } else {\r\n                groupRotation = !useDefaultGroupRotate && !isRoot && isSameRotation ? firstRotation : parentRotation;\r\n            }\r\n            const groupPoses = posesRotations.map(({ poses }) => poses);\r\n            const groupRect = getGroupRect(\r\n                groupPoses,\r\n                groupRotation,\r\n            );\r\n\r\n            return groupRect;\r\n        }\r\n        const rootGroupRect = getMoveableGroupRect(moveableGroups, this.rotation, true);\r\n\r\n        if (isReset) {\r\n            // reset rotataion\r\n            this.rotation = rootGroupRect.rotation;\r\n            this.transformOrigin = props.defaultGroupOrigin || \"50% 50%\";\r\n            this.scale = [1, 1];\r\n        }\r\n\r\n\r\n        this._targetGroups = targetGroups;\r\n        this.renderGroupRects = renderGroupRects;\r\n        const transformOrigin = this.transformOrigin;\r\n        const rotation = this.rotation;\r\n        const scale = this.scale;\r\n        const { width, height, minX, minY } = rootGroupRect;\r\n        const posesInfo = rotatePosesInfo(\r\n            [\r\n                [0, 0],\r\n                [width, 0],\r\n                [0, height],\r\n                [width, height],\r\n            ],\r\n            convertTransformOriginArray(transformOrigin, width, height),\r\n            this.rotation / 180 * Math.PI,\r\n        );\r\n\r\n        const { minX: deltaX, minY: deltaY } = getMinMaxs(posesInfo.result);\r\n        const rotateScale = ` rotate(${rotation}deg)`\r\n            + ` scale(${sign(scale[0])}, ${sign(scale[1])})`;\r\n        const transform = `translate(${-deltaX}px, ${-deltaY}px)${rotateScale}`;\r\n\r\n        this.controlBox.style.transform\r\n            = `translate3d(${minX}px, ${minY}px, ${this.props.translateZ || 0})`;\r\n\r\n        target.style.cssText += `left:0px;top:0px;`\r\n            + `transform-origin:${transformOrigin};`\r\n            + `width:${width}px;height:${height}px;`\r\n            + `transform: ${transform}`;\r\n        state.width = width;\r\n        state.height = height;\r\n\r\n        const container = this.getContainer();\r\n        const info = getMoveableTargetInfo(\r\n            this.controlBox,\r\n            target,\r\n            this.controlBox,\r\n            this.getContainer(),\r\n            this._rootContainer || container,\r\n            [],\r\n        );\r\n        const pos = [info.left!, info.top!];\r\n        const [\r\n            pos1,\r\n            pos2,\r\n            pos3,\r\n            pos4,\r\n        ] = getAbsolutePosesByState(info); // info.left + info.pos(1 ~ 4)\r\n\r\n        const minPos = getMinMaxs([pos1, pos2, pos3, pos4]);\r\n        const delta = [minPos.minX, minPos.minY];\r\n        const direction = sign(scale[0] * scale[1]);\r\n\r\n        info.pos1 = minus(pos1, delta);\r\n        info.pos2 = minus(pos2, delta);\r\n        info.pos3 = minus(pos3, delta);\r\n        info.pos4 = minus(pos4, delta);\r\n        // info.left = info.left + delta[0];\r\n        // info.top = info.top + delta[1];\r\n        info.left = minX - info.left! + delta[0];\r\n        info.top = minY - info.top! + delta[1];\r\n        info.origin = minus(plus(pos, info.origin!), delta);\r\n        info.beforeOrigin = minus(plus(pos, info.beforeOrigin!), delta);\r\n        info.originalBeforeOrigin = plus(pos, info.originalBeforeOrigin!);\r\n        info.transformOrigin = minus(plus(pos, info.transformOrigin!), delta);\r\n        target.style.transform\r\n            = `translate(${-deltaX - delta[0]}px, ${-deltaY - delta[1]}px)`\r\n            + rotateScale;\r\n\r\n        setStoreCache();\r\n        this.updateState(\r\n            {\r\n                ...info,\r\n                posDelta: delta,\r\n                direction,\r\n                beforeDirection: direction,\r\n            },\r\n            isSetState,\r\n        );\r\n    }\r\n    public getRect(): RectInfo {\r\n        return {\r\n            ...super.getRect(),\r\n            children: this.moveables.map(child => child.getRect()),\r\n        };\r\n    }\r\n    public triggerEvent(name: string, e: any, isManager?: boolean): any {\r\n        if (isManager || name.indexOf(\"Group\") > -1) {\r\n            return super.triggerEvent(name as any, e);\r\n        } else {\r\n            this._emitter.trigger(name, e);\r\n        }\r\n    }\r\n    public getRequestChildStyles() {\r\n        const styleNames = this.getEnabledAbles().reduce((names, able) => {\r\n            const ableStyleNames = (able.requestChildStyle?.() ?? []) as Array<keyof CSSStyleDeclaration>;\r\n\r\n            return [...names, ...ableStyleNames];\r\n        }, [] as Array<keyof CSSStyleDeclaration>);\r\n\r\n\r\n        return styleNames;\r\n    }\r\n\r\n    public getMoveables(): MoveableManagerInterface[] {\r\n        return [...this.moveables];\r\n    }\r\n    protected updateAbles() {\r\n        super.updateAbles([...this.props.ables!, Groupable], \"Group\");\r\n    }\r\n    protected _updateTargets() {\r\n        super._updateTargets();\r\n        this._originalDragTarget = this.props.dragTarget || this.areaElement;\r\n        this._dragTarget = getRefTarget(this._originalDragTarget, true);\r\n    }\r\n    protected _updateEvents() {\r\n        const state = this.state;\r\n        const props = this.props;\r\n\r\n\r\n        const prevTarget = this._prevDragTarget;\r\n        const nextTarget = props.dragTarget || this.areaElement;\r\n        const targets = props.targets!;\r\n        const { added, changed, removed } = this.differ.update(targets);\r\n        const isTargetChanged = added.length || removed.length;\r\n\r\n        if (isTargetChanged || this._prevOriginalDragTarget !== this._originalDragTarget) {\r\n            unsetGesto(this, false);\r\n            unsetGesto(this, true);\r\n            this.updateState({ gestos: {} });\r\n        }\r\n        if (prevTarget !== nextTarget) {\r\n            state.target = null;\r\n        }\r\n        if (!state.target) {\r\n            state.target = this.areaElement;\r\n            this.controlBox.style.display = \"block\";\r\n        }\r\n        if (state.target) {\r\n            if (!this.targetGesto) {\r\n                this.targetGesto = getTargetAbleGesto(this, this._dragTarget!, \"Group\");\r\n            }\r\n            if (!this.controlGesto) {\r\n                this.controlGesto = getAbleGesto(this, this.controlBox, \"controlAbles\", \"GroupControl\");\r\n            }\r\n        }\r\n        const isContainerChanged = !equals(state.container, props.container);\r\n\r\n        if (isContainerChanged) {\r\n            state.container = props.container;\r\n        }\r\n\r\n\r\n        if (\r\n            isContainerChanged\r\n            || isTargetChanged\r\n            || this.transformOrigin !== (props.defaultGroupOrigin || \"50% 50%\")\r\n            || changed.length\r\n            || targets.length && !isDeepArrayEquals(this._targetGroups, props.targetGroups || [])\r\n        ) {\r\n            this.updateRect();\r\n            this._hasFirstTargets = true;\r\n        }\r\n        this._isPropTargetChanged = !!isTargetChanged;\r\n    }\r\n    protected _updateObserver() { }\r\n}\r\n\r\n/**\r\n * Sets the initial rotation of the group.\r\n * @name Moveable.Group#defaultGroupRotate\r\n * @default 0\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *   target: [].slice.call(document.querySelectorAll(\".target\")),\r\n *   defaultGroupRotate: 0,\r\n * });\r\n *\r\n * moveable.defaultGroupRotate = 40;\r\n */\r\n\r\n/**\r\n * Sets the initial origin of the group.\r\n * @name Moveable.Group#defaultGroupOrigin\r\n * @default 0\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *   target: [].slice.call(document.querySelectorAll(\".target\")),\r\n *   defaultGroupOrigin: \"50% 50%\",\r\n * });\r\n *\r\n * moveable.defaultGroupOrigin = \"20% 40%\";\r\n */\r\n\r\n\r\n/**\r\n * Whether to hide the line in child moveable for group corresponding to the rect of the target.\r\n * @name Moveable.Group#hideChildMoveableDefaultLines\r\n * @default false\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *   target: [].slice.call(document.querySelectorAll(\".target\")),\r\n *   hideChildMoveableDefaultLines: false,\r\n * });\r\n *\r\n * moveable.hideChildMoveableDefaultLines = true;\r\n */\r\nexport default MoveableGroup;\r\n","import { ref, refs } from \"framework-utils\";\r\nimport * as React from \"react\";\r\nimport MoveableManager from \"./MoveableManager\";\r\nimport { GroupableProps, IndividualGroupableProps, MoveableManagerInterface, RectInfo, Requester } from \"./types\";\r\nimport { prefix } from \"./utils\";\r\nimport { setStoreCache } from \"./store/Store\";\r\nimport { find } from \"@daybrush/utils\";\r\n\r\n/**\r\n * @namespace Moveable.IndividualGroup\r\n * @description Create targets individually, not as a group.Create targets individually, not as a group.\r\n */\r\nclass MoveableIndividualGroup extends MoveableManager<GroupableProps & IndividualGroupableProps> {\r\n    public moveables: MoveableManager[] = [];\r\n    public render() {\r\n        const props = this.props;\r\n        const {\r\n            cspNonce,\r\n            cssStyled: ControlBoxElement,\r\n            persistData,\r\n        } = props;\r\n\r\n        let targets: Array<HTMLElement | SVGElement | null | undefined> = props.targets || [];\r\n        const length = targets.length;\r\n        const canPersist = this.isUnmounted || !length;\r\n        let persistDatChildren = persistData?.children ?? [];\r\n\r\n        if (canPersist && !length && persistDatChildren.length) {\r\n            targets = persistDatChildren.map(() => null);\r\n        } else if (!canPersist) {\r\n            persistDatChildren = [];\r\n        }\r\n\r\n        return <ControlBoxElement\r\n            cspNonce={cspNonce}\r\n            ref={ref(this, \"controlBox\")}\r\n            className={prefix(\"control-box\")}>\r\n            {targets!.map((target, i) => {\r\n                const individualProps = props.individualGroupableProps?.(target, i) ?? {};\r\n                return <MoveableManager\r\n                    key={\"moveable\" + i}\r\n                    ref={refs(this, \"moveables\", i)}\r\n                    {...props}\r\n                    {...individualProps}\r\n                    target={target}\r\n                    wrapperMoveable={this}\r\n                    isWrapperMounted={this.isMoveableMounted}\r\n                    persistData={persistDatChildren[i]}\r\n\r\n                />;\r\n            })}\r\n        </ControlBoxElement>;\r\n    }\r\n    public componentDidMount() {}\r\n    public componentDidUpdate() {}\r\n    public getTargets() {\r\n        return this.props.targets!;\r\n    }\r\n    public updateRect(type?: \"Start\" | \"\" | \"End\", isTarget?: boolean, isSetState: boolean = true) {\r\n        setStoreCache(true);\r\n        this.moveables.forEach(moveable => {\r\n            moveable.updateRect(type, isTarget, isSetState);\r\n        });\r\n        setStoreCache();\r\n    }\r\n    public getRect(): RectInfo {\r\n        return {\r\n            ...super.getRect(),\r\n            children: this.moveables.map(child => child.getRect()),\r\n        };\r\n    }\r\n    public request(\r\n        ableName: string,\r\n        param: Record<string, any> = {},\r\n        isInstant?: boolean,\r\n    ): Requester {\r\n        const results = this.moveables.map(m => m.request(ableName, {...param, isInstant: false }, false));\r\n        const requestInstant = isInstant || param.isInstant;\r\n        const requester: Requester = {\r\n            request(ableParam: Record<string, any>) {\r\n                results.forEach(r => r.request(ableParam));\r\n                return this;\r\n            },\r\n            requestEnd() {\r\n                results.forEach(r => r.requestEnd());\r\n                return this;\r\n            },\r\n        };\r\n        return requestInstant ? requester.request(param).requestEnd() : requester;\r\n    }\r\n    public dragStart(e: MouseEvent | TouchEvent) {\r\n        const inputTarget = e.target as HTMLElement;\r\n        const childMoveable = find(this.moveables, child => {\r\n            const target = child.getTargets()[0];\r\n            const controlBoxElement = child.getControlBoxElement();\r\n            const dragElement = child.getDragElement();\r\n\r\n            if (!target || !dragElement) {\r\n                return false;\r\n            }\r\n            return dragElement === inputTarget || dragElement.contains(inputTarget)\r\n                || (dragElement !== target && target === inputTarget || target.contains(inputTarget))\r\n                || controlBoxElement === inputTarget || controlBoxElement.contains(inputTarget);\r\n        });\r\n\r\n        if (childMoveable) {\r\n            childMoveable.dragStart(e);\r\n        }\r\n        return this;\r\n    }\r\n    public hitTest() {\r\n        return 0;\r\n    }\r\n    public isInside() {\r\n        return false;\r\n    }\r\n    public isDragging() {\r\n        return false;\r\n    }\r\n    public getDragElement() {\r\n        return null;\r\n    }\r\n    public getMoveables(): MoveableManagerInterface[] {\r\n        return [...this.moveables];\r\n    }\r\n    public updateRenderPoses() { }\r\n    public checkUpdate() { }\r\n    public triggerEvent() { }\r\n    protected updateAbles() { }\r\n    protected _updateEvents() { }\r\n    protected _updateObserver() {}\r\n}\r\n\r\n/**\r\n * Create targets individually, not as a group.\r\n * @name Moveable.IndividualGroup#individualGroupable\r\n * @example\r\n * import Moveable from \"moveable\";\r\n *\r\n * const moveable = new Moveable(document.body, {\r\n *   target: [].slice.call(document.querySelectorAll(\".target\")),\r\n *   individualGroupable: true,\r\n * });\r\n */\r\nexport default MoveableIndividualGroup;\r\n","import * as React from \"react\";\r\nimport {\r\n    Able, MoveableInterface, GroupableProps, MoveableDefaultProps,\r\n    IndividualGroupableProps, MoveableManagerInterface, MoveableRefTargetsResultType,\r\n    MoveableTargetGroupsType, BeforeRenderableProps, RenderableProps, MoveableManagerState,\r\n} from \"./types\";\r\nimport MoveableManager from \"./MoveableManager\";\r\nimport MoveableGroup from \"./MoveableGroup\";\r\nimport { ref, withMethods, prefixCSS } from \"framework-utils\";\r\nimport { find, getKeys, IObject, isArray, isString } from \"@daybrush/utils\";\r\nimport { MOVEABLE_METHODS, PREFIX, MOVEABLE_CSS } from \"./consts\";\r\nimport Default from \"./ables/Default\";\r\nimport Groupable from \"./ables/Groupable\";\r\nimport DragArea from \"./ables/DragArea\";\r\nimport { styled } from \"react-css-styled\";\r\nimport { getRefTargets } from \"./utils\";\r\nimport IndividualGroupable from \"./ables/IndividualGroupable\";\r\nimport MoveableIndividualGroup from \"./MoveableIndividualGroup\";\r\nimport ChildrenDiffer from \"@egjs/children-differ\";\r\n\r\nfunction getElementTargets(\r\n    refTargets: MoveableRefTargetsResultType,\r\n    selectorMap: IObject<Array<HTMLElement | SVGElement>>,\r\n): Array<SVGElement | HTMLElement> {\r\n    const elementTargets: Array<SVGElement | HTMLElement> = [];\r\n\r\n    refTargets.forEach(target => {\r\n        if (!target) {\r\n            return;\r\n        }\r\n        if (isString(target)) {\r\n            if (selectorMap[target]) {\r\n                elementTargets.push(...selectorMap[target]);\r\n            }\r\n            return;\r\n        }\r\n        if (isArray(target)) {\r\n            elementTargets.push(...getElementTargets(target, selectorMap));\r\n        } else {\r\n            elementTargets.push(target);\r\n        }\r\n    });\r\n\r\n    return elementTargets;\r\n}\r\n\r\nfunction getTargetGroups(\r\n    refTargets: MoveableRefTargetsResultType,\r\n    selectorMap: IObject<Array<HTMLElement | SVGElement>>,\r\n) {\r\n    const targetGroups: MoveableTargetGroupsType = [];\r\n\r\n    refTargets.forEach(target => {\r\n        if (!target) {\r\n            return;\r\n        }\r\n        if (isString(target)) {\r\n            if (selectorMap[target]) {\r\n                targetGroups.push(...selectorMap[target]);\r\n            }\r\n            return;\r\n        }\r\n        if (isArray(target)) {\r\n            targetGroups.push(getTargetGroups(target, selectorMap));\r\n        } else {\r\n            targetGroups.push(target);\r\n        }\r\n    });\r\n\r\n    return targetGroups;\r\n}\r\n\r\nfunction compareRefTargets(\r\n    prevRefTargets: MoveableRefTargetsResultType,\r\n    nextRefTargets: MoveableRefTargetsResultType,\r\n): boolean {\r\n    return (prevRefTargets.length !== nextRefTargets.length) || prevRefTargets.some((target, i) => {\r\n        const nextTarget = nextRefTargets[i];\r\n\r\n        if (!target && !nextTarget) {\r\n            return false;\r\n        } else if (target != nextTarget) {\r\n            if (isArray(target) && isArray(nextTarget)) {\r\n                return compareRefTargets(target, nextTarget);\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    });\r\n}\r\n\r\ntype DefaultAbles = GroupableProps & IndividualGroupableProps & BeforeRenderableProps & RenderableProps;\r\n\r\nexport class InitialMoveable<T = {}>\r\n    extends React.PureComponent<MoveableDefaultProps & DefaultAbles & T> {\r\n    public static defaultAbles: readonly Able<any>[] = [];\r\n    public static customStyledMap: Record<string, any> = {};\r\n    public static defaultStyled: any = null;\r\n    public static makeStyled() {\r\n        const cssMap: IObject<boolean> = {};\r\n\r\n        const ables = this.getTotalAbles();\r\n        ables.forEach(({ css }: Able) => {\r\n            if (!css) {\r\n                return;\r\n            }\r\n            css.forEach(text => {\r\n                cssMap[text] = true;\r\n            });\r\n        });\r\n        const style = getKeys(cssMap).join(\"\\n\");\r\n\r\n        this.defaultStyled = styled(\"div\", prefixCSS(PREFIX, MOVEABLE_CSS + style));\r\n    }\r\n    public static getTotalAbles(): Able[] {\r\n        return [Default, Groupable, IndividualGroupable, DragArea, ...this.defaultAbles];\r\n    }\r\n    @withMethods(MOVEABLE_METHODS)\r\n    public moveable!: MoveableManager | MoveableGroup | MoveableIndividualGroup;\r\n    public refTargets: MoveableRefTargetsResultType = [];\r\n    public selectorMap: IObject<Array<HTMLElement | SVGElement>> = {};\r\n    private _differ: ChildrenDiffer<HTMLElement | SVGElement> = new ChildrenDiffer();\r\n    private _elementTargets: Array<HTMLElement | SVGElement> = [];\r\n    private _tmpRefTargets: MoveableRefTargetsResultType = [];\r\n    private _tmpSelectorMap: IObject<Array<HTMLElement | SVGElement>> = {};\r\n    private _onChangeTargets: (() => void) | null = null;\r\n    public render() {\r\n        const moveableContructor = (this.constructor as typeof InitialMoveable);\r\n\r\n        if (!moveableContructor.defaultStyled) {\r\n            moveableContructor.makeStyled();\r\n        }\r\n        const {\r\n            ables: userAbles,\r\n            props: userProps,\r\n            ...props\r\n        } = this.props;\r\n        const [\r\n            refTargets,\r\n            nextSelectorMap,\r\n        ] = this._updateRefs(true);\r\n        const elementTargets = getElementTargets(refTargets, nextSelectorMap);\r\n\r\n        let isGroup = elementTargets.length > 1;\r\n        const totalAbles = moveableContructor.getTotalAbles();\r\n        const ables = [\r\n            ...totalAbles,\r\n            ...(userAbles as any || []),\r\n        ];\r\n        const nextProps = {\r\n            ...props,\r\n            ...(userProps || {}),\r\n            ables,\r\n            cssStyled: moveableContructor.defaultStyled,\r\n            customStyledMap: moveableContructor.customStyledMap,\r\n        };\r\n\r\n        this._elementTargets = elementTargets;\r\n\r\n        let firstRenderState: MoveableManagerState | null = null;\r\n        const prevMoveable = this.moveable;\r\n\r\n\r\n        const persistData = props.persistData;\r\n\r\n        if (persistData?.children) {\r\n            isGroup = true;\r\n        }\r\n        // Even one child is treated as a group if individualGroupable is enabled. #867\r\n        if (props.individualGroupable) {\r\n            return <MoveableIndividualGroup key=\"individual-group\" ref={ref(this, \"moveable\")}\r\n                {...nextProps}\r\n                target={null}\r\n                targets={elementTargets}\r\n            />;\r\n        }\r\n        if (isGroup) {\r\n            const targetGroups = getTargetGroups(refTargets, nextSelectorMap);\r\n\r\n            // manager\r\n            if (prevMoveable && !prevMoveable.props.groupable && !(prevMoveable.props as any).individualGroupable) {\r\n                const target = prevMoveable.props.target!;\r\n\r\n                if (target && elementTargets.indexOf(target) > -1) {\r\n                    firstRenderState = { ...prevMoveable.state };\r\n                }\r\n            }\r\n\r\n            return <MoveableGroup key=\"group\" ref={ref(this, \"moveable\")}\r\n                {...nextProps}\r\n                {...props.groupableProps ?? {}}\r\n                target={null}\r\n                targets={elementTargets}\r\n                targetGroups={targetGroups}\r\n                firstRenderState={firstRenderState}\r\n            />;\r\n        } else {\r\n            const target = elementTargets[0];\r\n            // manager\r\n            if (prevMoveable && (prevMoveable.props.groupable || (prevMoveable.props as any).individualGroupable)) {\r\n                const moveables = (prevMoveable as MoveableGroup | MoveableIndividualGroup).moveables || [];\r\n                const prevTargetMoveable = find(moveables, mv => mv.props.target === target);\r\n\r\n                if (prevTargetMoveable) {\r\n                    firstRenderState = { ...prevTargetMoveable.state };\r\n                }\r\n            }\r\n\r\n            return <MoveableManager<any> key=\"single\" ref={ref(this, \"moveable\")}\r\n                {...nextProps}\r\n                target={target}\r\n                firstRenderState={firstRenderState} />;\r\n        }\r\n    }\r\n    public componentDidMount() {\r\n        this._checkChangeTargets();\r\n    }\r\n    public componentDidUpdate() {\r\n        this._checkChangeTargets();\r\n    }\r\n    public componentWillUnmount() {\r\n        this.selectorMap = {};\r\n        this.refTargets = [];\r\n    }\r\n    /**\r\n     * Get targets set in moveable through target or targets of props.\r\n     * @method Moveable#getTargets\r\n     * @example\r\n     * import Moveable from \"moveable\";\r\n     *\r\n     * const moveable = new Moveable(document.body, {\r\n     *    target: [targetRef, \".target\", document.querySelectorAll(\".target\")],\r\n     * });\r\n     *\r\n     * console.log(moveable.getTargets());\r\n     */\r\n    public getTargets() {\r\n        return this.moveable?.getTargets() ?? [];\r\n    }\r\n    /**\r\n     * If the element list corresponding to the selector among the targets is changed, it is updated.\r\n     * @method Moveable#updateSelectors\r\n     * @example\r\n     * import Moveable from \"moveable\";\r\n     *\r\n     * const moveable = new Moveable(document.body, {\r\n     *    target: \".target\",\r\n     * });\r\n     *\r\n     * moveable.updateSelectors();\r\n     */\r\n    public updateSelectors() {\r\n        this.selectorMap = {};\r\n        this._updateRefs();\r\n    }\r\n    /**\r\n     * User changes target and waits for target to change.\r\n     * @method Moveable#waitToChangeTarget\r\n     * @story combination-with-other-components--components-selecto\r\n     * @example\r\n     * document.querySelector(\".target\").addEventListener(\"mousedown\", e => {\r\n     *   moveable.waitToChangeTarget().then(() => {\r\n     *      moveable.dragStart(e.currentTarget);\r\n     *   });\r\n     *   moveable.target = e.currentTarget;\r\n     * });\r\n     */\r\n    public waitToChangeTarget(): Promise<void> {\r\n        // let resolvePromise: (e: OnChangeTarget) => void;\r\n\r\n        // this._onChangeTargets = () => {\r\n        //     this._onChangeTargets = null;\r\n        //     resolvePromise({\r\n        //         moveable: this.getManager(),\r\n        //         targets: this._elementTargets,\r\n        //     });\r\n        // };\r\n\r\n        // return new Promise<OnChangeTarget>(resolve => {\r\n        //     resolvePromise = resolve;\r\n        // });\r\n        let resolvePromise: () => void;\r\n\r\n        this._onChangeTargets = () => {\r\n            this._onChangeTargets = null;\r\n            resolvePromise();\r\n        };\r\n\r\n        return new Promise(resolve => {\r\n            resolvePromise = resolve;\r\n        });\r\n    }\r\n    public waitToChangeTargets(): Promise<void> {\r\n        return this.waitToChangeTarget();\r\n    }\r\n    public getManager(): MoveableManagerInterface<any, any> {\r\n        return this.moveable;\r\n    }\r\n    public getMoveables(): MoveableManagerInterface[] {\r\n        return this.moveable.getMoveables();\r\n    }\r\n    public getDragElement(): HTMLElement | SVGElement | null | undefined {\r\n        return this.moveable.getDragElement();\r\n    }\r\n    private _updateRefs(isRender?: boolean) {\r\n        const prevRefTargets = this.refTargets;\r\n        const nextRefTargets = getRefTargets((this.props.target || this.props.targets) as any);\r\n        const isBrowser = typeof document !== \"undefined\";\r\n\r\n        let isUpdate = compareRefTargets(prevRefTargets, nextRefTargets);\r\n        const selectorMap = this.selectorMap;\r\n        const nextSelectorMap: IObject<Array<HTMLElement | SVGElement>> = {};\r\n\r\n        this.refTargets.forEach(function updateSelectorMap(target) {\r\n            if (isString(target)) {\r\n                const selectorTarget = selectorMap[target];\r\n\r\n                if (selectorTarget) {\r\n                    nextSelectorMap[target] = selectorMap[target];\r\n                } else if (isBrowser) {\r\n                    isUpdate = true;\r\n                    nextSelectorMap[target] = [].slice.call(document.querySelectorAll(target));\r\n                }\r\n            } else if (isArray(target)) {\r\n                target.forEach(updateSelectorMap);\r\n            }\r\n        });\r\n\r\n        this._tmpRefTargets = nextRefTargets;\r\n        this._tmpSelectorMap = nextSelectorMap;\r\n\r\n        return [\r\n            nextRefTargets,\r\n            nextSelectorMap,\r\n            !isRender && isUpdate,\r\n        ] as const;\r\n    }\r\n    private _checkChangeTargets() {\r\n        this.refTargets = this._tmpRefTargets;\r\n        this.selectorMap = this._tmpSelectorMap;\r\n\r\n        const { added, removed } = this._differ.update(this._elementTargets);\r\n        const isTargetChanged = added.length || removed.length;\r\n\r\n        if (isTargetChanged) {\r\n            this.props.onChangeTargets?.({\r\n                moveable: this.moveable,\r\n                targets: this._elementTargets,\r\n            });\r\n            this._onChangeTargets?.();\r\n        }\r\n        const [\r\n            refTargets,\r\n            selectorMap,\r\n            isUpdate,\r\n        ] = this._updateRefs();\r\n\r\n        this.refTargets = refTargets;\r\n        this.selectorMap = selectorMap;\r\n\r\n        if (isUpdate) {\r\n            this.forceUpdate();\r\n        }\r\n    }\r\n}\r\nexport interface InitialMoveable<T = {}>\r\n    extends React.PureComponent<MoveableDefaultProps & DefaultAbles & T>,\r\n    MoveableInterface {\r\n    setState(state: any, callback?: () => any): any;\r\n    forceUpdate(callback?: () => any): any;\r\n}\r\n","import { MoveableProps, Able } from \"./types\";\r\nimport { MOVEABLE_ABLES } from \"./ables/consts\";\r\nimport { InitialMoveable } from \"./InitialMoveable\";\r\n\r\nexport default class Moveable<T = {}> extends InitialMoveable<MoveableProps & T> {\r\n    public static defaultAbles: Able[] = MOVEABLE_ABLES as any;\r\n}\r\n","import { Able } from \"./types\";\r\nimport { InitialMoveable } from \"./InitialMoveable\";\r\n\r\nexport function makeMoveable<T extends Record<string, any> = {}>(\r\n    ables: Array<Able<T>>,\r\n): typeof InitialMoveable & (new (...args: any[]) => InitialMoveable<T>) {\r\n    return class Moveable extends InitialMoveable<T> {\r\n        public static defaultAbles = ables;\r\n    };\r\n}\r\n","import Moveable, * as modules from \"./index.esm\";\r\n\r\nfor (const name in modules) {\r\n    (Moveable as any)[name] = (modules as any)[name];\r\n}\r\n\r\nmodule.exports = Moveable;\r\nexport * from \"./index.esm\";\r\nexport default Moveable;\r\n"],"names":["minus","invert","convertPositionMatrix","plus","calculate","findIndex","find","fromTranslation","multiply","matrix","splitUnit","dot","isString","convertDimension","parseMat","createScaleMatrix","isArray","splitSpace","parse","getDocumentElement","getDocumentBody","convertCSStoMatrix","createIdentityMatrix","createOriginMatrix","getWindow","createRotateMatrix","throttle","getKeys","getRad","isBoundRotate","rotate","TINY_NUM","average","getDist","throttleArray","directionCondition","convertUnitSize","isNumber","calculateBoundSize","hasClass","getOrigin","rotateMatrix","flat","isObject","diff","rotatableDragControlCondtion","prefixNames","multiplies","isUndefined","convertMatrixtoCSS","between","decamelize","toMat","isNode","isFunction","isWindow","calculateMatrixDist","counter","ignoreDimension","createWarpMatrix","removeClass","ref","addClass","requestAnimationFrame","splitBracket","splitComma","getMinMaxs","cancelAnimationFrame","React","fitPoints","getOverlapSize","getAreaSize","isInside","styled","createElement","refs","pushSet","getIntersectionPointsByConstants","prefixCSS","withMethods"],"mappings":"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"}